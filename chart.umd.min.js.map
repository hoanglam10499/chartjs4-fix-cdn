{"version":3,"file":"chart.umd.min.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.ts","../src/helpers/helpers.config.ts","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\r\n * @namespace Chart.helpers\r\n */\r\n\r\nimport type {AnyObject} from '../types/basic.js';\r\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\r\n\r\n/**\r\n * An empty function that can be used, for example, for optional callback.\r\n */\r\nexport function noop() {\r\n  /* noop */\r\n}\r\n\r\n/**\r\n * Returns a unique id, sequentially generated from a global variable.\r\n */\r\nexport const uid = (() => {\r\n  let id = 0;\r\n  return () => id++;\r\n})();\r\n\r\n/**\r\n * Returns true if `value` is neither null nor undefined, else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */\r\nexport function isNullOrUndef(value: unknown): value is null | undefined {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * Returns true if `value` is an array (including typed arrays), else returns false.\r\n * @param value - The value to test.\r\n * @function\r\n */\r\nexport function isArray<T = unknown>(value: unknown): value is T[] {\r\n  if (Array.isArray && Array.isArray(value)) {\r\n    return true;\r\n  }\r\n  const type = Object.prototype.toString.call(value);\r\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns true if `value` is an object (excluding null), else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */\r\nexport function isObject(value: unknown): value is AnyObject {\r\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\n\r\n/**\r\n * Returns true if `value` is a finite number, else returns false\r\n * @param value  - The value to test.\r\n */\r\nfunction isNumberFinite(value: unknown): value is number {\r\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\n}\r\nexport {\r\n  isNumberFinite as isFinite,\r\n};\r\n\r\n/**\r\n * Returns `value` if finite, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is not finite.\r\n */\r\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\r\n  return isNumberFinite(value) ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Returns `value` if defined, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is undefined.\r\n */\r\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\r\n  return typeof value === 'undefined' ? defaultValue : value;\r\n}\r\n\r\nexport const toPercentage = (value: number | string, dimension: number) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100\r\n    : +value / dimension;\r\n\r\nexport const toDimension = (value: number | string, dimension: number) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100 * dimension\r\n    : +value;\r\n\r\n/**\r\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n * @param fn - The function to call.\r\n * @param args - The arguments with which `fn` should be called.\r\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\r\n */\r\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\r\n  fn: T | undefined,\r\n  args: unknown[],\r\n  thisArg?: TA\r\n): R | undefined {\r\n  if (fn && typeof fn.call === 'function') {\r\n    return fn.apply(thisArg, args);\r\n  }\r\n}\r\n\r\n/**\r\n * Note(SB) for performance sake, this method should only be used when loopable type\r\n * is unknown or in none intensive code (not called often and small loopable). Else\r\n * it's preferable to use a regular for() loop and save extra function calls.\r\n * @param loopable - The object or array to be iterated.\r\n * @param fn - The function to call for each item.\r\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\r\n * @param [reverse] - If true, iterates backward on the loopable.\r\n */\r\nexport function each<T, TA>(\r\n  loopable: Record<string, T>,\r\n  fn: (this: TA, v: T, i: string) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n): void;\r\nexport function each<T, TA>(\r\n  loopable: T[],\r\n  fn: (this: TA, v: T, i: number) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n): void;\r\nexport function each<T, TA>(\r\n  loopable: T[] | Record<string, T>,\r\n  fn: (this: TA, v: T, i: any) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n) {\r\n  let i: number, len: number, keys: string[];\r\n  if (isArray(loopable)) {\r\n    len = loopable.length;\r\n    if (reverse) {\r\n      for (i = len - 1; i >= 0; i--) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    } else {\r\n      for (i = 0; i < len; i++) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    }\r\n  } else if (isObject(loopable)) {\r\n    keys = Object.keys(loopable);\r\n    len = keys.length;\r\n    for (i = 0; i < len; i++) {\r\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n * @param a0 - The array to compare\r\n * @param a1 - The array to compare\r\n * @private\r\n */\r\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\r\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\r\n\r\n  if (!a0 || !a1 || a0.length !== a1.length) {\r\n    return false;\r\n  }\r\n\r\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n    v0 = a0[i];\r\n    v1 = a1[i];\r\n\r\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n * @param source - The value to clone.\r\n */\r\nexport function clone<T>(source: T): T {\r\n  if (isArray(source)) {\r\n    return source.map(clone) as unknown as T;\r\n  }\r\n\r\n  if (isObject(source)) {\r\n    const target = Object.create(null);\r\n    const keys = Object.keys(source);\r\n    const klen = keys.length;\r\n    let k = 0;\r\n\r\n    for (; k < klen; ++k) {\r\n      target[keys[k]] = clone(source[keys[k]]);\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  return source;\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\r\n}\r\n\r\n/**\r\n * The default merger when Chart.helpers.merge is called without merger option.\r\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\r\n * @private\r\n */\r\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n\r\n  if (isObject(tval) && isObject(sval)) {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    merge(tval, sval, options);\r\n  } else {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\n\r\nexport interface MergeOptions {\r\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\r\n}\r\n\r\n/**\r\n * Recursively deep copies `source` properties into `target` with the given `options`.\r\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n * @param target - The target object in which all sources are merged into.\r\n * @param source - Object(s) to merge into `target`.\r\n * @param [options] - Merging options:\r\n * @param [options.merger] - The merge method (key, target, source, options)\r\n * @returns The `target` object.\r\n */\r\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\r\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\r\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\r\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\r\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\r\nexport function merge<T, S1, S2, S3, S4>(\r\n  target: T,\r\n  source: [S1, S2, S3, S4],\r\n  options?: MergeOptions\r\n): T & S1 & S2 & S3 & S4;\r\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\r\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\r\n  const sources = isArray(source) ? source : [source];\r\n  const ilen = sources.length;\r\n\r\n  if (!isObject(target)) {\r\n    return target as AnyObject;\r\n  }\r\n\r\n  options = options || {};\r\n  const merger = options.merger || _merger;\r\n  let current: AnyObject;\r\n\r\n  for (let i = 0; i < ilen; ++i) {\r\n    current = sources[i];\r\n    if (!isObject(current)) {\r\n      continue;\r\n    }\r\n\r\n    const keys = Object.keys(current);\r\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\r\n      merger(keys[k], target, current, options as AnyObject);\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n * @param target - The target object in which all sources are merged into.\r\n * @param source - Object(s) to merge into `target`.\r\n * @returns The `target` object.\r\n */\r\nexport function mergeIf<T>(target: T, source: []): T;\r\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\r\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\r\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\r\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\r\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\r\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\r\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\r\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n  return merge<T>(target, source, {merger: _mergerIf});\r\n}\r\n\r\n/**\r\n * Merges source[key] in target[key] only if target[key] is undefined.\r\n * @private\r\n */\r\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n\r\n  if (isObject(tval) && isObject(sval)) {\r\n    mergeIf(tval, sval);\r\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\r\n  if (value !== undefined) {\r\n    console.warn(scope + ': \"' + previous +\r\n      '\" is deprecated. Please use \"' + current + '\" instead');\r\n  }\r\n}\r\n\r\n// resolveObjectKey resolver cache\r\nconst keyResolvers = {\r\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\r\n  '': v => v,\r\n  // default resolvers\r\n  x: o => o.x,\r\n  y: o => o.y\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _splitKey(key: string) {\r\n  const parts = key.split('.');\r\n  const keys: string[] = [];\r\n  let tmp = '';\r\n  for (const part of parts) {\r\n    tmp += part;\r\n    if (tmp.endsWith('\\\\')) {\r\n      tmp = tmp.slice(0, -1) + '.';\r\n    } else {\r\n      keys.push(tmp);\r\n      tmp = '';\r\n    }\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction _getKeyResolver(key: string) {\r\n  const keys = _splitKey(key);\r\n  return obj => {\r\n    for (const k of keys) {\r\n      if (k === '') {\r\n        // For backward compatibility:\r\n        // Chart.helpers.core resolveObjectKey should break at empty key\r\n        break;\r\n      }\r\n      obj = obj && obj[k];\r\n    }\r\n    return obj;\r\n  };\r\n}\r\n\r\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\r\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\r\n  return resolver(obj);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _capitalize(str: string) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n\r\nexport const defined = (value: unknown) => typeof value !== 'undefined';\r\n\r\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\r\n\r\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\r\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\r\n  if (a.size !== b.size) {\r\n    return false;\r\n  }\r\n\r\n  for (const item of a) {\r\n    if (!b.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param e - The event\r\n * @private\r\n */\r\nexport function _isClickEvent(e: ChartEvent) {\r\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\r\n}\r\n","import type {Point} from '../types/geometric.js';\r\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\r\n\r\n/**\r\n * @alias Chart.helpers.math\r\n * @namespace\r\n */\r\n\r\nexport const PI = Math.PI;\r\nexport const TAU = 2 * PI;\r\nexport const PITAU = TAU + PI;\r\nexport const INFINITY = Number.POSITIVE_INFINITY;\r\nexport const RAD_PER_DEG = PI / 180;\r\nexport const HALF_PI = PI / 2;\r\nexport const QUARTER_PI = PI / 4;\r\nexport const TWO_THIRDS_PI = PI * 2 / 3;\r\n\r\nexport const log10 = Math.log10;\r\nexport const sign = Math.sign;\r\n\r\nexport function almostEquals(x: number, y: number, epsilon: number) {\r\n  return Math.abs(x - y) < epsilon;\r\n}\r\n\r\n/**\r\n * Implementation of the nice number algorithm used in determining where axis labels will go\r\n */\r\nexport function niceNum(range: number) {\r\n  const roundedRange = Math.round(range);\r\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\r\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n  const fraction = range / niceRange;\r\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n  return niceFraction * niceRange;\r\n}\r\n\r\n/**\r\n * Returns an array of factors sorted from 1 to sqrt(value)\r\n * @private\r\n */\r\nexport function _factorize(value: number) {\r\n  const result: number[] = [];\r\n  const sqrt = Math.sqrt(value);\r\n  let i: number;\r\n\r\n  for (i = 1; i < sqrt; i++) {\r\n    if (value % i === 0) {\r\n      result.push(i);\r\n      result.push(value / i);\r\n    }\r\n  }\r\n  if (sqrt === (sqrt | 0)) { // if value is a square number\r\n    result.push(sqrt);\r\n  }\r\n\r\n  result.sort((a, b) => a - b).pop();\r\n  return result;\r\n}\r\n\r\nexport function isNumber(n: unknown): n is number {\r\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\r\n}\r\n\r\nexport function almostWhole(x: number, epsilon: number) {\r\n  const rounded = Math.round(x);\r\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _setMinAndMaxByKey(\r\n  array: Record<string, number>[],\r\n  target: { min: number, max: number },\r\n  property: string\r\n) {\r\n  let i: number, ilen: number, value: number;\r\n\r\n  for (i = 0, ilen = array.length; i < ilen; i++) {\r\n    value = array[i][property];\r\n    if (!isNaN(value)) {\r\n      target.min = Math.min(target.min, value);\r\n      target.max = Math.max(target.max, value);\r\n    }\r\n  }\r\n}\r\n\r\nexport function toRadians(degrees: number) {\r\n  return degrees * (PI / 180);\r\n}\r\n\r\nexport function toDegrees(radians: number) {\r\n  return radians * (180 / PI);\r\n}\r\n\r\n/**\r\n * Returns the number of decimal places\r\n * i.e. the number of digits after the decimal point, of the value of this Number.\r\n * @param x - A number.\r\n * @returns The number of decimal places.\r\n * @private\r\n */\r\nexport function _decimalPlaces(x: number) {\r\n  if (!isFiniteNumber(x)) {\r\n    return;\r\n  }\r\n  let e = 1;\r\n  let p = 0;\r\n  while (Math.round(x * e) / e !== x) {\r\n    e *= 10;\r\n    p++;\r\n  }\r\n  return p;\r\n}\r\n\r\n// Gets the angle from vertical upright to the point about a centre.\r\nexport function getAngleFromPoint(\r\n  centrePoint: Point,\r\n  anglePoint: Point\r\n) {\r\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n  if (angle < (-0.5 * PI)) {\r\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n  }\r\n\r\n  return {\r\n    angle,\r\n    distance: radialDistanceFromCenter\r\n  };\r\n}\r\n\r\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\r\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n}\r\n\r\n/**\r\n * Shortest distance between angles, in either direction.\r\n * @private\r\n */\r\nexport function _angleDiff(a: number, b: number) {\r\n  return (a - b + PITAU) % TAU - PI;\r\n}\r\n\r\n/**\r\n * Normalize angle to be between 0 and 2*PI\r\n * @private\r\n */\r\nexport function _normalizeAngle(a: number) {\r\n  return (a % TAU + TAU) % TAU;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\r\n  const a = _normalizeAngle(angle);\r\n  const s = _normalizeAngle(start);\r\n  const e = _normalizeAngle(end);\r\n  const angleToStart = _normalizeAngle(s - a);\r\n  const angleToEnd = _normalizeAngle(e - a);\r\n  const startToAngle = _normalizeAngle(a - s);\r\n  const endToAngle = _normalizeAngle(a - e);\r\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\r\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\r\n}\r\n\r\n/**\r\n * Limit `value` between `min` and `max`\r\n * @param value\r\n * @param min\r\n * @param max\r\n * @private\r\n */\r\nexport function _limitValue(value: number, min: number, max: number) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * @param {number} value\r\n * @private\r\n */\r\nexport function _int16Range(value: number) {\r\n  return _limitValue(value, -32768, 32767);\r\n}\r\n\r\n/**\r\n * @param value\r\n * @param start\r\n * @param end\r\n * @param [epsilon]\r\n * @private\r\n */\r\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\r\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\r\n}\r\n","import {_capitalize} from './helpers.core.js';\r\n\r\n/**\r\n * Binary search\r\n * @param table - the table search. must be sorted!\r\n * @param value - value to find\r\n * @param cmp\r\n * @private\r\n */\r\nexport function _lookup(\r\n  table: number[],\r\n  value: number,\r\n  cmp?: (value: number) => boolean\r\n): {lo: number, hi: number};\r\nexport function _lookup<T>(\r\n  table: T[],\r\n  value: number,\r\n  cmp: (value: number) => boolean\r\n): {lo: number, hi: number};\r\nexport function _lookup(\r\n  table: unknown[],\r\n  value: number,\r\n  cmp?: (value: number) => boolean\r\n) {\r\n  cmp = cmp || ((index) => table[index] < value);\r\n  let hi = table.length - 1;\r\n  let lo = 0;\r\n  let mid: number;\r\n\r\n  while (hi - lo > 1) {\r\n    mid = (lo + hi) >> 1;\r\n    if (cmp(mid)) {\r\n      lo = mid;\r\n    } else {\r\n      hi = mid;\r\n    }\r\n  }\r\n\r\n  return {lo, hi};\r\n}\r\n\r\n/**\r\n * Binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @param last - lookup last index\r\n * @private\r\n */\r\nexport const _lookupByKey = (\r\n  table: Record<string, number>[],\r\n  key: string,\r\n  value: number,\r\n  last?: boolean\r\n) =>\r\n  _lookup(table, value, last\r\n    ? index => {\r\n      const ti = table[index][key];\r\n      return ti < value || ti === value && table[index + 1][key] === value;\r\n    }\r\n    : index => table[index][key] < value);\r\n\r\n/**\r\n * Reverse binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @private\r\n */\r\nexport const _rlookupByKey = (\r\n  table: Record<string, number>[],\r\n  key: string,\r\n  value: number\r\n) =>\r\n  _lookup(table, value, index => table[index][key] >= value);\r\n\r\n/**\r\n * Return subset of `values` between `min` and `max` inclusive.\r\n * Values are assumed to be in sorted order.\r\n * @param values - sorted array of values\r\n * @param min - min value\r\n * @param max - max value\r\n */\r\nexport function _filterBetween(values: number[], min: number, max: number) {\r\n  let start = 0;\r\n  let end = values.length;\r\n\r\n  while (start < end && values[start] < min) {\r\n    start++;\r\n  }\r\n  while (end > start && values[end - 1] > max) {\r\n    end--;\r\n  }\r\n\r\n  return start > 0 || end < values.length\r\n    ? values.slice(start, end)\r\n    : values;\r\n}\r\n\r\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\r\n\r\nexport interface ArrayListener<T> {\r\n  _onDataPush?(...item: T[]): void;\r\n  _onDataPop?(): void;\r\n  _onDataShift?(): void;\r\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\r\n  _onDataUnshift?(...item: T[]): void;\r\n}\r\n\r\n/**\r\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\r\n */\r\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\r\nexport function listenArrayEvents(array, listener) {\r\n  if (array._chartjs) {\r\n    array._chartjs.listeners.push(listener);\r\n    return;\r\n  }\r\n\r\n  Object.defineProperty(array, '_chartjs', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: {\r\n      listeners: [listener]\r\n    }\r\n  });\r\n\r\n  arrayEvents.forEach((key) => {\r\n    const method = '_onData' + _capitalize(key);\r\n    const base = array[key];\r\n\r\n    Object.defineProperty(array, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value(...args) {\r\n        const res = base.apply(this, args);\r\n\r\n        array._chartjs.listeners.forEach((object) => {\r\n          if (typeof object[method] === 'function') {\r\n            object[method](...args);\r\n          }\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Removes the given array event listener and cleanup extra attached properties (such as\r\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n */\r\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\r\nexport function unlistenArrayEvents(array, listener) {\r\n  const stub = array._chartjs;\r\n  if (!stub) {\r\n    return;\r\n  }\r\n\r\n  const listeners = stub.listeners;\r\n  const index = listeners.indexOf(listener);\r\n  if (index !== -1) {\r\n    listeners.splice(index, 1);\r\n  }\r\n\r\n  if (listeners.length > 0) {\r\n    return;\r\n  }\r\n\r\n  arrayEvents.forEach((key) => {\r\n    delete array[key];\r\n  });\r\n\r\n  delete array._chartjs;\r\n}\r\n\r\n/**\r\n * @param items\r\n */\r\nexport function _arrayUnique<T>(items: T[]) {\r\n  const set = new Set<T>(items);\r\n\r\n  if (set.size === items.length) {\r\n    return items;\r\n  }\r\n\r\n  return Array.from(set);\r\n}\r\n","import type {ChartMeta, PointElement} from '../types/index.js';\r\n\r\nimport {_limitValue} from './helpers.math.js';\r\nimport {_lookupByKey} from './helpers.collection.js';\r\n\r\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\r\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n}\r\n\r\n/**\r\n* Request animation polyfill\r\n*/\r\nexport const requestAnimFrame = (function() {\r\n  if (typeof window === 'undefined') {\r\n    return function(callback) {\r\n      return callback();\r\n    };\r\n  }\r\n  return window.requestAnimationFrame;\r\n}());\r\n\r\n/**\r\n * Throttles calling `fn` once per animation frame\r\n * Latest arguments are used on the actual call\r\n */\r\nexport function throttled<TArgs extends Array<any>>(\r\n  fn: (...args: TArgs) => void,\r\n  thisArg: any,\r\n) {\r\n  let argsToUse = [] as TArgs;\r\n  let ticking = false;\r\n\r\n  return function(...args: TArgs) {\r\n    // Save the args for use later\r\n    argsToUse = args;\r\n    if (!ticking) {\r\n      ticking = true;\r\n      requestAnimFrame.call(window, () => {\r\n        ticking = false;\r\n        fn.apply(thisArg, argsToUse);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Debounces calling `fn` for `delay` ms\r\n */\r\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\r\n  let timeout;\r\n  return function(...args: TArgs) {\r\n    if (delay) {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fn, delay, args);\r\n    } else {\r\n      fn.apply(this, args);\r\n    }\r\n    return delay;\r\n  };\r\n}\r\n\r\n/**\r\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\r\n * @private\r\n */\r\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\n\r\n/**\r\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\r\n * @private\r\n */\r\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\n\r\n/**\r\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\r\n * @private\r\n */\r\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\r\n  const check = rtl ? 'left' : 'right';\r\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\r\n};\r\n\r\n/**\r\n * Return start and count of visible points.\r\n * @private\r\n */\r\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\r\n  const pointCount = points.length;\r\n\r\n  let start = 0;\r\n  let count = pointCount;\r\n\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        // @ts-expect-error Need to type _parsed\r\n        _lookupByKey(_parsed, axis, min).lo,\r\n        // @ts-expect-error Need to fix types on _lookupByKey\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        // @ts-expect-error Need to type _parsed\r\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\r\n        // @ts-expect-error Need to fix types on _lookupByKey\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n\r\n  return {start, count};\r\n}\r\n\r\n/**\r\n * Checks if the scale ranges have changed.\r\n * @param {object} meta - dataset meta.\r\n * @returns {boolean}\r\n * @private\r\n */\r\nexport function _scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\r\n\r\n/**\r\n * @typedef { import('./core.animation.js').default } Animation\r\n * @typedef { import('./core.controller.js').default } Chart\r\n */\r\n\r\n/**\r\n * Please use the module's default export which provides a singleton instance\r\n * Note: class is export for typedoc\r\n */\r\nexport class Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            // if the animation has been updated and its duration prolonged,\r\n            // update to total duration of current animations run (for progress event)\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          // Remove the item by replacing it with last item and removing the last\r\n          // A lot faster than splice.\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n\r\n      remaining += items.length;\r\n    });\r\n\r\n    this._lastDate = date;\r\n\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n\r\n  /**\r\n\t * @param {Chart} chart\r\n\t * @param {string} event - event name\r\n\t * @param {Function} cb - callback\r\n\t */\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n\r\n  /**\r\n\t * Add animations\r\n\t * @param {Chart} chart\r\n\t * @param {Animation[]} items - animations\r\n\t */\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n\r\n  /**\r\n\t * Counts number of active animations for the chart\r\n\t * @param {Chart} chart\r\n\t */\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n\r\n  /**\r\n\t * Start animating (all charts)\r\n\t * @param {Chart} chart\r\n\t */\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n\t * Stop all animations for the chart\r\n\t * @param {Chart} chart\r\n\t */\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n\r\n  /**\r\n\t * Remove chart from Animator\r\n\t * @param {Chart} chart\r\n\t */\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\n\r\n// singleton instance\r\nexport default /* #__PURE__ */ new Animator();\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\r\n\r\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\r\n  if (value && typeof value === 'object') {\r\n    const type = value.toString();\r\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function color(value: CanvasGradient): CanvasGradient;\r\nexport function color(value: CanvasPattern): CanvasPattern;\r\nexport function color(\r\n  value:\r\n  | string\r\n  | { r: number; g: number; b: number; a: number }\r\n  | [number, number, number]\r\n  | [number, number, number, number]\r\n): Color;\r\nexport function color(value) {\r\n  return isPatternOrGradient(value) ? value : new Color(value);\r\n}\r\n\r\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\r\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\r\nexport function getHoverColor(value: string): string;\r\nexport function getHoverColor(value) {\r\n  return isPatternOrGradient(value)\r\n    ? value\r\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\r\n}\r\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\n\r\nexport function applyAnimationsDefaults(defaults) {\r\n  defaults.set('animation', {\r\n    delay: undefined,\r\n    duration: 1000,\r\n    easing: 'easeOutQuart',\r\n    fn: undefined,\r\n    from: undefined,\r\n    loop: undefined,\r\n    to: undefined,\r\n    type: undefined,\r\n  });\r\n\r\n  defaults.describe('animation', {\r\n    _fallback: false,\r\n    _indexable: false,\r\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n  });\r\n\r\n  defaults.set('animations', {\r\n    colors: {\r\n      type: 'color',\r\n      properties: colors\r\n    },\r\n    numbers: {\r\n      type: 'number',\r\n      properties: numbers\r\n    },\r\n  });\r\n\r\n  defaults.describe('animations', {\r\n    _fallback: 'animation',\r\n  });\r\n\r\n  defaults.set('transitions', {\r\n    active: {\r\n      animation: {\r\n        duration: 400\r\n      }\r\n    },\r\n    resize: {\r\n      animation: {\r\n        duration: 0\r\n      }\r\n    },\r\n    show: {\r\n      animations: {\r\n        colors: {\r\n          from: 'transparent'\r\n        },\r\n        visible: {\r\n          type: 'boolean',\r\n          duration: 0 // show immediately\r\n        },\r\n      }\r\n    },\r\n    hide: {\r\n      animations: {\r\n        colors: {\r\n          to: 'transparent'\r\n        },\r\n        visible: {\r\n          type: 'boolean',\r\n          easing: 'linear',\r\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\r\n        },\r\n      }\r\n    }\r\n  });\r\n}\r\n","\r\nconst intlCache = new Map<string, Intl.NumberFormat>();\r\n\r\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\r\n  options = options || {};\r\n  const cacheKey = locale + JSON.stringify(options);\r\n  let formatter = intlCache.get(cacheKey);\r\n  if (!formatter) {\r\n    formatter = new Intl.NumberFormat(locale, options);\r\n    intlCache.set(cacheKey, formatter);\r\n  }\r\n  return formatter;\r\n}\r\n\r\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\r\n  return getNumberFormat(locale, options).format(num);\r\n}\r\n","import {isArray} from '../helpers/helpers.core.js';\r\nimport {formatNumber} from '../helpers/helpers.intl.js';\r\nimport {log10} from '../helpers/helpers.math.js';\r\n\r\n/**\r\n * Namespace to hold formatters for different types of ticks\r\n * @namespace Chart.Ticks.formatters\r\n */\r\nconst formatters = {\r\n  /**\r\n   * Formatter for value labels\r\n   * @method Chart.Ticks.formatters.values\r\n   * @param value the value to display\r\n   * @return {string|string[]} the label to display\r\n   */\r\n  values(value) {\r\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\r\n  },\r\n\r\n  /**\r\n   * Formatter for numeric ticks\r\n   * @method Chart.Ticks.formatters.numeric\r\n   * @param tickValue {number} the value to be formatted\r\n   * @param index {number} the position of the tickValue parameter in the ticks array\r\n   * @param ticks {object[]} the list of ticks being converted\r\n   * @return {string} string representation of the tickValue parameter\r\n   */\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0'; // never show decimal places for 0\r\n    }\r\n\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\r\n\r\n    if (ticks.length > 1) {\r\n      // all ticks are small or there huge numbers; use scientific notation\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n\r\n    const logDelta = log10(Math.abs(delta));\r\n\r\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\r\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\r\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\r\n    //\r\n    // toFixed has a max of 20 decimal places\r\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n\r\n\r\n  /**\r\n   * Formatter for logarithmic ticks\r\n   * @method Chart.Ticks.formatters.logarithmic\r\n   * @param tickValue {number} the value to be formatted\r\n   * @param index {number} the position of the tickValue parameter in the ticks array\r\n   * @param ticks {object[]} the list of ticks being converted\r\n   * @return {string} string representation of the tickValue parameter\r\n   */\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\r\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n\r\n};\r\n\r\n\r\nfunction calculateDelta(tickValue, ticks) {\r\n  // Figure out how many digits to show\r\n  // The space between the first two ticks might be smaller than normal spacing\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n\r\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    // not an integer\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\n\r\n/**\r\n * Namespace to hold static tick generation functions\r\n * @namespace Chart.Ticks\r\n */\r\nexport default {formatters};\r\n","import {getHoverColor} from '../helpers/helpers.color.js';\r\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\r\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\r\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\r\nimport {applyScaleDefaults} from './core.scale.defaults.js';\r\n\r\nexport const overrides = Object.create(null);\r\nexport const descriptors = Object.create(null);\r\n\r\n/**\r\n * @param {object} node\r\n * @param {string} key\r\n * @return {object}\r\n */\r\nfunction getScope(node, key) {\r\n  if (!key) {\r\n    return node;\r\n  }\r\n  const keys = key.split('.');\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const k = keys[i];\r\n    node = node[k] || (node[k] = Object.create(null));\r\n  }\r\n  return node;\r\n}\r\n\r\nfunction set(root, scope, values) {\r\n  if (typeof scope === 'string') {\r\n    return merge(getScope(root, scope), values);\r\n  }\r\n  return merge(getScope(root, ''), scope);\r\n}\r\n\r\n/**\r\n * Please use the module's default export which provides a singleton instance\r\n * Note: class is exported for typedoc\r\n */\r\nexport class Defaults {\r\n  constructor(_descriptors, _appliers) {\r\n    this.animation = undefined;\r\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n    this.borderColor = 'rgba(0,0,0,0.1)';\r\n    this.color = '#666';\r\n    this.datasets = {};\r\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\r\n    this.elements = {};\r\n    this.events = [\r\n      'mousemove',\r\n      'mouseout',\r\n      'click',\r\n      'touchstart',\r\n      'touchmove'\r\n    ];\r\n    this.font = {\r\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n      size: 12,\r\n      style: 'normal',\r\n      lineHeight: 1.2,\r\n      weight: null\r\n    };\r\n    this.hover = {};\r\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\r\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\r\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\r\n    this.indexAxis = 'x';\r\n    this.interaction = {\r\n      mode: 'nearest',\r\n      intersect: true,\r\n      includeInvisible: false\r\n    };\r\n    this.maintainAspectRatio = true;\r\n    this.onHover = null;\r\n    this.onClick = null;\r\n    this.parsing = true;\r\n    this.plugins = {};\r\n    this.responsive = true;\r\n    this.scale = undefined;\r\n    this.scales = {};\r\n    this.showLine = true;\r\n    this.drawActiveElementsOnTop = true;\r\n\r\n    this.describe(_descriptors);\r\n    this.apply(_appliers);\r\n  }\r\n\r\n  /**\r\n\t * @param {string|object} scope\r\n\t * @param {object} [values]\r\n\t */\r\n  set(scope, values) {\r\n    return set(this, scope, values);\r\n  }\r\n\r\n  /**\r\n\t * @param {string} scope\r\n\t */\r\n  get(scope) {\r\n    return getScope(this, scope);\r\n  }\r\n\r\n  /**\r\n\t * @param {string|object} scope\r\n\t * @param {object} [values]\r\n\t */\r\n  describe(scope, values) {\r\n    return set(descriptors, scope, values);\r\n  }\r\n\r\n  override(scope, values) {\r\n    return set(overrides, scope, values);\r\n  }\r\n\r\n  /**\r\n\t * Routes the named defaults to fallback to another scope/name.\r\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\r\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\r\n\t * fallback is evaluated at each access, so its always up to date.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\r\n\t *   - reads the backgroundColor from defaults.color when undefined locally\r\n\t *\r\n\t * @param {string} scope Scope this route applies to.\r\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\r\n\t * @param {string} targetScope The namespace where those properties should be routed to.\r\n\t * Empty string ('') is the root of defaults.\r\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\r\n\t */\r\n  route(scope, name, targetScope, targetName) {\r\n    const scopeObject = getScope(this, scope);\r\n    const targetScopeObject = getScope(this, targetScope);\r\n    const privateName = '_' + name;\r\n\r\n    Object.defineProperties(scopeObject, {\r\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\r\n      [privateName]: {\r\n        value: scopeObject[name],\r\n        writable: true\r\n      },\r\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\r\n      [name]: {\r\n        enumerable: true,\r\n        get() {\r\n          const local = this[privateName];\r\n          const target = targetScopeObject[targetName];\r\n          if (isObject(local)) {\r\n            return Object.assign({}, target, local);\r\n          }\r\n          return valueOrDefault(local, target);\r\n        },\r\n        set(value) {\r\n          this[privateName] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  apply(appliers) {\r\n    appliers.forEach((apply) => apply(this));\r\n  }\r\n}\r\n\r\n// singleton instance\r\nexport default /* #__PURE__ */ new Defaults({\r\n  _scriptable: (name) => !name.startsWith('on'),\r\n  _indexable: (name) => name !== 'events',\r\n  hover: {\r\n    _fallback: 'interaction'\r\n  },\r\n  interaction: {\r\n    _scriptable: false,\r\n    _indexable: false,\r\n  }\r\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\r\n","export function applyLayoutsDefaults(defaults) {\r\n  defaults.set('layout', {\r\n    autoPadding: true,\r\n    padding: {\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0\r\n    }\r\n  });\r\n}\r\n","import Ticks from './core.ticks.js';\r\n\r\nexport function applyScaleDefaults(defaults) {\r\n  defaults.set('scale', {\r\n    display: true,\r\n    offset: false,\r\n    reverse: false,\r\n    beginAtZero: false,\r\n\r\n    /**\r\n     * Scale boundary strategy (bypassed by min/max time options)\r\n     * - `data`: make sure data are fully visible, ticks outside are removed\r\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\r\n     * @see https://github.com/chartjs/Chart.js/pull/4556\r\n     * @since 3.0.0\r\n     */\r\n    bounds: 'ticks',\r\n\r\n    clip: true,\r\n\r\n    /**\r\n     * Addition grace added to max and reduced from min data value.\r\n     * @since 3.0.0\r\n     */\r\n    grace: 0,\r\n\r\n    // grid line settings\r\n    grid: {\r\n      display: true,\r\n      lineWidth: 1,\r\n      drawOnChartArea: true,\r\n      drawTicks: true,\r\n      tickLength: 8,\r\n      tickWidth: (_ctx, options) => options.lineWidth,\r\n      tickColor: (_ctx, options) => options.color,\r\n      offset: false,\r\n    },\r\n\r\n    border: {\r\n      display: true,\r\n      dash: [],\r\n      dashOffset: 0.0,\r\n      width: 1\r\n    },\r\n\r\n    // scale title\r\n    title: {\r\n      // display property\r\n      display: false,\r\n\r\n      // actual label\r\n      text: '',\r\n\r\n      // top/bottom padding\r\n      padding: {\r\n        top: 4,\r\n        bottom: 4\r\n      }\r\n    },\r\n\r\n    // label settings\r\n    ticks: {\r\n      minRotation: 0,\r\n      maxRotation: 50,\r\n      mirror: false,\r\n      textStrokeWidth: 0,\r\n      textStrokeColor: '',\r\n      padding: 3,\r\n      display: true,\r\n      autoSkip: true,\r\n      autoSkipPadding: 3,\r\n      labelOffset: 0,\r\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n      callback: Ticks.formatters.values,\r\n      minor: {},\r\n      major: {},\r\n      align: 'center',\r\n      crossAlign: 'near',\r\n\r\n      showLabelBackdrop: false,\r\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n      backdropPadding: 2,\r\n    }\r\n  });\r\n\r\n  defaults.route('scale.ticks', 'color', '', 'color');\r\n  defaults.route('scale.grid', 'color', '', 'borderColor');\r\n  defaults.route('scale.border', 'color', '', 'borderColor');\r\n  defaults.route('scale.title', 'color', '', 'color');\r\n\r\n  defaults.describe('scale', {\r\n    _fallback: false,\r\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\r\n  });\r\n\r\n  defaults.describe('scales', {\r\n    _fallback: 'scale',\r\n  });\r\n\r\n  defaults.describe('scale.ticks', {\r\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n    _indexable: (name) => name !== 'backdropPadding',\r\n  });\r\n}\r\n","import type {ChartArea, Scale} from '../types/index.js';\r\nimport type Chart from '../core/core.controller.js';\r\nimport type {ChartEvent} from '../types.js';\r\nimport {INFINITY} from './helpers.math.js';\r\n\r\n/**\r\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\r\n * necessary to avoid duplicates with `export * from './helpers`; see\r\n * https://github.com/microsoft/TypeScript/issues/46011\r\n * @typedef { import('../core/core.controller.js').default } dom.Chart\r\n * @typedef { import('../../types').ChartEvent } ChartEvent\r\n */\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _isDomSupported(): boolean {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\r\n  let parent = domNode.parentNode;\r\n  if (parent && parent.toString() === '[object ShadowRoot]') {\r\n    parent = (parent as ShadowRoot).host;\r\n  }\r\n  return parent as HTMLCanvasElement;\r\n}\r\n\r\n/**\r\n * convert max-width/max-height values that may be percentages into a number\r\n * @private\r\n */\r\n\r\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\r\n  let valueInPixels: number;\r\n  if (typeof styleValue === 'string') {\r\n    valueInPixels = parseInt(styleValue, 10);\r\n\r\n    if (styleValue.indexOf('%') !== -1) {\r\n      // percentage * size in dimension\r\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\r\n    }\r\n  } else {\r\n    valueInPixels = styleValue;\r\n  }\r\n\r\n  return valueInPixels;\r\n}\r\n\r\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\r\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\r\n\r\nexport function getStyle(el: HTMLElement, property: string): string {\r\n  return getComputedStyle(el).getPropertyValue(property);\r\n}\r\n\r\nconst positions = ['top', 'right', 'bottom', 'left'];\r\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\r\n  const result = {} as ChartArea;\r\n  suffix = suffix ? '-' + suffix : '';\r\n  for (let i = 0; i < 4; i++) {\r\n    const pos = positions[i];\r\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n  }\r\n  result.width = result.left + result.right;\r\n  result.height = result.top + result.bottom;\r\n  return result;\r\n}\r\n\r\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\r\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\r\n\r\n/**\r\n * @param e\r\n * @param canvas\r\n * @returns Canvas position\r\n */\r\nfunction getCanvasPosition(\r\n  e: Event | TouchEvent | MouseEvent,\r\n  canvas: HTMLCanvasElement\r\n): {\r\n    x: number;\r\n    y: number;\r\n    box: boolean;\r\n  } {\r\n  const touches = (e as TouchEvent).touches;\r\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\r\n  const {offsetX, offsetY} = source as MouseEvent;\r\n  let box = false;\r\n  let x, y;\r\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n    x = offsetX;\r\n    y = offsetY;\r\n  } else {\r\n    const rect = canvas.getBoundingClientRect();\r\n    x = source.clientX - rect.left;\r\n    y = source.clientY - rect.top;\r\n    box = true;\r\n  }\r\n  return {x, y, box};\r\n}\r\n\r\n/**\r\n * Gets an event's x, y coordinates, relative to the chart area\r\n * @param event\r\n * @param chart\r\n * @returns x and y coordinates of the event\r\n */\r\n\r\nexport function getRelativePosition(\r\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\r\n  chart: Chart\r\n): { x: number; y: number } {\r\n  if ('native' in event) {\r\n    return event;\r\n  }\r\n\r\n  const {canvas, currentDevicePixelRatio} = chart;\r\n  const style = getComputedStyle(canvas);\r\n  const borderBox = style.boxSizing === 'border-box';\r\n  const paddings = getPositionedStyle(style, 'padding');\r\n  const borders = getPositionedStyle(style, 'border', 'width');\r\n  const {x, y, box} = getCanvasPosition(event, canvas);\r\n  const xOffset = paddings.left + (box && borders.left);\r\n  const yOffset = paddings.top + (box && borders.top);\r\n\r\n  let {width, height} = chart;\r\n  if (borderBox) {\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  return {\r\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n  };\r\n}\r\n\r\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\r\n  let maxWidth: number, maxHeight: number;\r\n\r\n  if (width === undefined || height === undefined) {\r\n    const container = _getParentNode(canvas);\r\n    if (!container) {\r\n      width = canvas.clientWidth;\r\n      height = canvas.clientHeight;\r\n    } else {\r\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\r\n      const containerStyle = getComputedStyle(container);\r\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n      width = rect.width - containerPadding.width - containerBorder.width;\r\n      height = rect.height - containerPadding.height - containerBorder.height;\r\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    maxWidth: maxWidth || INFINITY,\r\n    maxHeight: maxHeight || INFINITY\r\n  };\r\n}\r\n\r\nconst round1 = (v: number) => Math.round(v * 10) / 10;\r\n\r\n// eslint-disable-next-line complexity\r\nexport function getMaximumSize(\r\n  canvas: HTMLCanvasElement,\r\n  bbWidth?: number,\r\n  bbHeight?: number,\r\n  aspectRatio?: number\r\n): { width: number; height: number } {\r\n  const style = getComputedStyle(canvas);\r\n  const margins = getPositionedStyle(style, 'margin');\r\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n  let {width, height} = containerSize;\r\n\r\n  if (style.boxSizing === 'content-box') {\r\n    const borders = getPositionedStyle(style, 'border', 'width');\r\n    const paddings = getPositionedStyle(style, 'padding');\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  width = Math.max(0, width - margins.width);\r\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\r\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n  if (width && !height) {\r\n    // https://github.com/chartjs/Chart.js/issues/4659\r\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\r\n    height = round1(width / 2);\r\n  }\r\n\r\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\r\n\r\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\r\n    height = containerSize.height;\r\n    width = round1(Math.floor(height * aspectRatio));\r\n  }\r\n\r\n  return {width, height};\r\n}\r\n\r\n/**\r\n * @param chart\r\n * @param forceRatio\r\n * @param forceStyle\r\n * @returns True if the canvas context size or transformation has changed.\r\n */\r\nexport function retinaScale(\r\n  chart: Chart,\r\n  forceRatio: number,\r\n  forceStyle?: boolean\r\n): boolean | void {\r\n  const pixelRatio = forceRatio || 1;\r\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\r\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\r\n\r\n  chart.height = Math.floor(chart.height);\r\n  chart.width = Math.floor(chart.width);\r\n\r\n  const canvas = chart.canvas;\r\n\r\n  // If no style has been set on the canvas, the render size is used as display size,\r\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n  // See https://github.com/chartjs/Chart.js/issues/3575\r\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\r\n    canvas.style.height = `${chart.height}px`;\r\n    canvas.style.width = `${chart.width}px`;\r\n  }\r\n\r\n  if (chart.currentDevicePixelRatio !== pixelRatio\r\n      || canvas.height !== deviceHeight\r\n      || canvas.width !== deviceWidth) {\r\n    chart.currentDevicePixelRatio = pixelRatio;\r\n    canvas.height = deviceHeight;\r\n    canvas.width = deviceWidth;\r\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Detects support for options object argument in addEventListener.\r\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n * @private\r\n */\r\nexport const supportsEventListenerOptions = (function() {\r\n  let passiveSupported = false;\r\n  try {\r\n    const options = {\r\n      get passive() { // This function will be called when the browser attempts to access the passive property.\r\n        passiveSupported = true;\r\n        return false;\r\n      }\r\n    } as EventListenerOptions;\r\n\r\n    window.addEventListener('test', null, options);\r\n    window.removeEventListener('test', null, options);\r\n  } catch (e) {\r\n    // continue regardless of error\r\n  }\r\n  return passiveSupported;\r\n}());\r\n\r\n/**\r\n * The \"used\" size is the final value of a dimension property after all calculations have\r\n * been performed. This method uses the computed style of `element` but returns undefined\r\n * if the computed style is not expressed in pixels. That can happen in some cases where\r\n * `element` has a size relative to its parent and this last one is not yet displayed,\r\n * for example because of `display: none` on a parent node.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n * @returns Size in pixels or undefined if unknown.\r\n */\r\n\r\nexport function readUsedSize(\r\n  element: HTMLElement,\r\n  property: 'width' | 'height'\r\n): number | undefined {\r\n  const value = getStyle(element, property);\r\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n  return matches ? +matches[1] : undefined;\r\n}\r\n","import type {\r\n  Chart,\r\n  Point,\r\n  FontSpec,\r\n  CanvasFontSpec,\r\n  PointStyle,\r\n  RenderTextOpts,\r\n  BackdropOptions\r\n} from '../types/index.js';\r\nimport type {\r\n  TRBL,\r\n  SplinePoint,\r\n  RoundedRect,\r\n  TRBLCorners\r\n} from '../types/geometric.js';\r\nimport {isArray, isNullOrUndef} from './helpers.core.js';\r\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\r\n\r\n/**\r\n * Converts the given font object into a CSS font string.\r\n * @param font - A font object.\r\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n * @private\r\n */\r\nexport function toFontString(font: FontSpec) {\r\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n    return null;\r\n  }\r\n\r\n  return (font.style ? font.style + ' ' : '')\r\n\t\t+ (font.weight ? font.weight + ' ' : '')\r\n\t\t+ font.size + 'px '\r\n\t\t+ font.family;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _measureText(\r\n  ctx: CanvasRenderingContext2D,\r\n  data: Record<string, number>,\r\n  gc: string[],\r\n  longest: number,\r\n  string: string\r\n) {\r\n  let textWidth = data[string];\r\n  if (!textWidth) {\r\n    textWidth = data[string] = ctx.measureText(string).width;\r\n    gc.push(string);\r\n  }\r\n  if (textWidth > longest) {\r\n    longest = textWidth;\r\n  }\r\n  return longest;\r\n}\r\n\r\ntype Thing = string | undefined | null\r\ntype Things = (Thing | Thing[])[]\r\n\r\n/**\r\n * @private\r\n */\r\n// eslint-disable-next-line complexity\r\nexport function _longestText(\r\n  ctx: CanvasRenderingContext2D,\r\n  font: string,\r\n  arrayOfThings: Things,\r\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\r\n) {\r\n  cache = cache || {};\r\n  let data = cache.data = cache.data || {};\r\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n  if (cache.font !== font) {\r\n    data = cache.data = {};\r\n    gc = cache.garbageCollect = [];\r\n    cache.font = font;\r\n  }\r\n\r\n  ctx.save();\r\n\r\n  ctx.font = font;\r\n  let longest = 0;\r\n  const ilen = arrayOfThings.length;\r\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\r\n  for (i = 0; i < ilen; i++) {\r\n    thing = arrayOfThings[i];\r\n\r\n    // Undefined strings and arrays should not be measured\r\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\r\n      longest = _measureText(ctx, data, gc, longest, thing);\r\n    } else if (isArray(thing)) {\r\n      // if it is an array lets measure each element\r\n      // to do maybe simplify this function a bit so we can do this more recursively?\r\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\r\n        nestedThing = thing[j];\r\n        // Undefined strings and arrays should not be measured\r\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ctx.restore();\r\n\r\n  const gcLen = gc.length / 2;\r\n  if (gcLen > arrayOfThings.length) {\r\n    for (i = 0; i < gcLen; i++) {\r\n      delete data[gc[i]];\r\n    }\r\n    gc.splice(0, gcLen);\r\n  }\r\n  return longest;\r\n}\r\n\r\n/**\r\n * Returns the aligned pixel value to avoid anti-aliasing blur\r\n * @param chart - The chart instance.\r\n * @param pixel - A pixel value.\r\n * @param width - The width of the element.\r\n * @returns The aligned pixel value.\r\n * @private\r\n */\r\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\r\n  const devicePixelRatio = chart.currentDevicePixelRatio;\r\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n}\r\n\r\n/**\r\n * Clears the entire canvas.\r\n */\r\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\r\n  ctx = ctx || canvas.getContext('2d');\r\n\r\n  ctx.save();\r\n  // canvas.width and canvas.height do not consider the canvas transform,\r\n  // while clearRect does\r\n  ctx.resetTransform();\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.restore();\r\n}\r\n\r\nexport interface DrawPointOptions {\r\n  pointStyle: PointStyle;\r\n  rotation?: number;\r\n  radius: number;\r\n  borderWidth: number;\r\n}\r\n\r\nexport function drawPoint(\r\n  ctx: CanvasRenderingContext2D,\r\n  options: DrawPointOptions,\r\n  x: number,\r\n  y: number\r\n) {\r\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n  drawPointLegend(ctx, options, x, y, null);\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nexport function drawPointLegend(\r\n  ctx: CanvasRenderingContext2D,\r\n  options: DrawPointOptions,\r\n  x: number,\r\n  y: number,\r\n  w: number\r\n) {\r\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\r\n  const style = options.pointStyle;\r\n  const rotation = options.rotation;\r\n  const radius = options.radius;\r\n  let rad = (rotation || 0) * RAD_PER_DEG;\r\n\r\n  if (style && typeof style === 'object') {\r\n    type = style.toString();\r\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(rad);\r\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n      ctx.restore();\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (isNaN(radius) || radius <= 0) {\r\n    return;\r\n  }\r\n\r\n  ctx.beginPath();\r\n\r\n  switch (style) {\r\n  // Default includes circle\r\n    default:\r\n      if (w) {\r\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\r\n      } else {\r\n        ctx.arc(x, y, radius, 0, TAU);\r\n      }\r\n      ctx.closePath();\r\n      break;\r\n    case 'triangle':\r\n      width = w ? w / 2 : radius;\r\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n      rad += TWO_THIRDS_PI;\r\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n      rad += TWO_THIRDS_PI;\r\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n      ctx.closePath();\r\n      break;\r\n    case 'rectRounded':\r\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\r\n    // `quadraticCurveTo` since it generates better results when rect is\r\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\r\n    // closer proportion to the previous impl and it is inscribed in the\r\n    // circle with `radius`. For more details, see the following PRs:\r\n    // https://github.com/chartjs/Chart.js/issues/5597\r\n    // https://github.com/chartjs/Chart.js/issues/5858\r\n      cornerRadius = radius * 0.516;\r\n      size = radius - cornerRadius;\r\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n      ctx.closePath();\r\n      break;\r\n    case 'rect':\r\n      if (!rotation) {\r\n        size = Math.SQRT1_2 * radius;\r\n        width = w ? w / 2 : size;\r\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\r\n        break;\r\n      }\r\n      rad += QUARTER_PI;\r\n    /* falls through */\r\n    case 'rectRot':\r\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n      xOffset = Math.cos(rad) * radius;\r\n      yOffset = Math.sin(rad) * radius;\r\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n      ctx.moveTo(x - xOffsetW, y - yOffset);\r\n      ctx.lineTo(x + yOffsetW, y - xOffset);\r\n      ctx.lineTo(x + xOffsetW, y + yOffset);\r\n      ctx.lineTo(x - yOffsetW, y + xOffset);\r\n      ctx.closePath();\r\n      break;\r\n    case 'crossRot':\r\n      rad += QUARTER_PI;\r\n    /* falls through */\r\n    case 'cross':\r\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n      xOffset = Math.cos(rad) * radius;\r\n      yOffset = Math.sin(rad) * radius;\r\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n      ctx.moveTo(x - xOffsetW, y - yOffset);\r\n      ctx.lineTo(x + xOffsetW, y + yOffset);\r\n      ctx.moveTo(x + yOffsetW, y - xOffset);\r\n      ctx.lineTo(x - yOffsetW, y + xOffset);\r\n      break;\r\n    case 'star':\r\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n      xOffset = Math.cos(rad) * radius;\r\n      yOffset = Math.sin(rad) * radius;\r\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n      ctx.moveTo(x - xOffsetW, y - yOffset);\r\n      ctx.lineTo(x + xOffsetW, y + yOffset);\r\n      ctx.moveTo(x + yOffsetW, y - xOffset);\r\n      ctx.lineTo(x - yOffsetW, y + xOffset);\r\n      rad += QUARTER_PI;\r\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n      xOffset = Math.cos(rad) * radius;\r\n      yOffset = Math.sin(rad) * radius;\r\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n      ctx.moveTo(x - xOffsetW, y - yOffset);\r\n      ctx.lineTo(x + xOffsetW, y + yOffset);\r\n      ctx.moveTo(x + yOffsetW, y - xOffset);\r\n      ctx.lineTo(x - yOffsetW, y + xOffset);\r\n      break;\r\n    case 'line':\r\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\r\n      yOffset = Math.sin(rad) * radius;\r\n      ctx.moveTo(x - xOffset, y - yOffset);\r\n      ctx.lineTo(x + xOffset, y + yOffset);\r\n      break;\r\n    case 'dash':\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\r\n      break;\r\n    case false:\r\n      ctx.closePath();\r\n      break;\r\n  }\r\n\r\n  ctx.fill();\r\n  if (options.borderWidth > 0) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if the point is inside the rectangle\r\n * @param point - The point to test\r\n * @param area - The rectangle\r\n * @param margin - allowed margin\r\n * @private\r\n */\r\nexport function _isPointInArea(\r\n  point: Point,\r\n  area: TRBL,\r\n  margin?: number\r\n) {\r\n  margin = margin || 0.5; // margin - default is to match rounded decimals\r\n\r\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\r\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\r\n}\r\n\r\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n  ctx.clip();\r\n}\r\n\r\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\r\n  ctx.restore();\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _steppedLineTo(\r\n  ctx: CanvasRenderingContext2D,\r\n  previous: Point,\r\n  target: Point,\r\n  flip?: boolean,\r\n  mode?: string\r\n) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  if (mode === 'middle') {\r\n    const midpoint = (previous.x + target.x) / 2.0;\r\n    ctx.lineTo(midpoint, previous.y);\r\n    ctx.lineTo(midpoint, target.y);\r\n  } else if (mode === 'after' !== !!flip) {\r\n    ctx.lineTo(previous.x, target.y);\r\n  } else {\r\n    ctx.lineTo(target.x, previous.y);\r\n  }\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _bezierCurveTo(\r\n  ctx: CanvasRenderingContext2D,\r\n  previous: SplinePoint,\r\n  target: SplinePoint,\r\n  flip?: boolean\r\n) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  ctx.bezierCurveTo(\r\n    flip ? previous.cp1x : previous.cp2x,\r\n    flip ? previous.cp1y : previous.cp2y,\r\n    flip ? target.cp2x : target.cp1x,\r\n    flip ? target.cp2y : target.cp1y,\r\n    target.x,\r\n    target.y);\r\n}\r\n\r\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\r\n  if (opts.translation) {\r\n    ctx.translate(opts.translation[0], opts.translation[1]);\r\n  }\r\n\r\n  if (!isNullOrUndef(opts.rotation)) {\r\n    ctx.rotate(opts.rotation);\r\n  }\r\n\r\n  if (opts.color) {\r\n    ctx.fillStyle = opts.color;\r\n  }\r\n\r\n  if (opts.textAlign) {\r\n    ctx.textAlign = opts.textAlign;\r\n  }\r\n\r\n  if (opts.textBaseline) {\r\n    ctx.textBaseline = opts.textBaseline;\r\n  }\r\n}\r\n\r\nfunction decorateText(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  line: string,\r\n  opts: RenderTextOpts\r\n) {\r\n  if (opts.strikethrough || opts.underline) {\r\n    /**\r\n     * Now that IE11 support has been dropped, we can use more\r\n     * of the TextMetrics object. The actual bounding boxes\r\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\r\n     * can be safely used.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\r\n     */\r\n    const metrics = ctx.measureText(line);\r\n    const left = x - metrics.actualBoundingBoxLeft;\r\n    const right = x + metrics.actualBoundingBoxRight;\r\n    const top = y - metrics.actualBoundingBoxAscent;\r\n    const bottom = y + metrics.actualBoundingBoxDescent;\r\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n\r\n    ctx.strokeStyle = ctx.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.lineWidth = opts.decorationWidth || 2;\r\n    ctx.moveTo(left, yDecoration);\r\n    ctx.lineTo(right, yDecoration);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\r\n  const oldColor = ctx.fillStyle;\r\n\r\n  ctx.fillStyle = opts.color as string;\r\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\r\n  ctx.fillStyle = oldColor;\r\n}\r\n\r\n/**\r\n * Render text onto the canvas\r\n */\r\nexport function renderText(\r\n  ctx: CanvasRenderingContext2D,\r\n  text: string | string[],\r\n  x: number,\r\n  y: number,\r\n  font: CanvasFontSpec,\r\n  opts: RenderTextOpts = {}\r\n) {\r\n  const lines = isArray(text) ? text : [text];\r\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n  let i: number, line: string;\r\n\r\n  ctx.save();\r\n  ctx.font = font.string;\r\n  setRenderOpts(ctx, opts);\r\n\r\n  for (i = 0; i < lines.length; ++i) {\r\n    line = lines[i];\r\n\r\n    if (opts.backdrop) {\r\n      drawBackdrop(ctx, opts.backdrop);\r\n    }\r\n\r\n    if (stroke) {\r\n      if (opts.strokeColor) {\r\n        ctx.strokeStyle = opts.strokeColor;\r\n      }\r\n\r\n      if (!isNullOrUndef(opts.strokeWidth)) {\r\n        ctx.lineWidth = opts.strokeWidth;\r\n      }\r\n\r\n      ctx.strokeText(line, x, y, opts.maxWidth);\r\n    }\r\n\r\n    ctx.fillText(line, x, y, opts.maxWidth);\r\n    decorateText(ctx, x, y, line, opts);\r\n\r\n    y += Number(font.lineHeight);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\n/**\r\n * Add a path of a rectangle with rounded corners to the current sub-path\r\n * @param ctx - Context\r\n * @param rect - Bounding rect\r\n */\r\nexport function addRoundedRectPath(\r\n  ctx: CanvasRenderingContext2D,\r\n  rect: RoundedRect & { radius: TRBLCorners }\r\n) {\r\n  const {x, y, w, h, radius} = rect;\r\n\r\n  // top left arc\r\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\r\n\r\n  // line from top left to bottom left\r\n  ctx.lineTo(x, y + h - radius.bottomLeft);\r\n\r\n  // bottom left arc\r\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n\r\n  // line from bottom left to bottom right\r\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n\r\n  // bottom right arc\r\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n\r\n  // line from bottom right to top right\r\n  ctx.lineTo(x + w, y + radius.topRight);\r\n\r\n  // top right arc\r\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n\r\n  // line from top right to top left\r\n  ctx.lineTo(x + radius.topLeft, y);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\nimport type {AnyObject} from '../types/basic.js';\r\nimport type {ChartMeta} from '../types/index.js';\r\nimport type {\r\n  ResolverObjectKey,\r\n  ResolverCache,\r\n  ResolverProxy,\r\n  DescriptorDefaults,\r\n  Descriptor,\r\n  ContextCache,\r\n  ContextProxy\r\n} from './helpers.config.types.js';\r\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\r\n\r\nexport * from './helpers.config.types.js';\r\n\r\n/**\r\n * Creates a Proxy for resolving raw values for options.\r\n * @param scopes - The option scopes to look for values, in resolution order\r\n * @param prefixes - The prefixes for values, in resolution order.\r\n * @param rootScopes - The root option scopes\r\n * @param fallback - Parent scopes fallback\r\n * @param getTarget - callback for getting the target for changed values\r\n * @returns Proxy\r\n * @private\r\n */\r\nexport function _createResolver<\r\n  T extends AnyObject[] = AnyObject[],\r\n  R extends AnyObject[] = T\r\n>(\r\n  scopes: T,\r\n  prefixes = [''],\r\n  rootScopes?: R,\r\n  fallback?: ResolverObjectKey,\r\n  getTarget = () => scopes[0]\r\n) {\r\n  const finalRootScopes = rootScopes || scopes;\r\n  if (typeof fallback === 'undefined') {\r\n    fallback = _resolve('_fallback', scopes);\r\n  }\r\n  const cache: ResolverCache<T, R> = {\r\n    [Symbol.toStringTag]: 'Object',\r\n    _cacheable: true,\r\n    _scopes: scopes,\r\n    _rootScopes: finalRootScopes,\r\n    _fallback: fallback,\r\n    _getTarget: getTarget,\r\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\r\n  };\r\n  return new Proxy(cache, {\r\n    /**\r\n     * A trap for the delete operator.\r\n     */\r\n    deleteProperty(target, prop: string) {\r\n      delete target[prop]; // remove from cache\r\n      delete target._keys; // remove cached keys\r\n      delete scopes[0][prop]; // remove from top level scope\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * A trap for getting property values.\r\n     */\r\n    get(target, prop: string) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(scopes[0]);\r\n    },\r\n\r\n    /**\r\n     * A trap for the in operator.\r\n     */\r\n    has(target, prop: string) {\r\n      return getKeysFromAllScopes(target).includes(prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */\r\n    ownKeys(target) {\r\n      return getKeysFromAllScopes(target);\r\n    },\r\n\r\n    /**\r\n     * A trap for setting property values.\r\n     */\r\n    set(target, prop: string, value) {\r\n      const storage = target._storage || (target._storage = getTarget());\r\n      target[prop] = storage[prop] = value; // set to top level scope + cache\r\n      delete target._keys; // remove cached keys\r\n      return true;\r\n    }\r\n  }) as ResolverProxy<T, R>;\r\n}\r\n\r\n/**\r\n * Returns an Proxy for resolving option values with context.\r\n * @param proxy - The Proxy returned by `_createResolver`\r\n * @param context - Context object for scriptable/indexable options\r\n * @param subProxy - The proxy provided for scriptable options\r\n * @param descriptorDefaults - Defaults for descriptors\r\n * @private\r\n */\r\nexport function _attachContext<\r\n  T extends AnyObject[] = AnyObject[],\r\n  R extends AnyObject[] = T\r\n>(\r\n  proxy: ResolverProxy<T, R>,\r\n  context: AnyObject,\r\n  subProxy?: ResolverProxy<T, R>,\r\n  descriptorDefaults?: DescriptorDefaults\r\n) {\r\n  const cache: ContextCache<T, R> = {\r\n    _cacheable: false,\r\n    _proxy: proxy,\r\n    _context: context,\r\n    _subProxy: subProxy,\r\n    _stack: new Set(),\r\n    _descriptors: _descriptors(proxy, descriptorDefaults),\r\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n  };\r\n  return new Proxy(cache, {\r\n    /**\r\n     * A trap for the delete operator.\r\n     */\r\n    deleteProperty(target, prop) {\r\n      delete target[prop]; // remove from cache\r\n      delete proxy[prop]; // remove from proxy\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * A trap for getting property values.\r\n     */\r\n    get(target, prop: string, receiver) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithContext(target, prop, receiver));\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return target._descriptors.allKeys\r\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\r\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(proxy);\r\n    },\r\n\r\n    /**\r\n     * A trap for the in operator.\r\n     */\r\n    has(target, prop) {\r\n      return Reflect.has(proxy, prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */\r\n    ownKeys() {\r\n      return Reflect.ownKeys(proxy);\r\n    },\r\n\r\n    /**\r\n     * A trap for setting property values.\r\n     */\r\n    set(target, prop, value) {\r\n      proxy[prop] = value; // set to proxy\r\n      delete target[prop]; // remove from cache\r\n      return true;\r\n    }\r\n  }) as ContextProxy<T, R>;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _descriptors(\r\n  proxy: ResolverCache,\r\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\r\n): Descriptor {\r\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\r\n  return {\r\n    allKeys: _allKeys,\r\n    scriptable: _scriptable,\r\n    indexable: _indexable,\r\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\r\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\r\n  };\r\n}\r\n\r\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\r\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\r\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\r\n\r\nfunction _cached(\r\n  target: AnyObject,\r\n  prop: string,\r\n  resolve: () => unknown\r\n) {\r\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\r\n    return target[prop];\r\n  }\r\n\r\n  const value = resolve();\r\n  // cache the resolved value\r\n  target[prop] = value;\r\n  return value;\r\n}\r\n\r\nfunction _resolveWithContext(\r\n  target: ContextCache,\r\n  prop: string,\r\n  receiver: AnyObject\r\n) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  let value = _proxy[prop]; // resolve from proxy\r\n\r\n  // resolve with context\r\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n    value = _resolveScriptable(prop, value, target, receiver);\r\n  }\r\n  if (isArray(value) && value.length) {\r\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n  }\r\n  if (needsSubResolver(prop, value)) {\r\n    // if the resolved value is an object, create a sub resolver for it\r\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction _resolveScriptable(\r\n  prop: string,\r\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\r\n  target: ContextCache,\r\n  receiver: AnyObject\r\n) {\r\n  const {_proxy, _context, _subProxy, _stack} = target;\r\n  if (_stack.has(prop)) {\r\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\r\n  }\r\n  _stack.add(prop);\r\n  let value = getValue(_context, _subProxy || receiver);\r\n  _stack.delete(prop);\r\n  if (needsSubResolver(prop, value)) {\r\n    // When scriptable option returns an object, create a resolver on that.\r\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction _resolveArray(\r\n  prop: string,\r\n  value: unknown[],\r\n  target: ContextCache,\r\n  isIndexable: (key: string) => boolean\r\n) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n\r\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\r\n    return value[_context.index % value.length];\r\n  } else if (isObject(value[0])) {\r\n    // Array of objects, return array or resolvers\r\n    const arr = value;\r\n    const scopes = _proxy._scopes.filter(s => s !== arr);\r\n    value = [];\r\n    for (const item of arr) {\r\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction resolveFallback(\r\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\r\n  prop: ResolverObjectKey,\r\n  value: unknown\r\n) {\r\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n}\r\n\r\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\r\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\n\r\nfunction addScopes(\r\n  set: Set<AnyObject>,\r\n  parentScopes: AnyObject[],\r\n  key: ResolverObjectKey,\r\n  parentFallback: ResolverObjectKey,\r\n  value: unknown\r\n) {\r\n  for (const parent of parentScopes) {\r\n    const scope = getScope(key, parent);\r\n    if (scope) {\r\n      set.add(scope);\r\n      const fallback = resolveFallback(scope._fallback, key, value);\r\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\r\n        // When we reach the descriptor that defines a new _fallback, return that.\r\n        // The fallback will resume to that new scope.\r\n        return fallback;\r\n      }\r\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\r\n      // Fallback to `false` results to `false`, when falling back to different key.\r\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\r\n      return null;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction createSubResolver(\r\n  parentScopes: AnyObject[],\r\n  resolver: ResolverCache,\r\n  prop: ResolverObjectKey,\r\n  value: unknown\r\n) {\r\n  const rootScopes = resolver._rootScopes;\r\n  const fallback = resolveFallback(resolver._fallback, prop, value);\r\n  const allScopes = [...parentScopes, ...rootScopes];\r\n  const set = new Set<AnyObject>();\r\n  set.add(value);\r\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\r\n  if (key === null) {\r\n    return false;\r\n  }\r\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\r\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\r\n    if (key === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\r\n    () => subGetTarget(resolver, prop as string, value));\r\n}\r\n\r\nfunction addScopesFromKey(\r\n  set: Set<AnyObject>,\r\n  allScopes: AnyObject[],\r\n  key: ResolverObjectKey,\r\n  fallback: ResolverObjectKey,\r\n  item: unknown\r\n) {\r\n  while (key) {\r\n    key = addScopes(set, allScopes, key, fallback, item);\r\n  }\r\n  return key;\r\n}\r\n\r\nfunction subGetTarget(\r\n  resolver: ResolverCache,\r\n  prop: string,\r\n  value: unknown\r\n) {\r\n  const parent = resolver._getTarget();\r\n  if (!(prop in parent)) {\r\n    parent[prop] = {};\r\n  }\r\n  const target = parent[prop];\r\n  if (isArray(target) && isObject(value)) {\r\n    // For array of objects, the object is used to store updated values\r\n    return value;\r\n  }\r\n  return target || {};\r\n}\r\n\r\nfunction _resolveWithPrefixes(\r\n  prop: string,\r\n  prefixes: string[],\r\n  scopes: AnyObject[],\r\n  proxy: ResolverProxy\r\n) {\r\n  let value: unknown;\r\n  for (const prefix of prefixes) {\r\n    value = _resolve(readKey(prefix, prop), scopes);\r\n    if (typeof value !== 'undefined') {\r\n      return needsSubResolver(prop, value)\r\n        ? createSubResolver(scopes, proxy, prop, value)\r\n        : value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _resolve(key: string, scopes: AnyObject[]) {\r\n  for (const scope of scopes) {\r\n    if (!scope) {\r\n      continue;\r\n    }\r\n    const value = scope[key];\r\n    if (typeof value !== 'undefined') {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getKeysFromAllScopes(target: ResolverCache) {\r\n  let keys = target._keys;\r\n  if (!keys) {\r\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\r\n  const set = new Set<string>();\r\n  for (const scope of scopes) {\r\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\r\n      set.add(key);\r\n    }\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nexport function _parseObjectDataRadialScale(\r\n  meta: ChartMeta<'line' | 'scatter'>,\r\n  data: AnyObject[],\r\n  start: number,\r\n  count: number\r\n) {\r\n  const {iScale} = meta;\r\n  const {key = 'r'} = this._parsing;\r\n  const parsed = new Array<{r: unknown}>(count);\r\n  let i: number, ilen: number, index: number, item: AnyObject;\r\n\r\n  for (i = 0, ilen = count; i < ilen; ++i) {\r\n    index = i + start;\r\n    item = data[index];\r\n    parsed[i] = {\r\n      r: iScale.parse(resolveObjectKey(item, key), index)\r\n    };\r\n  }\r\n  return parsed;\r\n}\r\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\r\nimport {_isPointInArea} from './helpers.canvas.js';\r\nimport type {ChartArea} from '../types/index.js';\r\nimport type {SplinePoint} from '../types/geometric.js';\r\n\r\nconst EPSILON = Number.EPSILON || 1e-14;\r\n\r\ntype OptionalSplinePoint = SplinePoint | false\r\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\r\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\r\n\r\nexport function splineCurve(\r\n  firstPoint: SplinePoint,\r\n  middlePoint: SplinePoint,\r\n  afterPoint: SplinePoint,\r\n  t: number\r\n): {\r\n    previous: SplinePoint\r\n    next: SplinePoint\r\n  } {\r\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n  // This function must also respect \"skipped\" points\r\n\r\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n  const current = middlePoint;\r\n  const next = afterPoint.skip ? middlePoint : afterPoint;\r\n  const d01 = distanceBetweenPoints(current, previous);\r\n  const d12 = distanceBetweenPoints(next, current);\r\n\r\n  let s01 = d01 / (d01 + d12);\r\n  let s12 = d12 / (d01 + d12);\r\n\r\n  // If all points are the same, s01 & s02 will be inf\r\n  s01 = isNaN(s01) ? 0 : s01;\r\n  s12 = isNaN(s12) ? 0 : s12;\r\n\r\n  const fa = t * s01; // scaling factor for triangle Ta\r\n  const fb = t * s12;\r\n\r\n  return {\r\n    previous: {\r\n      x: current.x - fa * (next.x - previous.x),\r\n      y: current.y - fa * (next.y - previous.y)\r\n    },\r\n    next: {\r\n      x: current.x + fb * (next.x - previous.x),\r\n      y: current.y + fb * (next.y - previous.y)\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Adjust tangents to ensure monotonic properties\r\n */\r\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\r\n  const pointsLen = points.length;\r\n\r\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen - 1; ++i) {\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent || !pointAfter) {\r\n      continue;\r\n    }\r\n\r\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n      mK[i] = mK[i + 1] = 0;\r\n      continue;\r\n    }\r\n\r\n    alphaK = mK[i] / deltaK[i];\r\n    betaK = mK[i + 1] / deltaK[i];\r\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n    if (squaredMagnitude <= 9) {\r\n      continue;\r\n    }\r\n\r\n    tauK = 3 / Math.sqrt(squaredMagnitude);\r\n    mK[i] = alphaK * tauK * deltaK[i];\r\n    mK[i + 1] = betaK * tauK * deltaK[i];\r\n  }\r\n}\r\n\r\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n\r\n  for (let i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n\r\n    const iPixel = pointCurrent[indexAxis];\r\n    const vPixel = pointCurrent[valueAxis];\r\n    if (pointBefore) {\r\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\r\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\r\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\r\n    }\r\n    if (pointAfter) {\r\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\r\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\r\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This function calculates Bézier control points in a similar way than |splineCurve|,\r\n * but preserves monotonicity of the provided data and ensures no local extremums are added\r\n * between the dataset discrete points due to the interpolation.\r\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n */\r\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  const deltaK: number[] = Array(pointsLen).fill(0);\r\n  const mK: number[] = Array(pointsLen);\r\n\r\n  // Calculate slopes (deltaK) and initialize tangents (mK)\r\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n\r\n  for (i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n\r\n    if (pointAfter) {\r\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\r\n\r\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\r\n    }\r\n    mK[i] = !pointBefore ? deltaK[i]\r\n      : !pointAfter ? deltaK[i - 1]\r\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\r\n          : (deltaK[i - 1] + deltaK[i]) / 2;\r\n  }\r\n\r\n  monotoneAdjust(points, deltaK, mK);\r\n\r\n  monotoneCompute(points, mK, indexAxis);\r\n}\r\n\r\nfunction capControlPoint(pt: number, min: number, max: number) {\r\n  return Math.max(Math.min(pt, max), min);\r\n}\r\n\r\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\r\n  let i, ilen, point, inArea, inAreaPrev;\r\n  let inAreaNext = _isPointInArea(points[0], area);\r\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n    inAreaPrev = inArea;\r\n    inArea = inAreaNext;\r\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n    if (!inArea) {\r\n      continue;\r\n    }\r\n    point = points[i];\r\n    if (inAreaPrev) {\r\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n    }\r\n    if (inAreaNext) {\r\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _updateBezierControlPoints(\r\n  points: SplinePoint[],\r\n  options,\r\n  area: ChartArea,\r\n  loop: boolean,\r\n  indexAxis: 'x' | 'y'\r\n) {\r\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\r\n\r\n  // Only consider points that are drawn in case the spanGaps option is used\r\n  if (options.spanGaps) {\r\n    points = points.filter((pt) => !pt.skip);\r\n  }\r\n\r\n  if (options.cubicInterpolationMode === 'monotone') {\r\n    splineCurveMonotone(points, indexAxis);\r\n  } else {\r\n    let prev = loop ? points[points.length - 1] : points[0];\r\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n      point = points[i];\r\n      controlPoints = splineCurve(\r\n        prev,\r\n        point,\r\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\r\n        options.tension\r\n      );\r\n      point.cp1x = controlPoints.previous.x;\r\n      point.cp1y = controlPoints.previous.y;\r\n      point.cp2x = controlPoints.next.x;\r\n      point.cp2y = controlPoints.next.y;\r\n      prev = point;\r\n    }\r\n  }\r\n\r\n  if (options.capBezierPoints) {\r\n    capBezierPoints(points, area);\r\n  }\r\n}\r\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\r\n\r\nconst atEdge = (t: number) => t === 0 || t === 1;\r\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\n\r\n/**\r\n * Easing functions adapted from Robert Penner's easing equations.\r\n * @namespace Chart.helpers.easing.effects\r\n * @see http://www.robertpenner.com/easing/\r\n */\r\nconst effects = {\r\n  linear: (t: number) => t,\r\n\r\n  easeInQuad: (t: number) => t * t,\r\n\r\n  easeOutQuad: (t: number) => -t * (t - 2),\r\n\r\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t\r\n    : -0.5 * ((--t) * (t - 2) - 1),\r\n\r\n  easeInCubic: (t: number) => t * t * t,\r\n\r\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\r\n\r\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t + 2),\r\n\r\n  easeInQuart: (t: number) => t * t * t * t,\r\n\r\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\r\n\r\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t\r\n    : -0.5 * ((t -= 2) * t * t * t - 2),\r\n\r\n  easeInQuint: (t: number) => t * t * t * t * t,\r\n\r\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\r\n\r\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n\r\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\r\n\r\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\r\n\r\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\r\n\r\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\r\n\r\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\r\n\r\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\r\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\r\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n\r\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\r\n\r\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\r\n\r\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\r\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\r\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n\r\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n\r\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n\r\n  easeInOutElastic(t: number) {\r\n    const s = 0.1125;\r\n    const p = 0.45;\r\n    return atEdge(t) ? t :\r\n      t < 0.5\r\n        ? 0.5 * elasticIn(t * 2, s, p)\r\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n  },\r\n\r\n  easeInBack(t: number) {\r\n    const s = 1.70158;\r\n    return t * t * ((s + 1) * t - s);\r\n  },\r\n\r\n  easeOutBack(t: number) {\r\n    const s = 1.70158;\r\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n  },\r\n\r\n  easeInOutBack(t: number) {\r\n    let s = 1.70158;\r\n    if ((t /= 0.5) < 1) {\r\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n    }\r\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n  },\r\n\r\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\r\n\r\n  easeOutBounce(t: number) {\r\n    const m = 7.5625;\r\n    const d = 2.75;\r\n    if (t < (1 / d)) {\r\n      return m * t * t;\r\n    }\r\n    if (t < (2 / d)) {\r\n      return m * (t -= (1.5 / d)) * t + 0.75;\r\n    }\r\n    if (t < (2.5 / d)) {\r\n      return m * (t -= (2.25 / d)) * t + 0.9375;\r\n    }\r\n    return m * (t -= (2.625 / d)) * t + 0.984375;\r\n  },\r\n\r\n  easeInOutBounce: (t: number) => (t < 0.5)\r\n    ? effects.easeInBounce(t * 2) * 0.5\r\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\r\n} as const;\r\n\r\nexport type EasingFunction = keyof typeof effects\r\n\r\nexport default effects;\r\n","import type {Point, SplinePoint} from '../types/geometric.js';\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: p1.y + t * (p2.y - p1.y)\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _steppedInterpolation(\r\n  p1: Point,\r\n  p2: Point,\r\n  t: number, mode: 'middle' | 'after' | unknown\r\n) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\r\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\r\n        : t > 0 ? p2.y : p1.y\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\r\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\r\n  const a = _pointInLine(p1, cp1, t);\r\n  const b = _pointInLine(cp1, cp2, t);\r\n  const c = _pointInLine(cp2, p2, t);\r\n  const d = _pointInLine(a, b, t);\r\n  const e = _pointInLine(b, c, t);\r\n  return _pointInLine(d, e, t);\r\n}\r\n","import defaults from '../core/core.defaults.js';\r\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\r\nimport {toFontString} from './helpers.canvas.js';\r\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\r\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\r\n\r\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\r\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\r\n\r\n/**\r\n * @alias Chart.helpers.options\r\n * @namespace\r\n */\r\n/**\r\n * Converts the given line height `value` in pixels for a specific font `size`.\r\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n * @param size - The font size (in pixels) used to resolve relative `value`.\r\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n * @since 2.7.0\r\n */\r\nexport function toLineHeight(value: number | string, size: number): number {\r\n  const matches = ('' + value).match(LINE_HEIGHT);\r\n  if (!matches || matches[1] === 'normal') {\r\n    return size * 1.2;\r\n  }\r\n\r\n  value = +matches[2];\r\n\r\n  switch (matches[3]) {\r\n    case 'px':\r\n      return value;\r\n    case '%':\r\n      value /= 100;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return size * value;\r\n}\r\n\r\nconst numberOrZero = (v: unknown) => +v || 0;\r\n\r\n/**\r\n * @param value\r\n * @param props\r\n */\r\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\r\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\r\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\r\n  const ret = {};\r\n  const objProps = isObject(props);\r\n  const keys = objProps ? Object.keys(props) : props;\r\n  const read = isObject(value)\r\n    ? objProps\r\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\r\n      : prop => value[prop]\r\n    : () => value;\r\n\r\n  for (const prop of keys) {\r\n    ret[prop] = numberOrZero(read(prop));\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Converts the given value into a TRBL object.\r\n * @param value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns The padding values (top, right, bottom, left)\r\n * @since 3.0.0\r\n */\r\nexport function toTRBL(value: number | TRBL | Point) {\r\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\r\n}\r\n\r\n/**\r\n * Converts the given value into a TRBL corners object (similar with css border-radius).\r\n * @param value - If a number, set the value to all TRBL corner components,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\r\n * @since 3.0.0\r\n */\r\nexport function toTRBLCorners(value: number | TRBLCorners) {\r\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\r\n}\r\n\r\n/**\r\n * Converts the given value into a padding object with pre-computed width/height.\r\n * @param value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns The padding values (top, right, bottom, left, width, height)\r\n * @since 2.7.0\r\n */\r\nexport function toPadding(value?: number | TRBL): ChartArea {\r\n  const obj = toTRBL(value) as ChartArea;\r\n\r\n  obj.width = obj.left + obj.right;\r\n  obj.height = obj.top + obj.bottom;\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Parses font options and returns the font object.\r\n * @param options - A object that contains font options to be parsed.\r\n * @param fallback - A object that contains fallback font options.\r\n * @return The font object.\r\n * @private\r\n */\r\n\r\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\r\n  options = options || {};\r\n  fallback = fallback || defaults.font as FontSpec;\r\n\r\n  let size = valueOrDefault(options.size, fallback.size);\r\n\r\n  if (typeof size === 'string') {\r\n    size = parseInt(size, 10);\r\n  }\r\n  let style = valueOrDefault(options.style, fallback.style);\r\n  if (style && !('' + style).match(FONT_STYLE)) {\r\n    console.warn('Invalid font style specified: \"' + style + '\"');\r\n    style = undefined;\r\n  }\r\n\r\n  const font = {\r\n    family: valueOrDefault(options.family, fallback.family),\r\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n    size,\r\n    style,\r\n    weight: valueOrDefault(options.weight, fallback.weight),\r\n    string: ''\r\n  };\r\n\r\n  font.string = toFontString(font);\r\n  return font;\r\n}\r\n\r\n/**\r\n * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n * @param inputs - An array of values, falling back to the last value.\r\n * @param context - If defined and the current value is a function, the value\r\n * is called with `context` as first argument and the result becomes the new input.\r\n * @param index - If defined and the current value is an array, the value\r\n * at `index` become the new input.\r\n * @param info - object to return information about resolution in\r\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\r\n * @since 2.7.0\r\n */\r\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\r\n  let cacheable = true;\r\n  let i: number, ilen: number, value: unknown;\r\n\r\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n    value = inputs[i];\r\n    if (value === undefined) {\r\n      continue;\r\n    }\r\n    if (context !== undefined && typeof value === 'function') {\r\n      value = value(context);\r\n      cacheable = false;\r\n    }\r\n    if (index !== undefined && isArray(value)) {\r\n      value = value[index % value.length];\r\n      cacheable = false;\r\n    }\r\n    if (value !== undefined) {\r\n      if (info && !cacheable) {\r\n        info.cacheable = false;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param minmax\r\n * @param grace\r\n * @param beginAtZero\r\n * @private\r\n */\r\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\r\n  const {min, max} = minmax;\r\n  const change = toDimension(grace, (max - min) / 2);\r\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\r\n  return {\r\n    min: keepZero(min, -Math.abs(change)),\r\n    max: keepZero(max, change)\r\n  };\r\n}\r\n\r\n/**\r\n * Create a context inheriting parentContext\r\n * @param parentContext\r\n * @param context\r\n * @returns\r\n */\r\nexport function createContext<T extends object>(parentContext: null, context: T): T;\r\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\r\nexport function createContext(parentContext: object, context: object) {\r\n  return Object.assign(Object.create(parentContext), context);\r\n}\r\n","export interface RTLAdapter {\r\n  x(x: number): number;\r\n  setWidth(w: number): void;\r\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\r\n  xPlus(x: number, value: number): number;\r\n  leftForLtr(x: number, itemWidth: number): number;\r\n}\r\n\r\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\r\n  return {\r\n    x(x) {\r\n      return rectX + rectX + width - x;\r\n    },\r\n    setWidth(w) {\r\n      width = w;\r\n    },\r\n    textAlign(align) {\r\n      if (align === 'center') {\r\n        return align;\r\n      }\r\n      return align === 'right' ? 'left' : 'right';\r\n    },\r\n    xPlus(x, value) {\r\n      return x - value;\r\n    },\r\n    leftForLtr(x, itemWidth) {\r\n      return x - itemWidth;\r\n    },\r\n  };\r\n};\r\n\r\nconst getLeftToRightAdapter = function(): RTLAdapter {\r\n  return {\r\n    x(x) {\r\n      return x;\r\n    },\r\n    setWidth(w) { // eslint-disable-line no-unused-vars\r\n    },\r\n    textAlign(align) {\r\n      return align;\r\n    },\r\n    xPlus(x, value) {\r\n      return x + value;\r\n    },\r\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n      return x;\r\n    },\r\n  };\r\n};\r\n\r\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\r\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n}\r\n\r\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\r\n  let style: CSSStyleDeclaration, original: [string, string];\r\n  if (direction === 'ltr' || direction === 'rtl') {\r\n    style = ctx.canvas.style;\r\n    original = [\r\n      style.getPropertyValue('direction'),\r\n      style.getPropertyPriority('direction'),\r\n    ];\r\n\r\n    style.setProperty('direction', direction, 'important');\r\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\r\n  }\r\n}\r\n\r\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\r\n  if (original !== undefined) {\r\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\r\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n  }\r\n}\r\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\r\nimport {createContext} from './helpers.options.js';\r\nimport {isPatternOrGradient} from './helpers.color.js';\r\n\r\n/**\r\n * @typedef { import('../elements/element.line.js').default } LineElement\r\n * @typedef { import('../elements/element.point.js').default } PointElement\r\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\r\n */\r\n\r\nfunction propertyFn(property) {\r\n  if (property === 'angle') {\r\n    return {\r\n      between: _angleBetween,\r\n      compare: _angleDiff,\r\n      normalize: _normalizeAngle,\r\n    };\r\n  }\r\n  return {\r\n    between: _isBetween,\r\n    compare: (a, b) => a - b,\r\n    normalize: x => x\r\n  };\r\n}\r\n\r\nfunction normalizeSegment({start, end, count, loop, style}) {\r\n  return {\r\n    start: start % count,\r\n    end: end % count,\r\n    loop: loop && (end - start + 1) % count === 0,\r\n    style\r\n  };\r\n}\r\n\r\nfunction getSegment(segment, points, bounds) {\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const {between, normalize} = propertyFn(property);\r\n  const count = points.length;\r\n  // eslint-disable-next-line prefer-const\r\n  let {start, end, loop} = segment;\r\n  let i, ilen;\r\n\r\n  if (loop) {\r\n    start += count;\r\n    end += count;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n        break;\r\n      }\r\n      start--;\r\n      end--;\r\n    }\r\n    start %= count;\r\n    end %= count;\r\n  }\r\n\r\n  if (end < start) {\r\n    end += count;\r\n  }\r\n  return {start, end, loop, style: segment.style};\r\n}\r\n\r\n/**\r\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\r\n * @param {object} segment\r\n * @param {number} segment.start - start index of the segment, referring the points array\r\n * @param {number} segment.end - end index of the segment, referring the points array\r\n * @param {boolean} segment.loop - indicates that the segment is a loop\r\n * @param {object} [segment.style] - segment style\r\n * @param {PointElement[]} points - the points that this segment refers to\r\n * @param {object} [bounds]\r\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\r\n * @param {number} bounds.start - start value of the property\r\n * @param {number} bounds.end - end value of the property\r\n * @private\r\n **/\r\nexport function _boundSegment(segment, points, bounds) {\r\n  if (!bounds) {\r\n    return [segment];\r\n  }\r\n\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const count = points.length;\r\n  const {compare, between, normalize} = propertyFn(property);\r\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\r\n\r\n  const result = [];\r\n  let inside = false;\r\n  let subStart = null;\r\n  let value, point, prevValue;\r\n\r\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n  const shouldStart = () => inside || startIsBefore();\r\n  const shouldStop = () => !inside || endIsBefore();\r\n\r\n  for (let i = start, prev = start; i <= end; ++i) {\r\n    point = points[i % count];\r\n\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n\r\n    value = normalize(point[property]);\r\n\r\n    if (value === prevValue) {\r\n      continue;\r\n    }\r\n\r\n    inside = between(value, startBound, endBound);\r\n\r\n    if (subStart === null && shouldStart()) {\r\n      subStart = compare(value, startBound) === 0 ? i : prev;\r\n    }\r\n\r\n    if (subStart !== null && shouldStop()) {\r\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\r\n      subStart = null;\r\n    }\r\n    prev = i;\r\n    prevValue = value;\r\n  }\r\n\r\n  if (subStart !== null) {\r\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n\r\n/**\r\n * Returns the segments of the line that are inside given bounds\r\n * @param {LineElement} line\r\n * @param {object} [bounds]\r\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\r\n * @param {number} bounds.start - start value of the `property`\r\n * @param {number} bounds.end - end value of the `property`\r\n * @private\r\n */\r\nexport function _boundSegments(line, bounds) {\r\n  const result = [];\r\n  const segments = line.segments;\r\n\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const sub = _boundSegment(segments[i], line.points, bounds);\r\n    if (sub.length) {\r\n      result.push(...sub);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Find start and end index of a line.\r\n */\r\nfunction findStartAndEnd(points, count, loop, spanGaps) {\r\n  let start = 0;\r\n  let end = count - 1;\r\n\r\n  if (loop && !spanGaps) {\r\n    // loop and not spanning gaps, first find a gap to start from\r\n    while (start < count && !points[start].skip) {\r\n      start++;\r\n    }\r\n  }\r\n\r\n  // find first non skipped point (after the first gap possibly)\r\n  while (start < count && points[start].skip) {\r\n    start++;\r\n  }\r\n\r\n  // if we looped to count, start needs to be 0\r\n  start %= count;\r\n\r\n  if (loop) {\r\n    // loop will go past count, if start > 0\r\n    end += start;\r\n  }\r\n\r\n  while (end > start && points[end % count].skip) {\r\n    end--;\r\n  }\r\n\r\n  // end could be more than count, normalize\r\n  end %= count;\r\n\r\n  return {start, end};\r\n}\r\n\r\n/**\r\n * Compute solid segments from Points, when spanGaps === false\r\n * @param {PointElement[]} points - the points\r\n * @param {number} start - start index\r\n * @param {number} max - max index (can go past count on a loop)\r\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\r\n */\r\nfunction solidSegments(points, start, max, loop) {\r\n  const count = points.length;\r\n  const result = [];\r\n  let last = start;\r\n  let prev = points[start];\r\n  let end;\r\n\r\n  for (end = start + 1; end <= max; ++end) {\r\n    const cur = points[end % count];\r\n    if (cur.skip || cur.stop) {\r\n      if (!prev.skip) {\r\n        loop = false;\r\n        result.push({start: start % count, end: (end - 1) % count, loop});\r\n        // @ts-ignore\r\n        start = last = cur.stop ? end : null;\r\n      }\r\n    } else {\r\n      last = end;\r\n      if (prev.skip) {\r\n        start = end;\r\n      }\r\n    }\r\n    prev = cur;\r\n  }\r\n\r\n  if (last !== null) {\r\n    result.push({start: start % count, end: last % count, loop});\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Compute the continuous segments that define the whole line\r\n * There can be skipped points within a segment, if spanGaps is true.\r\n * @param {LineElement} line\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n * @private\r\n */\r\nexport function _computeSegments(line, segmentOptions) {\r\n  const points = line.points;\r\n  const spanGaps = line.options.spanGaps;\r\n  const count = points.length;\r\n\r\n  if (!count) {\r\n    return [];\r\n  }\r\n\r\n  const loop = !!line._loop;\r\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\r\n\r\n  if (spanGaps === true) {\r\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\r\n  }\r\n\r\n  const max = end < start ? end + count : end;\r\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\r\n}\r\n\r\n/**\r\n * @param {Segment[]} segments\r\n * @param {PointElement[]} points\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n */\r\nfunction splitByStyles(line, segments, points, segmentOptions) {\r\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\r\n    return segments;\r\n  }\r\n  return doSplitByStyles(line, segments, points, segmentOptions);\r\n}\r\n\r\n/**\r\n * @param {LineElement} line\r\n * @param {Segment[]} segments\r\n * @param {PointElement[]} points\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n */\r\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\r\n  const chartContext = line._chart.getContext();\r\n  const baseStyle = readStyle(line.options);\r\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\r\n  const count = points.length;\r\n  const result = [];\r\n  let prevStyle = baseStyle;\r\n  let start = segments[0].start;\r\n  let i = start;\r\n\r\n  function addStyle(s, e, l, st) {\r\n    const dir = spanGaps ? -1 : 1;\r\n    if (s === e) {\r\n      return;\r\n    }\r\n    // Style can not start/end on a skipped point, adjust indices accordingly\r\n    s += count;\r\n    while (points[s % count].skip) {\r\n      s -= dir;\r\n    }\r\n    while (points[e % count].skip) {\r\n      e += dir;\r\n    }\r\n    if (s % count !== e % count) {\r\n      result.push({start: s % count, end: e % count, loop: l, style: st});\r\n      prevStyle = st;\r\n      start = e % count;\r\n    }\r\n  }\r\n\r\n  for (const segment of segments) {\r\n    start = spanGaps ? start : segment.start;\r\n    let prev = points[start % count];\r\n    let style;\r\n    for (i = start + 1; i <= segment.end; i++) {\r\n      const pt = points[i % count];\r\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\r\n        type: 'segment',\r\n        p0: prev,\r\n        p1: pt,\r\n        p0DataIndex: (i - 1) % count,\r\n        p1DataIndex: i % count,\r\n        datasetIndex\r\n      })));\r\n      if (styleChanged(style, prevStyle)) {\r\n        addStyle(start, i - 1, segment.loop, prevStyle);\r\n      }\r\n      prev = pt;\r\n      prevStyle = style;\r\n    }\r\n    if (start < i - 1) {\r\n      addStyle(start, i - 1, segment.loop, prevStyle);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction readStyle(options) {\r\n  return {\r\n    backgroundColor: options.backgroundColor,\r\n    borderCapStyle: options.borderCapStyle,\r\n    borderDash: options.borderDash,\r\n    borderDashOffset: options.borderDashOffset,\r\n    borderJoinStyle: options.borderJoinStyle,\r\n    borderWidth: options.borderWidth,\r\n    borderColor: options.borderColor\r\n  };\r\n}\r\n\r\nfunction styleChanged(style, prevStyle) {\r\n  if (!prevStyle) {\r\n    return false;\r\n  }\r\n  const cache = [];\r\n  const replacer = function(key, value) {\r\n    if (!isPatternOrGradient(value)) {\r\n      return value;\r\n    }\r\n    if (!cache.includes(value)) {\r\n      cache.push(value);\r\n    }\r\n    return cache.indexOf(value);\r\n  };\r\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\r\n}\r\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\r\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\r\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\r\nimport {_isPointInArea} from '../helpers/index.js';\r\n\r\n/**\r\n * @typedef { import('./core.controller.js').default } Chart\r\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\r\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\r\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\r\n * @typedef { import('../types/index.js').Point } Point\r\n */\r\n\r\n/**\r\n * Helper function to do binary search when possible\r\n * @param {object} metaset - the dataset meta\r\n * @param {string} axis - the axis mode. x|y|xy|r\r\n * @param {number} value - the value to find\r\n * @param {boolean} [intersect] - should the element intersect\r\n * @returns {{lo:number, hi:number}} indices to search data array between\r\n */\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      // _sharedOptions indicates that each element has equal options -> equal proportions\r\n      // So we can do a ranged binary search based on the range of first element and\r\n      // be confident to get the full range of indices that can intersect with the value.\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  // Default to all elements, when binary search can not be used.\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\n\r\n/**\r\n * Helper function to select candidate elements for interaction\r\n * @param {Chart} chart - the chart\r\n * @param {string} axis - the axis mode. x|y|xy|r\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {function} handler - the callback to execute for each visible item\r\n * @param {boolean} [intersect] - consider intersecting items\r\n */\r\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get a distance metric function for two points based on the\r\n * axis mode setting\r\n * @param {string} axis - the axis mode. x|y|xy|r\r\n */\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\n\r\n/**\r\n * Helper function to get the items that intersect the event position\r\n * @param {Chart} chart - the chart\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {string} axis - the axis mode. x|y|xy|r\r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\r\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\r\n * @return {InteractionItem[]} the nearest items\r\n */\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n  const items = [];\r\n\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return items;\r\n  }\r\n\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n      return;\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\n\r\n/**\r\n * Helper function to get the items nearest to the event position for a radial chart\r\n * @param {Chart} chart - the chart to look at elements from\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {string} axis - the axes along which to measure distance\r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\r\n * @return {InteractionItem[]} the nearest items\r\n */\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\n\r\n/**\r\n * Helper function to get the items nearest to the event position for a cartesian chart\r\n * @param {Chart} chart - the chart to look at elements from\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {string} axis - the axes along which to measure distance\r\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\r\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\r\n * @return {InteractionItem[]} the nearest items\r\n */\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      // Can have multiple items at the same distance in which case we sort by size\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\n\r\n/**\r\n * Helper function to get the items nearest to the event position considering all visible items in the chart\r\n * @param {Chart} chart - the chart to look at elements from\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {string} axis - the axes along which to measure distance\r\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\r\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\r\n * @return {InteractionItem[]} the nearest items\r\n */\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return [];\r\n  }\r\n\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\n\r\n/**\r\n * Helper function to get the items matching along the given X or Y axis\r\n * @param {Chart} chart - the chart to look at elements from\r\n * @param {Point} position - the point to be nearest to, in relative coordinates\r\n * @param {string} axis - the axis to match\r\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\r\n * @return {InteractionItem[]} the nearest items\r\n */\r\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const items = [];\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n\r\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n    }\r\n  });\r\n\r\n  // If we want to trigger on an intersect and we don't have any items\r\n  // that intersect the position, return nothing\r\n  if (intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\n\r\n/**\r\n * Contains interaction related functions\r\n * @namespace Chart.Interaction\r\n */\r\nexport default {\r\n  // Part of the public API to facilitate developers creating their own modes\r\n  evaluateInteractionItems,\r\n\r\n  // Helper function for different modes\r\n  modes: {\r\n    /**\r\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n\t\t * @function Chart.Interaction.modes.index\r\n\t\t * @since v2.4.0\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      // Default axis for index mode is 'x' to match old behaviour\r\n      const axis = options.axis || 'x';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      const elements = [];\r\n\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n\r\n        // don't count items that are skipped (null data)\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n\r\n      return elements;\r\n    },\r\n\r\n    /**\r\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n\t\t * @function Chart.Interaction.modes.dataset\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n\r\n      return items;\r\n    },\r\n\r\n    /**\r\n\t\t * Point mode returns all elements that hit test based on the event position\r\n\t\t * of the event\r\n\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n    },\r\n\r\n    /**\r\n\t\t * nearest mode returns the element closest to the point\r\n\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n    },\r\n\r\n    /**\r\n\t\t * x mode returns the elements that hit-test at the current x coordinate\r\n\t\t * @function Chart.Interaction.modes.x\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    x(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n    },\r\n\r\n    /**\r\n\t\t * y mode returns the elements that hit-test at the current y coordinate\r\n\t\t * @function Chart.Interaction.modes.y\r\n\t\t * @param {Chart} chart - the chart we are returning items from\r\n\t\t * @param {Event} e - the event we are find things at\r\n\t\t * @param {InteractionOptions} options - options to use\r\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\r\n\t\t * @return {InteractionItem[]} - items that are found\r\n\t\t */\r\n    y(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\r\nimport {toPadding} from '../helpers/helpers.options.js';\r\n\r\n/**\r\n * @typedef { import('./core.controller.js').default } Chart\r\n */\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\n\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\n\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\n\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\n\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\n\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\n\r\n/**\r\n * store dimensions used instead of available chartArea in fitBoxes\r\n **/\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\n\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\n\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\n\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\n\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n\r\n  // dynamically placed boxes size is not considered\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      // this layout was already counted for, lets first reduce old size\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n\r\n  // return booleans on the changes per direction\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\n\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\n\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\n\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n\r\n    // Dimensions changed and there were non full width boxes before this\r\n    // -> we have to refit those\r\n    refit |= same && refitBoxes.length;\r\n\r\n    // Chart area changed in the opposite direction\r\n    changed = changed || other;\r\n\r\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\n\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\n\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\n\r\n/**\r\n * @interface LayoutItem\r\n * @typedef {object} LayoutItem\r\n * @prop {string} position - The position of the item in the chart layout. Possible values are\r\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\r\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\r\n * @prop {function} draw - Draws the element\r\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\r\n * @prop {number} width - Width of item. Must be valid after update()\r\n * @prop {number} height - Height of item. Must be valid after update()\r\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n */\r\n\r\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n// It is this service's responsibility of carrying out that layout.\r\nexport default {\r\n\r\n  /**\r\n\t * Register a box to a chart.\r\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n\t * @param {Chart} chart - the chart to use\r\n\t * @param {LayoutItem} item - the item to add to be laid out\r\n\t */\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n\r\n    // initialize item with default values\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    // @ts-ignore\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n\r\n    chart.boxes.push(item);\r\n  },\r\n\r\n  /**\r\n\t * Remove a layoutItem from a chart\r\n\t * @param {Chart} chart - the chart to remove the box from\r\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\r\n\t */\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n\r\n  /**\r\n\t * Sets (or updates) options on the given `item`.\r\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n\t * @param {LayoutItem} item - the item to configure with the given options\r\n\t * @param {object} options - the new item options.\r\n\t */\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n\r\n  /**\r\n\t * Fits boxes of the given chart into the given size by having each box measure itself\r\n\t * then running a fitting algorithm\r\n\t * @param {Chart} chart - the chart\r\n\t * @param {number} width - the width to fit into\r\n\t * @param {number} height - the height to fit into\r\n   * @param {number} minPadding - minimum padding required for each side of chart area\r\n\t */\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n\r\n    // Before any changes are made, notify boxes that an update is about to being\r\n    // This is used to clear any cached data (e.g. scale limits)\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n\r\n    // Essentially we now have any number of boxes on each of the 4 sides.\r\n    // Our canvas looks like the following.\r\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n    // B1 is the bottom axis\r\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n    // an error will be thrown.\r\n    //\r\n    // |----------------------------------------------------|\r\n    // |                  T1 (Full Width)                   |\r\n    // |----------------------------------------------------|\r\n    // |    |    |                 T2                  |    |\r\n    // |    |----|-------------------------------------|----|\r\n    // |    |    | C1 |                           | C2 |    |\r\n    // |    |    |----|                           |----|    |\r\n    // |    |    |                                     |    |\r\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n    // |    |    |                                     |    |\r\n    // |    |    |----|                           |----|    |\r\n    // |    |    | C3 |                           | C4 |    |\r\n    // |    |----|-------------------------------------|----|\r\n    // |    |    |                 B1                  |    |\r\n    // |----------------------------------------------------|\r\n    // |                  B2 (Full Width)                   |\r\n    // |----------------------------------------------------|\r\n    //\r\n\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n\r\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n\r\n    // Then fit vertical boxes\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n\r\n    // Then fit horizontal boxes\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      // if the area changed, re-fit vertical boxes\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n\r\n    handleMaxPadding(chartArea);\r\n\r\n    // Finally place the boxes to correct coordinates\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n\r\n    // Move to opposite side of chart\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n\r\n    // Finally update boxes in chartArea (radial scale for example)\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n","\r\n/**\r\n * @typedef { import('../core/core.controller.js').default } Chart\r\n */\r\n\r\n/**\r\n * Abstract class that allows abstracting platform dependencies away from the chart.\r\n */\r\nexport default class BasePlatform {\r\n  /**\r\n\t * Called at chart construction time, returns a context2d instance implementing\r\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\r\n\t * @param {number} [aspectRatio] - The chart options\r\n\t */\r\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\r\n\r\n  /**\r\n\t * Called at chart destruction time, releases any resources associated to the context\r\n\t * previously returned by the acquireContext() method.\r\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\r\n\t * @returns {boolean} true if the method succeeded, else false\r\n\t */\r\n  releaseContext(context) { // eslint-disable-line no-unused-vars\r\n    return false;\r\n  }\r\n\r\n  /**\r\n\t * Registers the specified listener on the given chart.\r\n\t * @param {Chart} chart - Chart from which to listen for event\r\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\r\n\t * @param {function} listener - Receives a notification (an object that implements\r\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\r\n\t */\r\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\r\n\r\n  /**\r\n\t * Removes the specified listener previously registered with addEventListener.\r\n\t * @param {Chart} chart - Chart from which to remove the listener\r\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\r\n\t * @param {function} listener - The listener function to remove from the event target.\r\n\t */\r\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\r\n\r\n  /**\r\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\r\n\t */\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n\t * Returns the maximum size in pixels of given canvas element.\r\n\t * @param {HTMLCanvasElement} element\r\n\t * @param {number} [width] - content width of parent element\r\n\t * @param {number} [height] - content height of parent element\r\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\r\n\t */\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @param {HTMLCanvasElement} canvas\r\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\r\n\t */\r\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Updates config with platform specific requirements\r\n   * @param {import('../core/core.config.js').default} config\r\n   */\r\n  updateConfig(config) { // eslint-disable-line no-unused-vars\r\n    // no-op\r\n  }\r\n}\r\n","/**\r\n * Platform fallback implementation (minimal).\r\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n */\r\n\r\nimport BasePlatform from './platform.base.js';\r\n\r\n/**\r\n * Platform class for charts without access to the DOM or to many element properties\r\n * This platform is used by default for any chart passed an OffscreenCanvas.\r\n * @extends BasePlatform\r\n */\r\nexport default class BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n    // https://github.com/chartjs/Chart.js/issues/2807\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n","/**\r\n * Chart.Platform implementation for targeting a web browser\r\n */\r\n\r\nimport BasePlatform from './platform.base.js';\r\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\r\nimport {throttled} from '../helpers/helpers.extras.js';\r\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\r\n\r\n/**\r\n * @typedef { import('../core/core.controller.js').default } Chart\r\n */\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\n\r\n/**\r\n * DOM event types -> Chart.js event types.\r\n * Note: only events with different types are mapped.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n */\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\n\r\nconst isNullOrEmpty = value => value === null || value === '';\r\n/**\r\n * Initializes the canvas style and render size without modifying the canvas display size,\r\n * since responsiveness is handled by the controller.resize() method. The config is used\r\n * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {number} [aspectRatio]\r\n */\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n\r\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n  // returns null or '' if no explicit value has been set to the canvas attribute.\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n\r\n  // Chart.js modifies some canvas values that we want to restore on destroy\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n\r\n  // Force canvas to display as block to avoid extra space caused by inline\r\n  // elements, which would interfere with the responsive resize process.\r\n  // https://github.com/chartjs/Chart.js/issues/2538\r\n  style.display = style.display || 'block';\r\n  // Include possible borders in the size\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      // If no explicit render height and style height, let's apply the aspect ratio,\r\n      // which one can be specified by the user but also by charts as default option\r\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n\r\n  return canvas;\r\n}\r\n\r\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n// https://github.com/chartjs/Chart.js/issues/4287\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\n\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\n\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\n\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\n\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\n\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\n\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\n\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\n\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\n\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\n\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      // If the container size shrank during chart resize, let's assume\r\n      // scrollbar appeared. So we resize again with the scrollbar visible -\r\n      // effectively making chart smaller and the scrollbar hidden again.\r\n      // Because we are inside `throttled`, and currently `ticking`, scroll\r\n      // events are ignored during this whole 2 resize process.\r\n      // If we assumed wrong and something else happened, we are resizing\r\n      // twice in a frame (potential performance issue)\r\n      listener();\r\n    }\r\n  }, window);\r\n\r\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    // When its container's display is set to 'none' the callback will be called with a\r\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\r\n    // resizing in such case.\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n\r\n  return observer;\r\n}\r\n\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\n\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    // This case can occur if the chart is destroyed while waiting\r\n    // for the throttled function to occur. We prevent crashes by checking\r\n    // for a destroyed chart\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart);\r\n\r\n  addListener(canvas, type, proxy);\r\n\r\n  return proxy;\r\n}\r\n\r\n/**\r\n * Platform class for charts that can access the DOM and global window/document properties\r\n * @extends BasePlatform\r\n */\r\nexport default class DomPlatform extends BasePlatform {\r\n\r\n  /**\r\n\t * @param {HTMLCanvasElement} canvas\r\n\t * @param {number} [aspectRatio]\r\n\t * @return {CanvasRenderingContext2D|null}\r\n\t */\r\n  acquireContext(canvas, aspectRatio) {\r\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n    // https://github.com/chartjs/Chart.js/issues/2807\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n\r\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\r\n    // inside an iframe or when running in a protected environment. We could guess the\r\n    // types from their toString() value but let's keep things flexible and assume it's\r\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\r\n    // https://github.com/chartjs/Chart.js/issues/3887\r\n    // https://github.com/chartjs/Chart.js/issues/4102\r\n    // https://github.com/chartjs/Chart.js/issues/4152\r\n    if (context && context.canvas === canvas) {\r\n      // Load platform resources on first chart creation, to make it possible to\r\n      // import the library before setting platform options.\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n\t * @param {CanvasRenderingContext2D} context\r\n\t */\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n\r\n    // The canvas render size might have been changed (and thus the state stack discarded),\r\n    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n    // least the canvas context is reset to the default state by setting the canvas width.\r\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n    // eslint-disable-next-line no-self-assign\r\n    canvas.width = canvas.width;\r\n\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n\r\n  /**\r\n\t *\r\n\t * @param {Chart} chart\r\n\t * @param {string} type\r\n\t * @param {function} listener\r\n\t */\r\n  addEventListener(chart, type, listener) {\r\n    // Can have only one listener per type, so make sure previous is removed\r\n    this.removeEventListener(chart, type);\r\n\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n\r\n\r\n  /**\r\n\t * @param {Chart} chart\r\n\t * @param {string} type\r\n\t */\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n\r\n  /**\r\n\t * @param {HTMLCanvasElement} canvas\r\n\t * @param {number} [width] - content width of parent element\r\n\t * @param {number} [height] - content height of parent element\r\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\r\n\t */\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n\r\n  /**\r\n\t * @param {HTMLCanvasElement} canvas\r\n\t */\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n","import {_isDomSupported} from '../helpers/index.js';\r\nimport BasePlatform from './platform.base.js';\r\nimport BasicPlatform from './platform.basic.js';\r\nimport DomPlatform from './platform.dom.js';\r\n\r\nexport function _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nexport {BasePlatform, BasicPlatform, DomPlatform};\r\n","import effects from '../helpers/helpers.easing.js';\r\nimport {resolve} from '../helpers/helpers.options.js';\r\nimport {color as helpersColor} from '../helpers/helpers.color.js';\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  /**\r\n   * @param {string} from\r\n   * @param {string} to\r\n   * @param {number} factor\r\n   */\r\n  color(from, to, factor) {\r\n    const c0 = helpersColor(from || transparent);\r\n    const c1 = c0.valid && helpersColor(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\n\r\nexport default class Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n\r\n  active() {\r\n    return this._active;\r\n  }\r\n\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    if (this._active) {\r\n      // update current evaluated value, for smoother animations\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n","import animator from './core.animator.js';\r\nimport Animation from './core.animation.js';\r\nimport defaults from './core.defaults.js';\r\nimport {isArray, isObject} from '../helpers/helpers.core.js';\r\n\r\nexport default class Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n\r\n    const animationOptions = Object.keys(defaults.animation);\r\n    const animatedProps = this._properties;\r\n\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * Utility to handle animation of `options`.\r\n\t * @private\r\n\t */\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      // Going to shared options:\r\n      // After all animations are done, assign the shared options object to the element\r\n      // So any new updates to the shared options are observed\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n        // rejected, noop\r\n      });\r\n    }\r\n\r\n    return animations;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          // There is an existing active animation, let's update that\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        // not animated, set directly to new value\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n\r\n\r\n  /**\r\n\t * Update `target` properties to new values, using configured animations\r\n\t * @param {object} target - object to update\r\n\t * @param {object} values - new target properties\r\n\t * @returns {boolean|undefined} - `true` if animations were started\r\n\t **/\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      // Nothing is animated, just apply the new values.\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n\r\n    const animations = this._createAnimations(target, values);\r\n\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  // @ts-ignore\r\n  return Promise.all(running);\r\n}\r\n\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    // Going from shared options to distinct one:\r\n    // Create new options object containing the old shared values and start updating that.\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n","import Animations from './core.animations.js';\r\nimport defaults from './core.defaults.js';\r\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\r\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\r\nimport {createContext, sign} from '../helpers/index.js';\r\n\r\n/**\r\n * @typedef { import('./core.controller.js').default } Chart\r\n * @typedef { import('./core.scale.js').default } Scale\r\n */\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\n\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\n\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\n\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n\r\n  if (value === null) {\r\n    return;\r\n  }\r\n\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\n\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\n\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\n\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\n\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\n\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n\r\n    const visualValues = stack._visualValues || (stack._visualValues = {});\r\n    visualValues[datasetIndex] = value;\r\n  }\r\n}\r\n\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\n\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\n\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\n\r\nfunction clearStacks(meta, items) {\r\n  // Not using meta.index here, because it might be already updated if the dataset changed location\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\r\n      delete stacks[axis]._visualValues[datasetIndex];\r\n    }\r\n  }\r\n}\r\n\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\n\r\nexport default class DatasetController {\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {};\r\n\r\n  /**\r\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\r\n   */\r\n  static datasetElementType = null;\r\n\r\n  /**\r\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\r\n   */\r\n  static dataElementType = null;\r\n\r\n  /**\r\n\t * @param {Chart} chart\r\n\t * @param {number} datasetIndex\r\n\t */\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    /** @type {boolean | object} */\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.supportsDecimation = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.datasetElementType = new.target.datasetElementType;\r\n    this.dataElementType = new.target.dataElementType;\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n\r\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\r\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\r\n    }\r\n  }\r\n\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n\r\n  /**\r\n\t * @param {string} scaleID\r\n\t * @return {Scale}\r\n\t */\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n\r\n    // In order to correctly handle data addition/deletion animation (and thus simulate\r\n    // real-time charts), we need to monitor these data modifications and synchronize\r\n    // the internal metadata accordingly.\r\n\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        // This case happens when the user replaced the data array instance.\r\n        unlistenArrayEvents(_data, this);\r\n        // Discard old parsed data and stacks\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n\r\n    this._dataCheck();\r\n\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n\r\n    this._dataCheck();\r\n\r\n    // make sure cached _stacked status is current\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n\r\n    // detect change in stack option\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      // remove values from old stack\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n\r\n    // Re-sync meta data in case the user replaced the data array or if we missed\r\n    // any updates and so make sure that we handle number of datapoints changing.\r\n    this._resyncElements(resetNewElements);\r\n\r\n    // if stack changed, update stack values for the whole dataset\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Merges user-supplied and default dataset-level options\r\n\t * @private\r\n\t */\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n\r\n  /**\r\n\t * @param {number} start\r\n\t * @param {number} count\r\n\t */\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Parse array of primitive values\r\n\t * @param {object} meta - dataset meta\r\n\t * @param {array} data - data array. Example [1,3,4]\r\n\t * @param {number} start - start index\r\n\t * @param {number} count - number of items to parse\r\n\t * @returns {object} parsed item - item containing index and a parsed value\r\n\t * for each scale id.\r\n\t * Example: {xScale0: 0, yScale0: 1}\r\n\t * @protected\r\n\t */\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * Parse array of arrays\r\n\t * @param {object} meta - dataset meta\r\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\r\n\t * @param {number} start - start index\r\n\t * @param {number} count - number of items to parse\r\n\t * @returns {object} parsed item - item containing index and a parsed value\r\n\t * for each scale id.\r\n\t * Example: {x: 0, y: 1}\r\n\t * @protected\r\n\t */\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * Parse array of objects\r\n\t * @param {object} meta - dataset meta\r\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\r\n\t * @param {number} start - start index\r\n\t * @param {number} count - number of items to parse\r\n\t * @returns {object} parsed item - item containing index and a parsed value\r\n\t * for each scale id. _custom is optional\r\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\r\n\t * @protected\r\n\t */\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]._visualValues\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        // if the data is sorted, we don't need to check further from this end of array\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      // in the sorted case, find first non-skipped value from other end of array\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n\t * @return {number|boolean}\r\n\t * @protected\r\n\t */\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n\r\n  /**\r\n\t * @param {string} mode\r\n\t */\r\n  update(mode) {} // eslint-disable-line no-unused-vars\r\n\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Returns a set of predefined style properties that should be used to represent the dataset\r\n\t * or the data if the index is specified\r\n\t * @param {number} index - data index\r\n\t * @param {boolean} [active] - true if hover\r\n\t * @return {object} style object\r\n\t */\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n\r\n  /**\r\n\t * @param {string} [mode]\r\n\t * @protected\r\n\t */\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} index\r\n\t * @param {string} [mode]\r\n\t * @protected\r\n\t */\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    // context is provided as a function, and is called only if needed,\r\n    // so we don't create a context for each element if not needed.\r\n    const context = () => this.getContext(index, active, mode);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n\r\n    if (values.$shared) {\r\n      // `$shared` indicates this set of options can be shared between multiple elements.\r\n      // Sharing is used to reduce number of properties to change during animation.\r\n      values.$shared = sharing;\r\n\r\n      // We cache options by `mode`, which can be 'active' for example. This enables us\r\n      // to have the 'active' element options and 'default' options to switch between\r\n      // when interacting.\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n\r\n  /**\r\n\t * Utility for getting the options object shared between elements\r\n\t * @protected\r\n\t */\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n\r\n  /**\r\n\t * Utility for determining if `options` should be included in the updated properties\r\n\t * @protected\r\n\t */\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n\r\n  /**\r\n   * @todo v4, rename to getSharedOptions and remove excess functions\r\n   */\r\n  _getSharedOptions(start, mode) {\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const previouslySharedOptions = this._sharedOptions;\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    return {sharedOptions, includeOptions};\r\n  }\r\n\r\n  /**\r\n\t * Utility for updating an element with new properties, using animations when appropriate.\r\n\t * @protected\r\n\t */\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\r\n\t * @protected\r\n\t */\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      // When going from active to inactive, we need to update to the shared options.\r\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n\r\n    // Apply changes detected through array listeners\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n\r\n    if (count) {\r\n      // TODO: It is not optimal to always parse the old data\r\n      // This is done because we are not detecting direct assignments:\r\n      // chart.data.datasets[0].data[5] = 10;\r\n      // chart.data.datasets[0].data[5].y = 10;\r\n      this.parse(0, count);\r\n    }\r\n\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n\r\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n   */\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\n","import type {AnyObject} from '../types/basic.js';\r\nimport type {Point} from '../types/geometric.js';\r\nimport type {Animation} from '../types/animation.js';\r\nimport {isNumber} from '../helpers/helpers.math.js';\r\n\r\nexport default class Element<T = AnyObject, O = AnyObject> {\r\n\r\n  static defaults = {};\r\n  static defaultRoutes = undefined;\r\n\r\n  x: number;\r\n  y: number;\r\n  active = false;\r\n  options: O;\r\n  $animations: Record<keyof T, Animation>;\r\n\r\n  tooltipPosition(useFinalPosition: boolean): Point {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y} as Point;\r\n  }\r\n\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n\r\n  /**\r\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\r\n   * @param props - properties to get\r\n   * @param [final] - get the final value (animation target)\r\n   */\r\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\r\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\r\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      // let's not create an object, if not needed\r\n      return this as Record<string, unknown>;\r\n    }\r\n    const ret: Record<string, unknown> = {};\r\n    props.forEach((prop) => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\r\nimport {_factorize} from '../helpers/helpers.math.js';\r\n\r\n\r\n/**\r\n * @typedef { import('./core.controller.js').default } Chart\r\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\r\n */\r\n\r\n/**\r\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n * @param {import('./core.scale.js').default} scale\r\n * @param {Tick[]} ticks\r\n * @return {Tick[]}\r\n * @private\r\n */\r\nexport function autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const determinedMaxTicks = determineMaxTicks(scale);\r\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n\r\n  // If there are too many major ticks to display them all\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\n\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\n\r\n/**\r\n * @param {number[]} majorIndices\r\n * @param {Tick[]} ticks\r\n * @param {number} ticksLimit\r\n */\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n\r\n  // If the major ticks are evenly spaced apart, place the minor ticks\r\n  // so that they divide the major ticks into even chunks\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\n\r\n/**\r\n * @param {Tick[]} ticks\r\n */\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * @param {Tick[]} ticks\r\n * @param {Tick[]} newTicks\r\n * @param {number[]} majorIndices\r\n * @param {number} spacing\r\n */\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Tick[]} ticks\r\n * @param {Tick[]} newTicks\r\n * @param {number} spacing\r\n * @param {number} [majorStart]\r\n * @param {number} [majorEnd]\r\n */\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n\r\n  next = start;\r\n\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number[]} arr\r\n */\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n","import Element from './core.element.js';\r\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\r\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\r\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\r\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\r\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\r\nimport {autoSkip} from './core.scale.autoskip.js';\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\r\n\r\n/**\r\n * @typedef { import('../types/index.js').Chart } Chart\r\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\r\n */\r\n\r\n/**\r\n * Returns a new array containing numItems from arr\r\n * @param {any[]} arr\r\n * @param {number} numItems\r\n */\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * @param {Scale} scale\r\n * @param {number} index\r\n * @param {boolean} offsetGridLines\r\n */\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n\r\n    // Return undefined if the pixel is out of the range\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\n\r\n/**\r\n * @param {object} caches\r\n * @param {number} length\r\n */\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @param {object} options\r\n */\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\n\r\n/**\r\n * @param {object} options\r\n */\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\n\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\n\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\n\r\nfunction titleAlign(align, position, reverse) {\r\n  /** @type {CanvasTextAlign} */\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\n\r\nexport default class Scale extends Element {\r\n\r\n  // eslint-disable-next-line max-statements\r\n  constructor(cfg) {\r\n    super();\r\n\r\n    /** @type {string} */\r\n    this.id = cfg.id;\r\n    /** @type {string} */\r\n    this.type = cfg.type;\r\n    /** @type {any} */\r\n    this.options = undefined;\r\n    /** @type {CanvasRenderingContext2D} */\r\n    this.ctx = cfg.ctx;\r\n    /** @type {Chart} */\r\n    this.chart = cfg.chart;\r\n\r\n    // implements box\r\n    /** @type {number} */\r\n    this.top = undefined;\r\n    /** @type {number} */\r\n    this.bottom = undefined;\r\n    /** @type {number} */\r\n    this.left = undefined;\r\n    /** @type {number} */\r\n    this.right = undefined;\r\n    /** @type {number} */\r\n    this.width = undefined;\r\n    /** @type {number} */\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    /** @type {number} */\r\n    this.maxWidth = undefined;\r\n    /** @type {number} */\r\n    this.maxHeight = undefined;\r\n    /** @type {number} */\r\n    this.paddingTop = undefined;\r\n    /** @type {number} */\r\n    this.paddingBottom = undefined;\r\n    /** @type {number} */\r\n    this.paddingLeft = undefined;\r\n    /** @type {number} */\r\n    this.paddingRight = undefined;\r\n\r\n    // scale-specific properties\r\n    /** @type {string=} */\r\n    this.axis = undefined;\r\n    /** @type {number=} */\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    /** @type {Tick[]} */\r\n    this.ticks = [];\r\n    /** @type {object[]|null} */\r\n    this._gridLineItems = null;\r\n    /** @type {object[]|null} */\r\n    this._labelItems = null;\r\n    /** @type {object|null} */\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    /** @type {number} */\r\n    this._startPixel = undefined;\r\n    /** @type {number} */\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n\r\n  /**\r\n\t * @param {any} options\r\n\t * @since 3.0\r\n\t */\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n\r\n    this.axis = options.axis;\r\n\r\n    // parse min/max value, so we can properly determine min/max for other scales\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n\r\n  /**\r\n\t * Parse a supported input value to internal representation.\r\n\t * @param {*} raw\r\n\t * @param {number} [index]\r\n\t * @since 3.0\r\n\t */\r\n  parse(raw, index) { // eslint-disable-line no-unused-vars\r\n    return raw;\r\n  }\r\n\r\n  /**\r\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\r\n\t * @protected\r\n\t * @since 3.0\r\n\t */\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isFinite(_userMin),\r\n      maxDefined: isFinite(_userMax)\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @param {boolean} canStack\r\n\t * @return {{min: number, max: number}}\r\n\t * @protected\r\n\t * @since 3.0\r\n\t */\r\n  getMinMax(canStack) {\r\n    // eslint-disable-next-line prefer-const\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n\r\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * Get the padding needed for the scale\r\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\r\n\t * @private\r\n\t */\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * Returns the scale tick objects\r\n\t * @return {Tick[]}\r\n\t * @since 2.7\r\n\t */\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n\r\n  /**\r\n\t * @return {string[]}\r\n\t */\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n\r\n  /**\r\n   * @return {import('../types.js').LabelItem[]}\r\n   */\r\n  getLabelItems(chartArea = this.chart.chartArea) {\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    return items;\r\n  }\r\n\r\n  // When a new layout is created, reset the data limits cache\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n\r\n  // These methods are ordered by lifecycle. Utilities then follow.\r\n  // Any function defined here is inherited by all scale types.\r\n  // Any function can be extended by the scale type\r\n\r\n  beforeUpdate() {\r\n    call(this.options.beforeUpdate, [this]);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} maxWidth - the max width in pixels\r\n\t * @param {number} maxHeight - the max height in pixels\r\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\r\n\t *   This space comes from two sources:\r\n\t *     - padding - space that's required to show the labels at the edges of the scale\r\n\t *     - thickness of scales or legends in another orientation\r\n\t */\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n\r\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n    this.beforeUpdate();\r\n\r\n    // Absorb the master measurements\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n\r\n    // Dimensions\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n\r\n    // Data min/max\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n\r\n    this.beforeBuildTicks();\r\n\r\n    this.ticks = this.buildTicks() || [];\r\n\r\n    // Allow modification of ticks in callback.\r\n    this.afterBuildTicks();\r\n\r\n    // Compute tick rotation and fit using a sampled subset of labels\r\n    // We generally don't need to compute the size of every single label for determining scale size\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n\r\n    // configure is called twice, once here, once from core.controller.updateLayout.\r\n    // Here we haven't been positioned yet, but dimensions are correct.\r\n    // Variables set in configure are needed for calculateLabelRotation, and\r\n    // it's ok that coordinates are not correct there, only dimensions matter.\r\n    this.configure();\r\n\r\n    // Tick Rotation\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\r\n    this.afterCalculateLabelRotation();\r\n\r\n    // Auto-skip\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n      this.afterAutoSkip();\r\n    }\r\n\r\n    if (samplingEnabled) {\r\n      // Generate labels using all non-skipped ticks\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n\r\n    this.beforeFit();\r\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\r\n    this.afterFit();\r\n\r\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\r\n\r\n    this.afterUpdate();\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      // by default vertical scales are from bottom to top, so pixels are reversed\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n\r\n  afterUpdate() {\r\n    call(this.options.afterUpdate, [this]);\r\n  }\r\n\r\n  //\r\n\r\n  beforeSetDimensions() {\r\n    call(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    // Set the unconstrained dimension before label rotation\r\n    if (this.isHorizontal()) {\r\n      // Reset position before calculating rotation\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n\r\n      // Reset position before calculating rotation\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n\r\n    // Reset padding\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    call(this.options.afterSetDimensions, [this]);\r\n  }\r\n\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    call(this.options[name], [this]);\r\n  }\r\n\r\n  // Data limits\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n\r\n  //\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  /**\r\n\t * @return {object[]} the ticks\r\n\t */\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n\r\n  beforeTickToLabelConversion() {\r\n    call(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  /**\r\n\t * Convert ticks to label strings\r\n\t * @param {Tick[]} ticks\r\n\t */\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    call(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n\r\n  //\r\n\r\n  beforeCalculateLabelRotation() {\r\n    call(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n\r\n    // Estimate the width of each grid based on the canvas width, the maximum\r\n    // label width and the number of tick intervals\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n\r\n    // Allow 3 pixels x2 padding either side for label readability\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    call(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  afterAutoSkip() {}\r\n\r\n  //\r\n\r\n  beforeFit() {\r\n    call(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    // Reset\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight; // fill all the height\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n\r\n      // Don't bother fitting the ticks if we are not showing the labels\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n\r\n        if (isHorizontal) {\r\n        // A horizontal axis is more constrained by the height.\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n        // A vertical axis is more constrained by the width. Labels are the\r\n        // dominant factor here, so get that length first and account for padding\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n\r\n    this._handleMargins();\r\n\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n\r\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n      // which means that the right padding is dominated by the font height\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else if (align !== 'inner') {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n\r\n      // Adjust padding taking into account changes in offsets\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Handle margins and padding interactions\r\n\t * @private\r\n\t */\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n\r\n  afterFit() {\r\n    call(this.options.afterFit, [this]);\r\n  }\r\n\r\n  // Shared Methods\r\n  /**\r\n\t * @return {boolean}\r\n\t */\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  /**\r\n\t * @return {boolean}\r\n\t */\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n\r\n  /**\r\n\t * @param {Tick[]} ticks\r\n\t * @private\r\n\t */\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n\r\n    this.generateTickLabels(ticks);\r\n\r\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n\r\n    this.afterTickToLabelConversion();\r\n  }\r\n\r\n  /**\r\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\r\n\t * @private\r\n\t */\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\r\n    }\r\n\r\n    return labelSizes;\r\n  }\r\n\r\n  /**\r\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\r\n\t * labels where offset indicates the anchor point offset from the top in pixels.\r\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\r\n\t * @private\r\n\t */\r\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n\r\n    for (i = 0; i < length; i += increment) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      // Undefined labels and arrays should not be measured\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        // if it is an array let's measure each element\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = /** @type {string} */ (label[j]);\r\n          // Undefined labels and arrays should not be measured\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * Used to get the label to display in the tooltip for the given value\r\n\t * @param {*} value\r\n\t * @return {string}\r\n\t */\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n\r\n  /**\r\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\r\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n\t * @param {*} value\r\n\t * @param {number} [index]\r\n\t * @return {number}\r\n\t */\r\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\r\n    return NaN;\r\n  }\r\n\r\n  /**\r\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n\t * @param {number} pixel\r\n\t * @return {*}\r\n\t */\r\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\r\n\r\n  /**\r\n\t * Returns the location of the tick at the given index\r\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n\t * @param {number} index\r\n\t * @return {number}\r\n\t */\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n\r\n  /**\r\n\t * Utility for getting the pixel location of a percentage of scale\r\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n\t * @param {number} decimal\r\n\t * @return {number}\r\n\t */\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} pixel\r\n\t * @return {number}\r\n\t */\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n\r\n  /**\r\n\t * Returns the pixel for the minimum chart value\r\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n\t * @return {number}\r\n\t */\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n\r\n  /**\r\n\t * @return {number}\r\n\t */\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n\r\n  /**\r\n\t * @return {number}\r\n\t * @private\r\n\t */\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n\r\n    // Calculate space needed by label in axis direction.\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n\r\n    // Calculate space needed for 1 tick in axis direction.\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n\r\n  /**\r\n\t * @return {boolean}\r\n\t * @private\r\n\t */\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position, border} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n\r\n    const borderOpts = border.setContext(this.getContext());\r\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const context = this.getContext(i);\r\n      const optsAtIndex = grid.setContext(context);\r\n      const optsAtIndexBorder = border.setContext(context);\r\n\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = optsAtIndexBorder.dash || [];\r\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\r\n\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n\r\n      // Skip if the pixel is out of the range\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      let tickTextAlign = textAlign;\r\n\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n\r\n        if (textAlign === 'inner') {\r\n          if (i === ilen - 1) {\r\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n          } else if (i === 0) {\r\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n          } else {\r\n            tickTextAlign = 'center';\r\n          }\r\n        }\r\n\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          // eslint-disable-next-line no-lonely-if\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\r\n          x += (lineHeight / 2) * Math.sin(rotation);\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n\r\n      let backdrop;\r\n\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n\r\n        let top = textOffset - labelPadding.top;\r\n        let left = 0 - labelPadding.left;\r\n\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        default:\r\n          break;\r\n        }\r\n\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        default:\r\n          break;\r\n        }\r\n\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n\r\n      items.push({\r\n        label,\r\n        font,\r\n        textOffset,\r\n        options: {\r\n          rotation,\r\n          color,\r\n          strokeColor,\r\n          strokeWidth,\r\n          textAlign: tickTextAlign,\r\n          textBaseline,\r\n          translation: [x, y],\r\n          backdrop,\r\n        }\r\n      });\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n\r\n    let align = 'center';\r\n\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    } else if (ticks.align === 'inner') {\r\n      align = 'inner';\r\n    }\r\n\r\n    return align;\r\n  }\r\n\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n\r\n    let textAlign;\r\n    let x;\r\n\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n\r\n    return {textAlign, x};\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawBorder() {\r\n    const {chart, ctx, options: {border, grid}} = this;\r\n    const borderOpts = border.setContext(this.getContext());\r\n    const axisWidth = border.display ? borderOpts.width : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.width;\r\n    ctx.strokeStyle = borderOpts.color;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n\r\n    const ctx = this.ctx;\r\n\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n\r\n    const items = this.getLabelItems(chartArea);\r\n    for (const item of items) {\r\n      const renderTextOptions = item.options;\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      const y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\r\n    }\r\n\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n\r\n  /**\r\n\t * @return {object[]}\r\n\t * @private\r\n\t */\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\r\n\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      // backward compatibility: draw has been overridden by custom scale\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: bz,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n\r\n  /**\r\n\t * Returns visible dataset metas that are attached to this scale\r\n\t * @param {string} [type] - if specified, also filter by dataset type\r\n\t * @return {object[]}\r\n\t */\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n\t * @param {number} index\r\n\t * @return {object}\r\n\t * @protected\r\n \t */\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n","import {merge} from '../helpers/index.js';\r\nimport defaults, {overrides} from './core.defaults.js';\r\n\r\n/**\r\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\r\n */\r\n\r\nexport default class TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n\r\n  /**\r\n\t * @param {IChartComponent} item\r\n\t * @returns {string} The scope where items defaults were registered to.\r\n\t */\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n\r\n    if (isIChartComponent(proto)) {\r\n      // Make sure the parent is registered and note the scope where its defaults are.\r\n      parentScope = this.register(proto);\r\n    }\r\n\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n\r\n    if (id in items) {\r\n      // already registered\r\n      return scope;\r\n    }\r\n\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n\r\n    return scope;\r\n  }\r\n\r\n  /**\r\n\t * @param {string} id\r\n\t * @returns {object?}\r\n\t */\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n\r\n  /**\r\n\t * @param {IChartComponent} item\r\n\t */\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  // Inherit the parent's defaults and keep existing defaults\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n\r\n  defaults.set(scope, itemDefaults);\r\n\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\n\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\n\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n","import DatasetController from './core.datasetController.js';\r\nimport Element from './core.element.js';\r\nimport Scale from './core.scale.js';\r\nimport TypedRegistry from './core.typedRegistry.js';\r\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\r\n\r\n/**\r\n * Please use the module's default export which provides a singleton instance\r\n * Note: class is exported for typedoc\r\n */\r\nexport class Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    // Order is important, Scale has Element in prototype chain,\r\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n\r\n  /**\r\n\t * @param  {...any} args\r\n\t */\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof DatasetController} args\r\n\t */\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof Element} args\r\n\t */\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...any} args\r\n\t */\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof Scale} args\r\n\t */\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n\r\n  /**\r\n\t * @param {string} id\r\n\t * @returns {typeof DatasetController}\r\n\t */\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n\r\n  /**\r\n\t * @param {string} id\r\n\t * @returns {typeof Element}\r\n\t */\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n\r\n  /**\r\n\t * @param {string} id\r\n\t * @returns {object}\r\n\t */\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n\r\n  /**\r\n\t * @param {string} id\r\n\t * @returns {typeof Scale}\r\n\t */\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof DatasetController} args\r\n\t */\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof Element} args\r\n\t */\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...any} args\r\n\t */\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n\r\n  /**\r\n\t * @param  {...typeof Scale} args\r\n\t */\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        // Handle loopable args\r\n        // Use case:\r\n        //  import * as plugins from './plugins.js';\r\n        //  Chart.register(plugins);\r\n        each(arg, item => {\r\n          // If there are mixed types in the loopable, make sure those are\r\n          // registered in correct registry\r\n          // Use case: (treemap exporting controller, elements etc)\r\n          //  import * as treemap from 'chartjs-chart-treemap.js';\r\n          //  Chart.register(treemap);\r\n\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\r\n    registry[method](component);\r\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    // plugins is the fallback registry\r\n    return this.plugins;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n\r\n}\r\n\r\n// singleton instance\r\nexport default /* #__PURE__ */ new Registry();\r\n","import registry from './core.registry.js';\r\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\r\n\r\n/**\r\n * @typedef { import('./core.controller.js').default } Chart\r\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\r\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\r\n */\r\n\r\n/**\r\n * @callback filterCallback\r\n * @param {{plugin: object, options: object}} value\r\n * @param {number} [index]\r\n * @param {array} [array]\r\n * @param {object} [thisArg]\r\n * @return {boolean}\r\n */\r\n\r\n\r\nexport default class PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n\r\n  /**\r\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\r\n\t * returned value can be used, for instance, to interrupt the current action.\r\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\r\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\r\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\r\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\r\n\t */\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  invalidate() {\r\n    // When plugins are registered, there is the possibility of a double\r\n    // invalidate situation. In this case, we only want to invalidate once.\r\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\r\n    // plugins are restarted without being correctly stopped.\r\n    // See https://github.com/chartjs/Chart.js/issues/8147\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @param {Chart} chart\r\n\t * @private\r\n\t */\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n\r\n    this._notifyStateChanges(chart);\r\n\r\n    return descriptors;\r\n  }\r\n\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    // options === false => all plugins are disabled\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n\r\n  /**\r\n\t * @param {Chart} chart\r\n\t * @private\r\n\t */\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./core.config.js').default} config\r\n */\r\nfunction allPlugins(config) {\r\n  const localIds = {};\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n      localIds[plugin.id] = true;\r\n    }\r\n  }\r\n\r\n  return {plugins, localIds};\r\n}\r\n\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n\r\n  for (const plugin of plugins) {\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction pluginOpts(config, {plugin, local}, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  if (local && plugin.defaults) {\r\n    // make sure plugin defaults are in scopes for local (not registered) plugins\r\n    scopes.push(plugin.defaults);\r\n  }\r\n  return config.createResolver(scopes, context, [''], {\r\n    // These are just defaults that plugins can override\r\n    scriptable: false,\r\n    indexable: false,\r\n    allKeys: true\r\n  });\r\n}\r\n","import defaults, {overrides, descriptors} from './core.defaults.js';\r\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\r\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\r\n\r\nexport function getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\n\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\n\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\n\r\nfunction idMatchesAxis(id) {\r\n  if (id === 'x' || id === 'y' || id === 'r') {\r\n    return id;\r\n  }\r\n}\r\n\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\n\r\nexport function determineAxis(id, ...scaleOptions) {\r\n  if (idMatchesAxis(id)) {\r\n    return id;\r\n  }\r\n  for (const opts of scaleOptions) {\r\n    const axis = opts.axis\r\n      || axisFromPosition(opts.position)\r\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\r\n    if (axis) {\r\n      return axis;\r\n    }\r\n  }\r\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\r\n}\r\n\r\nfunction getAxisFromDataset(id, axis, dataset) {\r\n  if (dataset[axis + 'AxisID'] === id) {\r\n    return {axis};\r\n  }\r\n}\r\n\r\nfunction retrieveAxisFromDatasets(id, config) {\r\n  if (config.data && config.data.datasets) {\r\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\r\n    if (boundDs.length) {\r\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\r\n    }\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const scales = Object.create(null);\r\n\r\n  // First figure out first scale id's per axis.\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n\r\n  // Then merge dataset defaults to scale configs\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n\r\n  // apply scale defaults, if not overridden by dataset defaults\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n\r\n  return scales;\r\n}\r\n\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\n\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\n\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n\r\n  initOptions(config);\r\n\r\n  return config;\r\n}\r\n\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\n\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\n\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\n\r\nexport default class Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n\r\n  /**\r\n   * Returns the option scope keys for resolving dataset options.\r\n   * These keys do not include the dataset itself, because it is not under options.\r\n   * @param {string} datasetType\r\n   * @return {string[][]}\r\n   */\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n\r\n  /**\r\n   * Returns the option scope keys for resolving dataset animation options.\r\n   * These keys do not include the dataset itself, because it is not under options.\r\n   * @param {string} datasetType\r\n   * @param {string} transition\r\n   * @return {string[][]}\r\n   */\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        // The following are used for looking up the `animations` and `animation` keys\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n\r\n  /**\r\n   * Returns the options scope keys for resolving element options that belong\r\n   * to an dataset. These keys do not include the dataset itself, because it\r\n   * is not under options.\r\n   * @param {string} datasetType\r\n   * @param {string} elementType\r\n   * @return {string[][]}\r\n   */\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n\r\n  /**\r\n   * Returns the options scope keys for resolving plugin options.\r\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\r\n   * @return {string[][]}\r\n   */\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n\r\n  /**\r\n   * Resolves the objects from options and defaults for option value resolution.\r\n   * @param {object} mainScope - The main scope object for options\r\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\r\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\r\n   */\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n\r\n    const scopes = new Set();\r\n\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Returns the option scopes for resolving chart options\r\n   * @return {object[]}\r\n   */\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {object[]} scopes\r\n   * @param {string[]} names\r\n   * @param {function|object} context\r\n   * @param {string[]} [prefixes]\r\n   * @return {object}\r\n   */\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {object[]} scopes\r\n   * @param {object} [context]\r\n   * @param {string[]} [prefixes]\r\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\r\n   */\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\n\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\n\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\n\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","import animator from './core.animator.js';\r\nimport defaults, {overrides} from './core.defaults.js';\r\nimport Interaction from './core.interaction.js';\r\nimport layouts from './core.layouts.js';\r\nimport {_detectPlatform} from '../platform/index.js';\r\nimport PluginService from './core.plugins.js';\r\nimport registry from './core.registry.js';\r\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\r\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\r\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\r\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\r\n// @ts-ignore\r\nimport {version} from '../../package.json';\r\nimport {debounce} from '../helpers/helpers.extras.js';\r\n\r\n/**\r\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\r\n * @typedef { import('../types/index.js').Point } Point\r\n */\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\n\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\n\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n\r\n  chart.notifyPlugins('afterRender');\r\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\n\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\n\r\n/**\r\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\r\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\r\n */\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    // Support for array based queries (such as jQuery)\r\n    item = item[0];\r\n  }\r\n\r\n  if (item && item.canvas) {\r\n    // Support for any object associated to a canvas (including a context2d)\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\n\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\n\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {ChartEvent} e\r\n * @param {ChartEvent|null} lastEvent\r\n * @param {boolean} inChartArea\r\n * @param {boolean} isClick\r\n * @returns {ChartEvent|null}\r\n */\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\n\r\nfunction getSizeForArea(scale, chartArea, field) {\r\n  return scale.options.clip ? scale[field] : chartArea[field];\r\n}\r\n\r\nfunction getDatasetArea(meta, chartArea) {\r\n  const {xScale, yScale} = meta;\r\n  if (xScale && yScale) {\r\n    return {\r\n      left: getSizeForArea(xScale, chartArea, 'left'),\r\n      right: getSizeForArea(xScale, chartArea, 'right'),\r\n      top: getSizeForArea(yScale, chartArea, 'top'),\r\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\r\n    };\r\n  }\r\n  return chartArea;\r\n}\r\n\r\nclass Chart {\r\n\r\n  static defaults = defaults;\r\n  static instances = instances;\r\n  static overrides = overrides;\r\n  static registry = registry;\r\n  static version = version;\r\n  static getChart = getChart;\r\n\r\n  static register(...items) {\r\n    registry.add(...items);\r\n    invalidatePlugins();\r\n  }\r\n\r\n  static unregister(...items) {\r\n    registry.remove(...items);\r\n    invalidatePlugins();\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\r\n      );\r\n    }\r\n\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    // Store the previously used aspect ratio to determine if a resize\r\n    // is needed during updates. Do this after _options is set since\r\n    // aspectRatio uses a getter\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n\r\n    // Add the chart instance to the global namespace\r\n    instances[this.id] = this;\r\n\r\n    if (!context || !canvas) {\r\n      // The given item is not a compatible context2d element, let's return before finalizing\r\n      // the chart initialization but after setting basic chart / controller properties that\r\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n      // https://github.com/chartjs/Chart.js/issues/2807\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      // If aspectRatio is defined in options, use that.\r\n      return aspectRatio;\r\n    }\r\n\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\r\n      return _aspectRatio;\r\n    }\r\n\r\n    // Calculate\r\n    return height ? width / height : null;\r\n  }\r\n\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n\r\n  get registry() {\r\n    return registry;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _initialize() {\r\n    // Before init plugin notification\r\n    this.notifyPlugins('beforeInit');\r\n\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n\r\n    this.bindEvents();\r\n\r\n    // After init plugin notification\r\n    this.notifyPlugins('afterInit');\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n\t * Resize the chart to its container or to explicit dimensions.\r\n\t * @param {number} [width]\r\n\t * @param {number} [height]\r\n\t */\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n\r\n    this.notifyPlugins('resize', {size: newSize});\r\n\r\n    callCallback(options.onResize, [this, newSize], this);\r\n\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        // The resize update is delayed, only draw without updating.\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * Builds a map of scale ID to scale object for future lookup.\r\n\t */\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    // clear up discarded scales\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n\r\n    this._removeUnreferencedMetasets();\r\n\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n\r\n  /**\r\n\t * Reset the elements of all datasets\r\n\t * @private\r\n\t */\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n\r\n  /**\r\n\t* Resets the chart back to its state before the initial animation\r\n\t*/\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n\r\n  update(mode) {\r\n    const config = this.config;\r\n\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n\r\n    // plugins options references might have change, let's invalidate the cache\r\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n    this._plugins.invalidate();\r\n\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    // Make sure dataset controllers are updated and new controllers are reset\r\n    const newControllers = this.buildOrUpdateControllers();\r\n\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n\r\n    // Make sure all dataset controllers have correct meta data counts\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      // New controllers will be reset after the layout pass, so we only want to modify\r\n      // elements added to new datasets\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n\r\n    // Only reset the controllers if we have animations\r\n    if (!animsDisabled) {\r\n      // Can only reset the new controllers after the scales have been updated\r\n      // Reset is done to get the starting point for the initial animation\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n\r\n    this._updateDatasets(mode);\r\n\r\n    // Do this before render so that any plugins that need final scale updates can use it\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n\r\n    // Replay last event from before update, or set hover styles on active elements\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      // The configured events have changed. Rebind.\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n\r\n  /**\r\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n\t * hook, in which case, plugins will not be called on `afterLayout`.\r\n\t * @private\r\n\t */\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\r\n        return;\r\n      }\r\n\r\n      // configure is called twice, once in core.scale.update and once here.\r\n      // Here the boxes are fully updated and at their final positions.\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n\r\n  /**\r\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n\t * @private\r\n\t */\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n\r\n  /**\r\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n\t * @private\r\n\t */\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n\r\n    meta.controller._update(mode);\r\n\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\r\n    // currently be part of layers. Instead, we draw\r\n    // layers <= 0 before(default, backward compat), and the rest after\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n\r\n    this._drawDatasets();\r\n\r\n    // Rest of layers\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n\t * Gets the visible dataset metas in drawing order\r\n\t * @return {object[]}\r\n\t */\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n\r\n  /**\r\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n\t * @private\r\n\t */\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n\r\n  /**\r\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n\t * @private\r\n\t */\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = getDatasetArea(meta, this.chartArea);\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n\r\n    meta.controller.draw();\r\n\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the given point is in the chart area.\r\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\r\n   * @returns {boolean}\r\n   */\r\n  isPointInArea(point) {\r\n    return _isPointInArea(point, this.chartArea, this._minPadding);\r\n  }\r\n\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\t\t\t// See isDatasetVisible() comment\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n\r\n    return meta;\r\n  }\r\n\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n\r\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n\r\n    this._stop();\r\n    this.config.clearCache();\r\n\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n\r\n    delete instances[this.id];\r\n\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n\r\n    let detached; // eslint-disable-line prefer-const\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n\r\n      this.attached = true;\r\n      this.resize();\r\n\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n\r\n    detached = () => {\r\n      this.attached = false;\r\n\r\n      _remove('resize', listener);\r\n\r\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\r\n      this._stop();\r\n      this._resize(0, 0);\r\n\r\n      _add('attach', attached);\r\n    };\r\n\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Get active (hovered) elements\r\n\t * @returns array\r\n\t */\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n\r\n  /**\r\n\t * Set active (hovered) elements\r\n\t * @param {array} activeElements New active data points\r\n\t */\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n\r\n    if (changed) {\r\n      this._active = active;\r\n      // Make sure we don't use the previous mouse event to override the active elements in update.\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Calls enabled plugins on the specified hook and with the given args.\r\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\r\n\t * returned value can be used, for instance, to interrupt the current action.\r\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\r\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\r\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\r\n\t */\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n\r\n  /**\r\n   * Check if a plugin with the specific ID is registered and enabled\r\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\r\n   * @returns {boolean}\r\n   */\r\n  isPluginEnabled(pluginId) {\r\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: this.isPointInArea(e)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n\t * Handle an event\r\n\t * @param {ChartEvent} e the event to handle\r\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\r\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\r\n\t * @return {boolean} true if the chart needs to re-render\r\n\t * @private\r\n\t */\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n\r\n    // If the event is replayed from `update`, we should evaluate with the final positions.\r\n    //\r\n    // The `replay`:\r\n    // It's the last event (excluding click) that has occurred before `update`.\r\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\r\n    //\r\n    // The why:\r\n    // If animations are active, the elements haven't moved yet compared to state before update.\r\n    // But if they will, we are activating the elements that would be active, if this check\r\n    // was done after the animations have completed. => \"final positions\".\r\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\r\n    // This is done so we do not have to evaluate the active elements each animation frame\r\n    // - it would be expensive.\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n\r\n    if (inChartArea) {\r\n      // Set _lastEvent to null while we are processing the event handlers.\r\n      // This prevents recursion if the handler calls chart.update()\r\n      this._lastEvent = null;\r\n\r\n      // Invoke onHover hook\r\n      callCallback(options.onHover, [e, active, this], this);\r\n\r\n      if (isClick) {\r\n        callCallback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n\r\n    this._lastEvent = lastEvent;\r\n\r\n    return changed;\r\n  }\r\n\r\n  /**\r\n   * @param {ChartEvent} e - The event\r\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\r\n   * @param {boolean} inChartArea - Is the envent inside chartArea\r\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\r\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\r\n   * @pravate\r\n   */\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n\r\n    if (!inChartArea) {\r\n      // Let user control the active elements outside chartArea. Eg. using Legend.\r\n      return lastActive;\r\n    }\r\n\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\n\r\n// @ts-ignore\r\nfunction invalidatePlugins() {\r\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\r\n}\r\n\r\nexport default Chart;\r\n","/**\r\n * @namespace Chart._adapters\r\n * @since 2.8.0\r\n * @private\r\n */\r\n\r\nimport type {AnyObject} from '../types/basic.js';\r\nimport type {ChartOptions} from '../types/index.js';\r\n\r\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\r\n\r\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\r\n  readonly options: T;\r\n  /**\r\n   * Will called with chart options after adapter creation.\r\n   */\r\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\r\n  /**\r\n   * Returns a map of time formats for the supported formatting units defined\r\n   * in Unit as well as 'datetime' representing a detailed date/time string.\r\n   */\r\n  formats(this: DateAdapter<T>): Record<string, string>;\r\n  /**\r\n   * Parses the given `value` and return the associated timestamp.\r\n   * @param value - the value to parse (usually comes from the data)\r\n   * @param [format] - the expected data format\r\n   */\r\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\r\n  /**\r\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\r\n   * @param timestamp - the timestamp to format\r\n   * @param format - the date/time token\r\n   */\r\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\r\n  /**\r\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\r\n   * @param timestamp - the input timestamp\r\n   * @param amount - the amount to add\r\n   * @param unit - the unit as string\r\n   */\r\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\r\n  /**\r\n   * Returns the number of `unit` between the given timestamps.\r\n   * @param a - the input timestamp (reference)\r\n   * @param b - the timestamp to subtract\r\n   * @param unit - the unit as string\r\n   */\r\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\r\n  /**\r\n   * Returns start of `unit` for the given `timestamp`.\r\n   * @param timestamp - the input timestamp\r\n   * @param unit - the unit as string\r\n   * @param [weekday] - the ISO day of the week with 1 being Monday\r\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\r\n   */\r\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\r\n  /**\r\n   * Returns end of `unit` for the given `timestamp`.\r\n   * @param timestamp - the input timestamp\r\n   * @param unit - the unit as string\r\n   */\r\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\r\n}\r\n\r\nfunction abstract<T = void>(): T {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\n\r\n/**\r\n * Date adapter (current used by the time scale)\r\n * @namespace Chart._adapters._date\r\n * @memberof Chart._adapters\r\n * @private\r\n */\r\nclass DateAdapterBase implements DateAdapter {\r\n\r\n  /**\r\n   * Override default date adapter methods.\r\n   * Accepts type parameter to define options type.\r\n   * @example\r\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\r\n   *   init() {\r\n   *     console.log(this.options.myAdapterOption);\r\n   *   }\r\n   * })\r\n   */\r\n  static override<T extends AnyObject = AnyObject>(\r\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\r\n  ) {\r\n    Object.assign(DateAdapterBase.prototype, members);\r\n  }\r\n\r\n  readonly options: AnyObject;\r\n\r\n  constructor(options: AnyObject) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  init() {}\r\n\r\n  formats(): Record<string, string> {\r\n    return abstract();\r\n  }\r\n\r\n  parse(): number | null {\r\n    return abstract();\r\n  }\r\n\r\n  format(): string {\r\n    return abstract();\r\n  }\r\n\r\n  add(): number {\r\n    return abstract();\r\n  }\r\n\r\n  diff(): number {\r\n    return abstract();\r\n  }\r\n\r\n  startOf(): number {\r\n    return abstract();\r\n  }\r\n\r\n  endOf(): number {\r\n    return abstract();\r\n  }\r\n}\r\n\r\nexport default {\r\n  _date: DateAdapterBase\r\n};\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {\r\n  _arrayUnique, isArray, isNullOrUndef,\r\n  valueOrDefault, resolveObjectKey, sign, defined\r\n} from '../helpers/index.js';\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\n\r\n/**\r\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n * @private\r\n */\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      // Ignore truncated pixels\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      // curr - prev === 0 is ignored\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n\r\n  return min;\r\n}\r\n\r\n/**\r\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n * @private\r\n */\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    // When bar thickness is enforced, category and bar percentages are ignored.\r\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\n\r\n/**\r\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n * percentage options are 1), based on the previous and following categories. This mode\r\n * generates bars with different widths when data are not evenly spaced.\r\n * @private\r\n */\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n\r\n  if (prev === null) {\r\n    // first data: its size is double based on the next point or,\r\n    // if it's also the last data, we use the scale size.\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n\r\n  if (next === null) {\r\n    // last data: its size is also double based on the previous point.\r\n    next = curr + curr - prev;\r\n  }\r\n\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\n\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n\r\n  // Store `barEnd` (furthest away from origin) as parsed value,\r\n  // to make stacking straight forward\r\n  item[vScale.axis] = barEnd;\r\n\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\n\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\n\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\n\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\n\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\n\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n\r\n  if (edge === true) {\r\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\r\n    return;\r\n  }\r\n\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\n\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\n\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\n\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\n\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\n\r\nexport default class BarController extends DatasetController {\r\n\r\n  static id = 'bar';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: false,\r\n    dataElementType: 'bar',\r\n\r\n    categoryPercentage: 0.8,\r\n    barPercentage: 0.9,\r\n    grouped: true,\r\n\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'base', 'width', 'height']\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    scales: {\r\n      _index_: {\r\n        type: 'category',\r\n        offset: true,\r\n        grid: {\r\n          offset: true\r\n        }\r\n      },\r\n      _value_: {\r\n        type: 'linear',\r\n        beginAtZero: true,\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n\t * Overriding primitive data parsing since we support mixed primitive/array\r\n\t * data for float bars\r\n\t * @protected\r\n\t */\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n\r\n  /**\r\n\t * Overriding array data parsing since we support mixed primitive/array\r\n\t * data for float bars\r\n\t * @protected\r\n\t */\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n\r\n  /**\r\n\t * Overriding object data parsing since we support mixed primitive/array\r\n\t * value-scale data for float bars\r\n\t * @protected\r\n\t */\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      // float bar: only one end of the bar is considered by `super`\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @return {number|boolean}\r\n\t * @protected\r\n\t */\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n\r\n    super.initialize();\r\n\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Returns the stacks based on groups and bar visibility.\r\n\t * @param {number} [last] - The dataset index\r\n\t * @param {number} [dataIndex] - The data index of the ruler\r\n\t * @returns {string[]} The list of stack IDs\r\n\t * @private\r\n\t */\r\n  _getStacks(last, dataIndex) {\r\n    const {iScale} = this._cachedMeta;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\r\n      .filter(meta => meta.controller.options.grouped);\r\n    const stacked = iScale.options.stacked;\r\n    const stacks = [];\r\n\r\n    const skipNull = (meta) => {\r\n      const parsed = meta.controller.getParsed(dataIndex);\r\n      const val = parsed && parsed[meta.vScale.axis];\r\n\r\n      if (isNullOrUndef(val) || isNaN(val)) {\r\n        return true;\r\n      }\r\n    };\r\n\r\n    for (const meta of metasets) {\r\n      if (dataIndex !== undefined && skipNull(meta)) {\r\n        continue;\r\n      }\r\n\r\n      // stacked   | meta.stack\r\n      //           | found | not found | undefined\r\n      // false     |   x   |     x     |     x\r\n      // true      |       |     x     |\r\n      // undefined |       |     x     |     x\r\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\r\n        stacks.push(meta.stack);\r\n      }\r\n      if (meta.index === last) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\r\n    // stack where possible invisible bars will be located.\r\n    // https://github.com/chartjs/Chart.js/issues/6368\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n\r\n    return stacks;\r\n  }\r\n\r\n  /**\r\n\t * Returns the effective number of stacks based on groups and bar visibility.\r\n\t * @private\r\n\t */\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n\r\n  /**\r\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\r\n\t * @param {number} [datasetIndex] - The dataset index\r\n\t * @param {string} [name] - The stack name to find\r\n   * @param {number} [dataIndex]\r\n\t * @returns {number} The stack index\r\n\t * @private\r\n\t */\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1; // indexOf returns -1 if element is not present\r\n\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      // bar thickness ratio used for non-grouped bars\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * Note: pixel values are not clamped to the scale area.\r\n\t * @private\r\n\t */\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      // bars crossing origin are not stacked\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      // When not visible, no height\r\n      head = base;\r\n    }\r\n\r\n    size = head - base;\r\n\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      const startPixel = vScale.getPixelForDecimal(0);\r\n      const endPixel = vScale.getPixelForDecimal(1);\r\n      const min = Math.min(startPixel, endPixel);\r\n      const max = Math.max(startPixel, endPixel);\r\n      base = Math.max(Math.min(base, max), min);\r\n      head = base + size;\r\n\r\n      if (_stacked && !floating) {\r\n        // visual data coordinates after applying minBarLength\r\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\r\n      }\r\n    }\r\n\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      // For non-grouped bar charts, exact pixel values are used\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {valueOrDefault} from '../helpers/helpers.core.js';\r\n\r\nexport default class BubbleController extends DatasetController {\r\n\r\n  static id = 'bubble';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: false,\r\n    dataElementType: 'point',\r\n\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'borderWidth', 'radius']\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear'\r\n      },\r\n      y: {\r\n        type: 'linear'\r\n      }\r\n    }\r\n  };\r\n\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n\r\n  /**\r\n\t * Parse array of primitive values\r\n\t * @protected\r\n\t */\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * Parse array of arrays\r\n\t * @protected\r\n\t */\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * Parse array of objects\r\n\t * @protected\r\n\t */\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const labels = this.chart.data.labels || [];\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n\r\n    return {\r\n      label: labels[index] || '',\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n\r\n    // Update Points\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @param {number} index\r\n\t * @param {string} [mode]\r\n\t * @protected\r\n\t */\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n\r\n    // In case values were cached (and thus frozen), we need to clone the values\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n\r\n    // Custom radius resolution\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n\r\n    return values;\r\n  }\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\r\nimport {formatNumber} from '../helpers/helpers.intl.js';\r\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\r\n\r\n/**\r\n * @typedef { import('../core/core.controller.js').default } Chart\r\n */\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\n\r\nexport default class DoughnutController extends DatasetController {\r\n\r\n  static id = 'doughnut';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: false,\r\n    dataElementType: 'arc',\r\n    animation: {\r\n      // Boolean - Whether we animate the rotation of the Doughnut\r\n      animateRotate: true,\r\n      // Boolean - Whether we animate scaling the Doughnut from the centre\r\n      animateScale: false\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n      },\r\n    },\r\n    // The percentage of the chart that we cut out of the middle.\r\n    cutout: '50%',\r\n\r\n    // The rotation of the chart, where the first data arc begins.\r\n    rotation: 0,\r\n\r\n    // The total circumference of the chart.\r\n    circumference: 360,\r\n\r\n    // The outer radius of the chart\r\n    radius: '100%',\r\n\r\n    // Spacing between arcs\r\n    spacing: 0,\r\n\r\n    indexAxis: 'r',\r\n  };\r\n\r\n  static descriptors = {\r\n    _scriptable: (name) => name !== 'spacing',\r\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    aspectRatio: 1,\r\n\r\n    // Need to override these to give a nice default\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          generateLabels(chart) {\r\n            const data = chart.data;\r\n            if (data.labels.length && data.datasets.length) {\r\n              const {labels: {pointStyle, color}} = chart.legend.options;\r\n\r\n              return data.labels.map((label, i) => {\r\n                const meta = chart.getDatasetMeta(0);\r\n                const style = meta.controller.getStyle(i);\r\n\r\n                return {\r\n                  text: label,\r\n                  fillStyle: style.backgroundColor,\r\n                  strokeStyle: style.borderColor,\r\n                  fontColor: color,\r\n                  lineWidth: style.borderWidth,\r\n                  pointStyle: pointStyle,\r\n                  hidden: !chart.getDataVisibility(i),\r\n\r\n                  // Extra data used for toggling the correct item\r\n                  index: i\r\n                };\r\n              });\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n\r\n        onClick(e, legendItem, legend) {\r\n          legend.chart.toggleDataVisibility(legendItem.index);\r\n          legend.chart.update();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n\r\n  linkScales() {}\r\n\r\n  /**\r\n\t * Override data parsing, since we are not using scales\r\n\t */\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n\r\n  /**\r\n\t * Get the maximal rotation & circumference extents\r\n\t * across all visible datasets.\r\n\t */\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @param {string} mode\r\n\t */\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n\r\n    // Compute the maximal rotation & circumference limits.\r\n    // If we only consider our dataset, this can cause problems when two datasets\r\n    // are both less than a circle with different rotations (starting angles)\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n\r\n    meta.total = this.calculateTotal();\r\n\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  }\r\n\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n\r\n    if (!arcs) {\r\n      // Find the outmost visible dataset\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n\r\n  /**\r\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\r\n\t * @private\r\n\t */\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n\r\n    return ringWeightOffset;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n\r\n  /**\r\n\t * Returns the sum of all visible data set weights.\r\n\t * @private\r\n\t */\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {isNullOrUndef} from '../helpers/index.js';\r\nimport {isNumber} from '../helpers/helpers.math.js';\r\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\r\n\r\nexport default class LineController extends DatasetController {\r\n\r\n  static id = 'line';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: 'line',\r\n    dataElementType: 'point',\r\n\r\n    showLine: true,\r\n    spanGaps: false,\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    scales: {\r\n      _index_: {\r\n        type: 'category',\r\n      },\r\n      _value_: {\r\n        type: 'linear',\r\n      },\r\n    }\r\n  };\r\n\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    this.supportsDecimation = true;\r\n    super.initialize();\r\n  }\r\n\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    // @ts-ignore\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n\r\n    // Update Line\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n\r\n    // Update Points\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    const end = start + count;\r\n    const pointsCount = points.length;\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n\r\n    for (let i = 0; i < pointsCount; ++i) {\r\n      const point = points[i];\r\n      const properties = directUpdate ? point : {};\r\n\r\n      if (i < start || i >= end) {\r\n        properties.skip = true;\r\n        continue;\r\n      }\r\n\r\n      const parsed = this.getParsed(i);\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n\r\n      prevParsed = parsed;\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\r\n\r\nexport default class PolarAreaController extends DatasetController {\r\n\r\n  static id = 'polarArea';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    dataElementType: 'arc',\r\n    animation: {\r\n      animateRotate: true,\r\n      animateScale: true\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n      },\r\n    },\r\n    indexAxis: 'r',\r\n    startAngle: 0,\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    aspectRatio: 1,\r\n\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          generateLabels(chart) {\r\n            const data = chart.data;\r\n            if (data.labels.length && data.datasets.length) {\r\n              const {labels: {pointStyle, color}} = chart.legend.options;\r\n\r\n              return data.labels.map((label, i) => {\r\n                const meta = chart.getDatasetMeta(0);\r\n                const style = meta.controller.getStyle(i);\r\n\r\n                return {\r\n                  text: label,\r\n                  fillStyle: style.backgroundColor,\r\n                  strokeStyle: style.borderColor,\r\n                  fontColor: color,\r\n                  lineWidth: style.borderWidth,\r\n                  pointStyle: pointStyle,\r\n                  hidden: !chart.getDataVisibility(i),\r\n\r\n                  // Extra data used for toggling the correct item\r\n                  index: i\r\n                };\r\n              });\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n\r\n        onClick(e, legendItem, legend) {\r\n          legend.chart.toggleDataVisibility(legendItem.index);\r\n          legend.chart.update();\r\n        }\r\n      }\r\n    },\r\n\r\n    scales: {\r\n      r: {\r\n        type: 'radialLinear',\r\n        angleLines: {\r\n          display: false\r\n        },\r\n        beginAtZero: true,\r\n        grid: {\r\n          circular: true\r\n        },\r\n        pointLabels: {\r\n          display: false\r\n        },\r\n        startAngle: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  getMinMax() {\r\n    const meta = this._cachedMeta;\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n\r\n    meta.data.forEach((element, index) => {\r\n      const parsed = this.getParsed(index).r;\r\n\r\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n        if (parsed < range.min) {\r\n          range.min = parsed;\r\n        }\r\n\r\n        if (parsed > range.max) {\r\n          range.max = parsed;\r\n        }\r\n      }\r\n    });\r\n\r\n    return range;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n      angle = endAngle;\r\n\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n\r\n  countVisibleElements() {\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\n","import DoughnutController from './controller.doughnut.js';\r\n\r\n// Pie charts are Doughnut chart with different defaults\r\nexport default class PieController extends DoughnutController {\r\n\r\n  static id = 'pie';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    // The percentage of the chart that we cut out of the middle.\r\n    cutout: 0,\r\n\r\n    // The rotation of the chart, where the first data arc begins.\r\n    rotation: 0,\r\n\r\n    // The total circumference of the chart.\r\n    circumference: 360,\r\n\r\n    // The outer radius of the chart\r\n    radius: '100%'\r\n  };\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\r\n\r\nexport default class RadarController extends DatasetController {\r\n\r\n  static id = 'radar';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: 'line',\r\n    dataElementType: 'point',\r\n    indexAxis: 'r',\r\n    showLine: true,\r\n    elements: {\r\n      line: {\r\n        fill: 'start'\r\n      }\r\n    },\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n    aspectRatio: 1,\r\n\r\n    scales: {\r\n      r: {\r\n        type: 'radialLinear',\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n\r\n    // Update Line\r\n    line.points = points;\r\n    // In resize mode only point locations change, so no need to set the points or options.\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n\r\n    // Update Points\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n\r\n  updateElements(points, start, count, mode) {\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\n","import DatasetController from '../core/core.datasetController.js';\r\nimport {isNullOrUndef} from '../helpers/index.js';\r\nimport {isNumber} from '../helpers/helpers.math.js';\r\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\r\n\r\nexport default class ScatterController extends DatasetController {\r\n\r\n  static id = 'scatter';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    datasetElementType: false,\r\n    dataElementType: 'point',\r\n    showLine: false,\r\n    fill: false\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static overrides = {\r\n\r\n    interaction: {\r\n      mode: 'point'\r\n    },\r\n\r\n    scales: {\r\n      x: {\r\n        type: 'linear'\r\n      },\r\n      y: {\r\n        type: 'linear'\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const labels = this.chart.data.labels || [];\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n\r\n    return {\r\n      label: labels[index] || '',\r\n      value: '(' + x + ', ' + y + ')'\r\n    };\r\n  }\r\n\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {data: points = []} = meta;\r\n    // @ts-ignore\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n\r\n    if (this.options.showLine) {\r\n\r\n      // https://github.com/chartjs/Chart.js/issues/11333\r\n      if (!this.datasetElementType) {\r\n        this.addElements();\r\n      }\r\n      const {dataset: line, _dataset} = meta;\r\n\r\n      // Update Line\r\n      line._chart = this.chart;\r\n      line._datasetIndex = this.index;\r\n      line._decimated = !!_dataset._decimated;\r\n      line.points = points;\r\n\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      options.segment = this.options.segment;\r\n      this.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    } else if (this.datasetElementType) {\r\n      // https://github.com/chartjs/Chart.js/issues/11333\r\n      delete meta.dataset;\r\n      this.datasetElementType = false;\r\n    }\r\n\r\n    // Update Points\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n\r\n  addElements() {\r\n    const {showLine} = this.options;\r\n\r\n    if (!this.datasetElementType && showLine) {\r\n      this.datasetElementType = this.chart.registry.getElement('line');\r\n    }\r\n\r\n    super.addElements();\r\n  }\r\n\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n\r\n      prevParsed = parsed;\r\n    }\r\n\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data || [];\r\n\r\n    if (!this.options.showLine) {\r\n      let max = 0;\r\n      for (let i = data.length - 1; i >= 0; --i) {\r\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n      }\r\n      return max > 0 && max;\r\n    }\r\n\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n}\r\n","import Element from '../core/core.element.js';\r\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\r\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\r\nimport {_readValueToProps} from '../helpers/helpers.options.js';\r\nimport type {ArcOptions, Point} from '../types/index.js';\r\n\r\n\r\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n\r\n  // Draw an inner border by clipping the arc and drawing a double-width border\r\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\n\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\n\r\n/**\r\n * Parse border radius from the provided options\r\n */\r\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n\r\n  // Outer limits are complicated. We want to compute the available angular distance at\r\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\r\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\r\n  //\r\n  // If the borderRadius is large, that value can become negative.\r\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\r\n  // we know that the thickness term will dominate and compute the limits at that point\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\n\r\n/**\r\n * Convert (r, 𝜃) to (x, y)\r\n */\r\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Path the arc, respecting border radius by separating into left and right halves.\r\n *\r\n *   Start      End\r\n *\r\n *    1--->a--->2    Outer\r\n *   /           \\\r\n *   8           3\r\n *   |           |\r\n *   |           |\r\n *   7           4\r\n *   \\           /\r\n *    6<---b<---5    Inner\r\n */\r\nfunction pathArc(\r\n  ctx: CanvasRenderingContext2D,\r\n  element: ArcElement,\r\n  offset: number,\r\n  spacing: number,\r\n  end: number,\r\n  circular: boolean,\r\n) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n\r\n  if (spacing) {\r\n    // When spacing is present, it is the same for all items\r\n    // So we adjust the start and end angle of the arc such that\r\n    // the distance is the same as it would be without the spacing\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\r\n\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n\r\n  ctx.beginPath();\r\n\r\n  if (circular) {\r\n    // The first arc segments from point 1 to point a to point 2\r\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\r\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\r\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\r\n\r\n    // The corner segment from point 2 to point 3\r\n    if (outerEnd > 0) {\r\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n    }\r\n\r\n    // The line from point 3 to point 4\r\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n    ctx.lineTo(p4.x, p4.y);\r\n\r\n    // The corner segment from point 4 to point 5\r\n    if (innerEnd > 0) {\r\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n    }\r\n\r\n    // The inner arc from point 5 to point b to point 6\r\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\r\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\r\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\r\n\r\n    // The corner segment from point 6 to point 7\r\n    if (innerStart > 0) {\r\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n    }\r\n\r\n    // The line from point 7 to point 8\r\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n    ctx.lineTo(p8.x, p8.y);\r\n\r\n    // The corner segment from point 8 to point 1\r\n    if (outerStart > 0) {\r\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n    }\r\n  } else {\r\n    ctx.moveTo(x, y);\r\n\r\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerStartX, outerStartY);\r\n\r\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerEndX, outerEndY);\r\n  }\r\n\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawArc(\r\n  ctx: CanvasRenderingContext2D,\r\n  element: ArcElement,\r\n  offset: number,\r\n  spacing: number,\r\n  circular: boolean,\r\n) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + (circumference % TAU || TAU);\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\n\r\nfunction drawBorder(\r\n  ctx: CanvasRenderingContext2D,\r\n  element: ArcElement,\r\n  offset: number,\r\n  spacing: number,\r\n  circular: boolean,\r\n) {\r\n  const {fullCircles, startAngle, circumference, options} = element;\r\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n\r\n  ctx.setLineDash(borderDash || []);\r\n  ctx.lineDashOffset = borderDashOffset;\r\n\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.stroke();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + (circumference % TAU || TAU);\r\n    }\r\n  }\r\n\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n\r\n  if (!fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport interface ArcProps extends Point {\r\n  startAngle: number;\r\n  endAngle: number;\r\n  innerRadius: number;\r\n  outerRadius: number;\r\n  circumference: number;\r\n}\r\n\r\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\r\n\r\n  static id = 'arc';\r\n\r\n  static defaults = {\r\n    borderAlign: 'center',\r\n    borderColor: '#fff',\r\n    borderDash: [],\r\n    borderDashOffset: 0,\r\n    borderJoinStyle: undefined,\r\n    borderRadius: 0,\r\n    borderWidth: 2,\r\n    offset: 0,\r\n    spacing: 0,\r\n    angle: undefined,\r\n    circular: true,\r\n  };\r\n\r\n  static defaultRoutes = {\r\n    backgroundColor: 'backgroundColor'\r\n  };\r\n\r\n  static descriptors = {\r\n    _scriptable: true,\r\n    _indexable: (name) => name !== 'borderDash'\r\n  };\r\n\r\n  circumference: number;\r\n  endAngle: number;\r\n  fullCircles: number;\r\n  innerRadius: number;\r\n  outerRadius: number;\r\n  pixelMargin: number;\r\n  startAngle: number;\r\n\r\n  constructor(cfg) {\r\n    super();\r\n\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n\r\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n\r\n  getCenterPoint(useFinalPosition: boolean) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius'\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n\r\n  tooltipPosition(useFinalPosition: boolean) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 4;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    const circular = options.circular;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n\r\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\r\n    const radiusOffset = offset * fix;\r\n\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n\r\n    drawArc(ctx, this, radiusOffset, spacing, circular);\r\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Element from '../core/core.element.js';\r\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\r\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\r\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\r\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\r\nimport {valueOrDefault} from '../helpers/index.js';\r\n\r\n/**\r\n * @typedef { import('./element.point.js').default } PointElement\r\n */\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\n\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\n\r\n/**\r\n * @returns {any}\r\n */\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n\r\n  return lineTo;\r\n}\r\n\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\n\r\n/**\r\n * Create path from points, grouping by truncated x-coordinate\r\n * Points need to be in order by x-coordinate for this to work efficiently\r\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\r\n * @param {LineElement} line\r\n * @param {object} segment\r\n * @param {number} segment.start - start index of the segment, referring the points array\r\n * @param {number} segment.end - end index of the segment, referring the points array\r\n * @param {boolean} segment.loop - indicates that the segment is a loop\r\n * @param {object} params\r\n * @param {boolean} params.move - move to starting point (vs line to it)\r\n * @param {boolean} params.reverse - path the segment from end to start\r\n * @param {number} params.start - limit segment to points starting from `start` index\r\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\r\n */\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  // eslint-disable-next-line prefer-const\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n\r\n    if (point.skip) {\r\n      // If there is a skipped point inside a segment, spanGaps must be true\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n\r\n    prev = point;\r\n  }\r\n\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n\r\n  return !!loop;\r\n}\r\n\r\n/**\r\n * Create path from points, grouping by truncated x-coordinate\r\n * Points need to be in order by x-coordinate for this to work efficiently\r\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\r\n * @param {LineElement} line\r\n * @param {object} segment\r\n * @param {number} segment.start - start index of the segment, referring the points array\r\n * @param {number} segment.end - end index of the segment, referring the points array\r\n * @param {boolean} segment.loop - indicates that the segment is a loop\r\n * @param {object} params\r\n * @param {boolean} params.move - move to starting point (vs line to it)\r\n * @param {boolean} params.reverse - path the segment from end to start\r\n * @param {number} params.start - limit segment to points starting from `start` index\r\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\r\n */\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      // Draw line to maxY and minY, using the average x-coordinate\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      // Line to y-value of last point in group. So the line continues\r\n      // from correct position. Not using move, to have solid path.\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n\r\n    if (point.skip) {\r\n      // If there is a skipped point inside a segment, spanGaps must be true\r\n      continue;\r\n    }\r\n\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0; // truncated x-coordinate\r\n\r\n    if (truncX === prevX) {\r\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      // For first point in group, countX is `0`, so average will be `x` / 1.\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      // Draw line to next x-position, using the first (or only)\r\n      // y-value in that group\r\n      ctx.lineTo(x, y);\r\n\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    // Keep track of the last y-value in group\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\n\r\n/**\r\n * @param {LineElement} line - the line\r\n * @returns {function}\r\n * @private\r\n */\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n\r\n  return _pointInLine;\r\n}\r\n\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\n\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nconst usePath2D = typeof Path2D === 'function';\r\n\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\n\r\nexport default class LineElement extends Element {\r\n\r\n  static id = 'line';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    borderCapStyle: 'butt',\r\n    borderDash: [],\r\n    borderDashOffset: 0,\r\n    borderJoinStyle: 'miter',\r\n    borderWidth: 3,\r\n    capBezierPoints: true,\r\n    cubicInterpolationMode: 'default',\r\n    fill: false,\r\n    spanGaps: false,\r\n    stepped: false,\r\n    tension: 0,\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaultRoutes = {\r\n    backgroundColor: 'backgroundColor',\r\n    borderColor: 'borderColor'\r\n  };\r\n\r\n\r\n  static descriptors = {\r\n    _scriptable: true,\r\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n  };\r\n\r\n\r\n  constructor(cfg) {\r\n    super();\r\n\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n\r\n  get points() {\r\n    return this._points;\r\n  }\r\n\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n\r\n  /**\r\n\t * First non-skipped point on this line\r\n\t * @returns {PointElement|undefined}\r\n\t */\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n\r\n  /**\r\n\t * Last non-skipped point on this line\r\n\t * @returns {PointElement|undefined}\r\n\t */\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n\r\n  /**\r\n\t * Interpolate a point in this line at the same value on `property` as\r\n\t * the reference `point` provided\r\n\t * @param {PointElement} point - the reference point\r\n\t * @param {string} property - the property to match on\r\n\t * @returns {PointElement|undefined}\r\n\t */\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n\r\n  /**\r\n\t * Append a segment of this line to current path.\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {object} segment\r\n\t * @param {number} segment.start - start index of the segment, referring the points array\r\n \t * @param {number} segment.end - end index of the segment, referring the points array\r\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\r\n\t * @param {object} params\r\n\t * @param {boolean} params.move - move to starting point (vs line to it)\r\n\t * @param {boolean} params.reverse - path the segment from end to start\r\n\t * @param {number} params.start - limit segment to points starting from `start` index\r\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\r\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\r\n\t */\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n\r\n  /**\r\n\t * Append all segments of this line to current path.\r\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\r\n\t * @param {number} [start]\r\n\t * @param {number} [count]\r\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\r\n\t */\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n\r\n  /**\r\n\t * Draw\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {object} chartArea\r\n\t * @param {number} [start]\r\n\t * @param {number} [count]\r\n\t */\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n\r\n      draw(ctx, this, start, count);\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    if (this.animated) {\r\n      // When line is animated, the control points and path are not cached.\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\n","import Element from '../core/core.element.js';\r\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\r\nimport type {\r\n  CartesianParsedData,\r\n  ChartArea,\r\n  Point,\r\n  PointHoverOptions,\r\n  PointOptions,\r\n} from '../types/index.js';\r\n\r\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\n\r\nexport type PointProps = Point\r\n\r\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\r\n\r\n  static id = 'point';\r\n\r\n  parsed: CartesianParsedData;\r\n  skip?: boolean;\r\n  stop?: boolean;\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    borderWidth: 1,\r\n    hitRadius: 1,\r\n    hoverBorderWidth: 1,\r\n    hoverRadius: 4,\r\n    pointStyle: 'circle',\r\n    radius: 3,\r\n    rotation: 0\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaultRoutes = {\r\n    backgroundColor: 'backgroundColor',\r\n    borderColor: 'borderColor'\r\n  };\r\n\r\n  constructor(cfg) {\r\n    super();\r\n\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n\r\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n\r\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\r\n    return inRange(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n\r\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\r\n    return inRange(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n\r\n  getCenterPoint(useFinalPosition?: boolean) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n\r\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\r\n    const options = this.options;\r\n\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n\r\n  getRange() {\r\n    const options = this.options || {};\r\n    // @ts-expect-error Fallbacks should never be hit in practice\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\n","import Element from '../core/core.element.js';\r\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\r\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\r\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\r\n\r\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\r\n\r\n/**\r\n * Helper function to get the bounds of the bar regardless of the orientation\r\n * @param {BarElement} bar the bar\r\n * @param {boolean} [useFinalPosition]\r\n * @return {object} bounds of the bar\r\n * @private\r\n */\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\r\n\r\n  let left, right, top, bottom, half;\r\n\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n\r\n  return {left, top, right, bottom};\r\n}\r\n\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\n\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\n\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n\r\n  // If the value is an object, assume the user knows what they are doing\r\n  // and apply as directed.\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\n\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\n\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\n\r\n/**\r\n * Add a path of a rectangle to the current sub-path\r\n * @param {CanvasRenderingContext2D} ctx Context\r\n * @param {*} rect Bounding rect\r\n */\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\n\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\n\r\nexport default class BarElement extends Element {\r\n\r\n  static id = 'bar';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    borderSkipped: 'start',\r\n    borderWidth: 0,\r\n    borderRadius: 0,\r\n    inflateAmount: 'auto',\r\n    pointStyle: undefined\r\n  };\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaultRoutes = {\r\n    backgroundColor: 'backgroundColor',\r\n    borderColor: 'borderColor'\r\n  };\r\n\r\n  constructor(cfg) {\r\n    super();\r\n\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n\r\n    ctx.save();\r\n\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\n","import Scale from '../core/core.scale.js';\r\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\n\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\n\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\n\r\nfunction _getLabelForValue(value) {\r\n  const labels = this.getLabels();\r\n\r\n  if (value >= 0 && value < labels.length) {\r\n    return labels[value];\r\n  }\r\n  return value;\r\n}\r\n\r\nexport default class CategoryScale extends Scale {\r\n\r\n  static id = 'category';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    ticks: {\r\n      callback: _getLabelForValue\r\n    }\r\n  };\r\n\r\n  constructor(cfg) {\r\n    super(cfg);\r\n\r\n    /** @type {number} */\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n\r\n    // If we are viewing some subset of labels, slice the original array\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  getLabelForValue(value) {\r\n    return _getLabelForValue.call(this, value);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  configure() {\r\n    super.configure();\r\n\r\n    if (!this.isHorizontal()) {\r\n      // For backward compatibility, vertical category scale reverse is inverted.\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n\r\n  // Used to get data value locations. Value can either be an index or a numerical value\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n\r\n  // Must override base implementation because it calls getPixelForValue\r\n  // and category scale can have duplicate values\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\r\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\r\nimport Scale from '../core/core.scale.js';\r\nimport {formatNumber} from '../helpers/helpers.intl.js';\r\n\r\n/**\r\n * Generate a set of linear ticks for an axis\r\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\r\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\r\n *    Note that the generationOptions.maxCount setting is respected in this scenario\r\n *\r\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\r\n *    spacing = (max - min) / count\r\n *    Ticks are generated as [min, min + spacing, ..., max]\r\n *\r\n * 3. If generationOptions.count is defined\r\n *    spacing = (niceMax - niceMin) / count\r\n *\r\n * 4. Compute optimal spacing of ticks using niceNum algorithm\r\n *\r\n * @param generationOptions the options used to generate the ticks\r\n * @param dataRange the range of the data\r\n * @returns {object[]} array of tick objects\r\n */\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n  // for details.\r\n\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n\r\n  // Beyond MIN_SPACING floating point numbers being to lose precision\r\n  // such that we can't do the math necessary to generate ticks\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n\r\n  if (!isNullOrUndef(precision)) {\r\n    // If the user specified a precision, round to that number of decimal places\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\r\n    // spacing = step;\r\n    // numSpaces = (max - min) / spacing;\r\n    // Note that we round here to handle the case where almostWhole translated an FP error\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\r\n    // Sometimes these are no-ops, but it makes the code a lot clearer\r\n    // and when a user defined range is specified, we want the correct ticks\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    // Case 4\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n\r\n    // If very close to our rounded value, use it.\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n\r\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\r\n  // until this point\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n\r\n      if (niceMin < min) {\r\n        j++; // Skip niceMin\r\n      }\r\n      // If the next nice tick is close to min, skip it\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n\r\n  for (; j < numSpaces; ++j) {\r\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\r\n    if (maxDefined && tickValue > max) {\r\n      break;\r\n    }\r\n    ticks.push({value: tickValue});\r\n  }\r\n\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    // If the previous tick is too close to max, replace it with max, else add max\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n\r\n  return ticks;\r\n}\r\n\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\n\r\nexport default class LinearScaleBase extends Scale {\r\n\r\n  constructor(cfg) {\r\n    super(cfg);\r\n\r\n    /** @type {number} */\r\n    this.start = undefined;\r\n    /** @type {number} */\r\n    this.end = undefined;\r\n    /** @type {number} */\r\n    this._startValue = undefined;\r\n    /** @type {number} */\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n\r\n  parse(raw, index) { // eslint-disable-line no-unused-vars\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n\r\n    return +raw;\r\n  }\r\n\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n\r\n    if (min === max) {\r\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\r\n\r\n      setMax(max + offset);\r\n\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    // eslint-disable-next-line prefer-const\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n\r\n    return maxTicks;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n\r\n    // Figure out what the max number of ticks we can support it is based on the size of\r\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\r\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n    // the graph. Make sure we always have at least 2 ticks\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\r\n\r\n    // At this point, we need to update our max and min given the tick values,\r\n    // since we probably have expanded the range of the scale\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n\r\n    super.configure();\r\n\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n","import {isFinite} from '../helpers/helpers.core.js';\r\nimport LinearScaleBase from './scale.linearbase.js';\r\nimport Ticks from '../core/core.ticks.js';\r\nimport {toRadians} from '../helpers/index.js';\r\n\r\nexport default class LinearScale extends LinearScaleBase {\r\n\r\n  static id = 'linear';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    ticks: {\r\n      callback: Ticks.formatters.numeric\r\n    }\r\n  };\r\n\r\n\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n\r\n    this.min = isFinite(min) ? min : 0;\r\n    this.max = isFinite(max) ? max : 1;\r\n\r\n    // Common base implementation to handle min, max, beginAtZero\r\n    this.handleTickRangeOptions();\r\n  }\r\n\r\n  /**\r\n\t * Returns the maximum number of ticks based on the scale dimension\r\n\t * @protected\r\n \t */\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n\r\n  // Utils\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\r\nimport {formatNumber} from '../helpers/helpers.intl.js';\r\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\r\nimport Scale from '../core/core.scale.js';\r\nimport LinearScaleBase from './scale.linearbase.js';\r\nimport Ticks from '../core/core.ticks.js';\r\n\r\nconst log10Floor = v => Math.floor(log10(v));\r\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\r\n  return remain === 1;\r\n}\r\n\r\nfunction steps(min, max, rangeExp) {\r\n  const rangeStep = Math.pow(10, rangeExp);\r\n  const start = Math.floor(min / rangeStep);\r\n  const end = Math.ceil(max / rangeStep);\r\n  return end - start;\r\n}\r\n\r\nfunction startExp(min, max) {\r\n  const range = max - min;\r\n  let rangeExp = log10Floor(range);\r\n  while (steps(min, max, rangeExp) > 10) {\r\n    rangeExp++;\r\n  }\r\n  while (steps(min, max, rangeExp) < 10) {\r\n    rangeExp--;\r\n  }\r\n  return Math.min(rangeExp, log10Floor(min));\r\n}\r\n\r\n\r\n/**\r\n * Generate a set of logarithmic ticks\r\n * @param generationOptions the options used to generate the ticks\r\n * @param dataRange the range of the data\r\n * @returns {object[]} array of tick objects\r\n */\r\nfunction generateTicks(generationOptions, {min, max}) {\r\n  min = finiteOrDefault(generationOptions.min, min);\r\n  const ticks = [];\r\n  const minExp = log10Floor(min);\r\n  let exp = startExp(min, max);\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  const stepSize = Math.pow(10, exp);\r\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\r\n  const start = Math.round((min - base) * precision) / precision;\r\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\r\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\r\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\r\n  while (value < max) {\r\n    ticks.push({value, major: isMajor(value), significand});\r\n    if (significand >= 10) {\r\n      significand = significand < 15 ? 15 : 20;\r\n    } else {\r\n      significand++;\r\n    }\r\n    if (significand >= 20) {\r\n      exp++;\r\n      significand = 2;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\r\n  }\r\n  const lastTick = finiteOrDefault(generationOptions.max, value);\r\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\r\n\r\n  return ticks;\r\n}\r\n\r\nexport default class LogarithmicScale extends Scale {\r\n\r\n  static id = 'logarithmic';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    ticks: {\r\n      callback: Ticks.formatters.logarithmic,\r\n      major: {\r\n        enabled: true\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  constructor(cfg) {\r\n    super(cfg);\r\n\r\n    /** @type {number} */\r\n    this.start = undefined;\r\n    /** @type {number} */\r\n    this.end = undefined;\r\n    /** @type {number} */\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isFinite(value) && value > 0 ? value : null;\r\n  }\r\n\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n\r\n    this.min = isFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isFinite(max) ? Math.max(0, max) : null;\r\n\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n\r\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\r\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\r\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\r\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\r\n    }\r\n\r\n    this.handleTickRangeOptions();\r\n  }\r\n\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n\r\n    if (min === max) {\r\n      if (min <= 0) { // includes null\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(changeExponent(min, -1));\r\n        setMax(changeExponent(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(changeExponent(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n\r\n      setMax(changeExponent(min, +1));\r\n    }\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n\r\n  buildTicks() {\r\n    const opts = this.options;\r\n\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n\r\n    // At this point, we need to update our max and min given the tick values,\r\n    // since we probably have expanded the range of the scale\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value\r\n\t * @return {string}\r\n\t */\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  configure() {\r\n    const start = this.min;\r\n\r\n    super.configure();\r\n\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\n","import defaults from '../core/core.defaults.js';\r\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\r\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\r\nimport LinearScaleBase from './scale.linearbase.js';\r\nimport Ticks from '../core/core.ticks.js';\r\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\r\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\n\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\n\r\n/**\r\n * Helper function to fit a radial linear scale with point labels\r\n */\r\nfunction fitWithPointLabels(scale) {\r\n\r\n  // Right, this is really confusing and there is a lot of maths going on here\r\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n  //\r\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n  //\r\n  // Solution:\r\n  //\r\n  // We assume the radius of the polygon is half the size of the canvas at first\r\n  // at each index we check if the text overlaps.\r\n  //\r\n  // Where it does, we store that angle and that index.\r\n  //\r\n  // After finding the largest index and angle we calculate how much we need to remove\r\n  // from the shape radius to move the point inwards by that x.\r\n  //\r\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\r\n  // along with labels.\r\n  //\r\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n  //\r\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n  // and position it in the most space efficient manner\r\n  //\r\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\r\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n\r\n  // Now that text size is determined, compute the full positions\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\n\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\n\r\nfunction createPointLabelItem(scale, index, itemOpts) {\r\n  const outerDistance = scale.drawingArea;\r\n  const {extra, additionalAngle, padding, size} = itemOpts;\r\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\r\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n  const textAlign = getTextAlignForAngle(angle);\r\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n  return {\r\n    // if to draw or overlapped\r\n    visible: true,\r\n\r\n    // Text position\r\n    x: pointLabelPosition.x,\r\n    y,\r\n\r\n    // Text rendering data\r\n    textAlign,\r\n\r\n    // Bounding box\r\n    left,\r\n    top: y,\r\n    right: left + size.w,\r\n    bottom: y + size.h\r\n  };\r\n}\r\n\r\nfunction isNotOverlapped(item, area) {\r\n  if (!area) {\r\n    return true;\r\n  }\r\n  const {left, top, right, bottom} = item;\r\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\r\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\r\n  return !apexesInArea;\r\n}\r\n\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const {centerPointLabels, display} = opts.pointLabels;\r\n  const itemOpts = {\r\n    extra: getTickBackdropHeight(opts) / 2,\r\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\r\n  };\r\n  let area;\r\n\r\n  for (let i = 0; i < valueCount; i++) {\r\n    itemOpts.padding = padding[i];\r\n    itemOpts.size = labelSizes[i];\r\n\r\n    const item = createPointLabelItem(scale, i, itemOpts);\r\n    items.push(item);\r\n    if (display === 'auto') {\r\n      item.visible = isNotOverlapped(item, area);\r\n      if (item.visible) {\r\n        area = item;\r\n      }\r\n    }\r\n  }\r\n  return items;\r\n}\r\n\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n\r\n  return 'right';\r\n}\r\n\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\n\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\n\r\nfunction drawPointLabelBox(ctx, opts, item) {\r\n  const {left, top, right, bottom} = item;\r\n  const {backdropColor} = opts;\r\n\r\n  if (!isNullOrUndef(backdropColor)) {\r\n    const borderRadius = toTRBLCorners(opts.borderRadius);\r\n    const padding = toPadding(opts.backdropPadding);\r\n    ctx.fillStyle = backdropColor;\r\n\r\n    const backdropLeft = left - padding.left;\r\n    const backdropTop = top - padding.top;\r\n    const backdropWidth = right - left + padding.width;\r\n    const backdropHeight = bottom - top + padding.height;\r\n\r\n    if (Object.values(borderRadius).some(v => v !== 0)) {\r\n      ctx.beginPath();\r\n      addRoundedRectPath(ctx, {\r\n        x: backdropLeft,\r\n        y: backdropTop,\r\n        w: backdropWidth,\r\n        h: backdropHeight,\r\n        radius: borderRadius,\r\n      });\r\n      ctx.fill();\r\n    } else {\r\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const item = scale._pointLabelItems[i];\r\n    if (!item.visible) {\r\n      // overlapping\r\n      continue;\r\n    }\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    drawPointLabelBox(ctx, optsAtIndex, item);\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign} = item;\r\n\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    // Draw circular arcs between the points\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    // Draw straight lines connecting each index\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n\r\n  const {color, lineWidth} = gridLineOpts;\r\n\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(borderOpts.dash);\r\n  ctx.lineDashOffset = borderOpts.dashOffset;\r\n\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\n\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\n\r\nexport default class RadialLinearScale extends LinearScaleBase {\r\n\r\n  static id = 'radialLinear';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    display: true,\r\n\r\n    // Boolean - Whether to animate scaling the chart from the centre\r\n    animate: true,\r\n    position: 'chartArea',\r\n\r\n    angleLines: {\r\n      display: true,\r\n      lineWidth: 1,\r\n      borderDash: [],\r\n      borderDashOffset: 0.0\r\n    },\r\n\r\n    grid: {\r\n      circular: false\r\n    },\r\n\r\n    startAngle: 0,\r\n\r\n    // label settings\r\n    ticks: {\r\n      // Boolean - Show a backdrop to the scale label\r\n      showLabelBackdrop: true,\r\n\r\n      callback: Ticks.formatters.numeric\r\n    },\r\n\r\n    pointLabels: {\r\n      backdropColor: undefined,\r\n\r\n      // Number - The backdrop padding above & below the label in pixels\r\n      backdropPadding: 2,\r\n\r\n      // Boolean - if true, show point labels\r\n      display: true,\r\n\r\n      // Number - Point label font size in pixels\r\n      font: {\r\n        size: 10\r\n      },\r\n\r\n      // Function - Used to convert point labels\r\n      callback(label) {\r\n        return label;\r\n      },\r\n\r\n      // Number - Additionl padding between scale and pointLabel\r\n      padding: 5,\r\n\r\n      // Boolean - if true, center point labels to slices in polar chart\r\n      centerPointLabels: false\r\n    }\r\n  };\r\n\r\n  static defaultRoutes = {\r\n    'angleLines.color': 'borderColor',\r\n    'pointLabels.color': 'color',\r\n    'ticks.color': 'color'\r\n  };\r\n\r\n  static descriptors = {\r\n    angleLines: {\r\n      _fallback: 'grid'\r\n    }\r\n  };\r\n\r\n  constructor(cfg) {\r\n    super(cfg);\r\n\r\n    /** @type {number} */\r\n    this.xCenter = undefined;\r\n    /** @type {number} */\r\n    this.yCenter = undefined;\r\n    /** @type {number} */\r\n    this.drawingArea = undefined;\r\n    /** @type {string[]} */\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n\r\n  setDimensions() {\r\n    // Set the unconstrained dimension before label rotation\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n\r\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\r\n\r\n    // Common base implementation to handle min, max, beginAtZero\r\n    this.handleTickRangeOptions();\r\n  }\r\n\r\n  /**\r\n\t * Returns the maximum number of ticks based on the scale dimension\r\n\t * @protected\r\n\t */\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n\r\n    // Point labels\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n\r\n  fit() {\r\n    const opts = this.options;\r\n\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n\r\n    // Take into account half font size + the yPadding of the top value\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid, border} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n\r\n    let i, offset, position;\r\n\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const context = this.getContext(index);\r\n          const optsAtIndex = grid.setContext(context);\r\n          const optsAtIndexBorder = border.setContext(context);\r\n\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawBorder() {}\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n        strokeColor: optsAtIndex.textStrokeColor,\r\n        strokeWidth: optsAtIndex.textStrokeWidth,\r\n      });\r\n    });\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawTitle() {}\r\n}\r\n","import adapters from '../core/core.adapters.js';\r\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\r\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\r\nimport Scale from '../core/core.scale.js';\r\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\r\n\r\n/**\r\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\r\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\r\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\r\n */\r\n\r\n/**\r\n * @type {Object<Unit, Interval>}\r\n */\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\n\r\n/**\r\n * @type {Unit[]}\r\n */\r\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\r\n\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n */\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\n\r\n/**\r\n * @param {TimeScale} scale\r\n * @param {*} input\r\n * @return {number}\r\n */\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n\r\n  // Only parse if it's not a timestamp already\r\n  if (!isFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\r\n      : adapter.parse(value);\r\n  }\r\n\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n\r\n  return +value;\r\n}\r\n\r\n/**\r\n * Figures out what unit results in an appropriate number of auto-generated ticks\r\n * @param {Unit} minUnit\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} capacity\r\n * @return {object}\r\n */\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n\r\n  return UNITS[ilen - 1];\r\n}\r\n\r\n/**\r\n * Figures out what unit to format a set of ticks with\r\n * @param {TimeScale} scale\r\n * @param {number} numTicks\r\n * @param {Unit} minUnit\r\n * @param {number} min\r\n * @param {number} max\r\n * @return {Unit}\r\n */\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\n\r\n/**\r\n * @param {Unit} unit\r\n * @return {object}\r\n */\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {object} ticks\r\n * @param {number} time\r\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\r\n */\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {TimeScale} scale\r\n * @param {object[]} ticks\r\n * @param {object} map\r\n * @param {Unit} majorUnit\r\n * @return {object[]}\r\n */\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\n\r\n/**\r\n * @param {TimeScale} scale\r\n * @param {number[]} values\r\n * @param {Unit|undefined} [majorUnit]\r\n * @return {object[]}\r\n */\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  /** @type {Object<number,object>} */\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n\r\n  // We set the major ticks separately from the above loop because calling startOf for every tick\r\n  // is expensive when there is a large number of ticks\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\n\r\nexport default class TimeScale extends Scale {\r\n\r\n  static id = 'time';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = {\r\n    /**\r\n     * Scale boundary strategy (bypassed by min/max time options)\r\n     * - `data`: make sure data are fully visible, ticks outside are removed\r\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\r\n     * @see https://github.com/chartjs/Chart.js/pull/4556\r\n     * @since 2.7.0\r\n     */\r\n    bounds: 'data',\r\n\r\n    adapters: {},\r\n    time: {\r\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\r\n      unit: false, // false == automatic or override with week, month, year, etc.\r\n      round: false, // none, or override with week, month, year, etc.\r\n      isoWeekday: false, // override week start day\r\n      minUnit: 'millisecond',\r\n      displayFormats: {}\r\n    },\r\n    ticks: {\r\n      /**\r\n       * Ticks generation input values:\r\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\r\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\r\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\r\n       * @see https://github.com/chartjs/Chart.js/pull/4507\r\n       * @since 2.7.0\r\n       */\r\n      source: 'auto',\r\n\r\n      callback: false,\r\n\r\n      major: {\r\n        enabled: false\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n\t * @param {object} props\r\n\t */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /** @type {{data: number[], labels: number[], all: number[]}} */\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n\r\n    /** @type {Unit} */\r\n    this._unit = 'day';\r\n    /** @type {Unit=} */\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n\r\n  init(scaleOpts, opts = {}) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    /** @type {DateAdapter} */\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n\r\n    adapter.init(opts);\r\n\r\n    // Backward compatibility: before introducing adapter, `displayFormats` was\r\n    // supposed to contain *all* unit/string pairs but this can't be resolved\r\n    // when loading the scale (adapters are loaded afterward), so let's populate\r\n    // missing formats on update\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n\r\n    super.init(scaleOpts);\r\n\r\n    this._normalized = opts.normalized;\r\n  }\r\n\r\n  /**\r\n\t * @param {*} raw\r\n\t * @param {number?} [index]\r\n\t * @return {number}\r\n\t */\r\n  parse(raw, index) { // eslint-disable-line no-unused-vars\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    // eslint-disable-next-line prefer-const\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n\r\n    /**\r\n\t\t * @param {object} bounds\r\n\t\t */\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n\r\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\r\n    if (!minDefined || !maxDefined) {\r\n      // Labels are always considered, when user did not force bounds\r\n      _applyBounds(this._getLabelBounds());\r\n\r\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\r\n      // data bounds are ignored (and don't need to be determined)\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n\r\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n\r\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n\r\n  /**\r\n\t * @return {object[]}\r\n\t */\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n\r\n    const min = this.min;\r\n    const max = this.max;\r\n\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n\r\n    // PRIVATE\r\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\r\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n\r\n  afterAutoSkip() {\r\n    // Offsets for bar charts need to be handled with the auto skipped\r\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\r\n    if (this.options.offsetAfterAutoskip) {\r\n      this.initOffsets(this.ticks.map(tick => +tick.value));\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Returns the start and end offsets from edges in the form of {start, end}\r\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\r\n\t * They add extra margins on the both sides by scaling down the original scale.\r\n\t * Offsets are added when the `offset` option is true.\r\n\t * @param {number[]} timestamps\r\n\t * @protected\r\n\t */\r\n  initOffsets(timestamps = []) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n\r\n  /**\r\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\r\n\t * `minor` unit using the given scale time `options`.\r\n\t * Important: this method can return ticks outside the min and max range, it's the\r\n\t * responsibility of the calling code to clamp values if needed.\r\n\t * @protected\r\n\t */\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    // @ts-ignore\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n\r\n    // For 'week' unit, handle the first day of week option\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n\r\n    // Align first ticks on unit\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n\r\n    // Prevent browser from freezing in case user options request millions of milliseconds\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n\r\n    // @ts-ignore\r\n    return Object.keys(ticks).sort(sorter).map(x => +x);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value\r\n\t * @return {string}\r\n\t */\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value\r\n\t * @param {string|undefined} format\r\n\t * @return {string}\r\n\t */\r\n  format(value, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const fmt = format || formats[unit];\r\n    return this._adapter.format(value, fmt);\r\n  }\r\n\r\n  /**\r\n\t * Function to format an individual tick mark\r\n\t * @param {number} time\r\n\t * @param {number} index\r\n\t * @param {object[]} ticks\r\n\t * @param {string|undefined} [format]\r\n\t * @return {string}\r\n\t * @private\r\n\t */\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formatter = options.ticks.callback;\r\n\r\n    if (formatter) {\r\n      return call(formatter, [time, index, ticks], this);\r\n    }\r\n\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n\r\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n  }\r\n\r\n  /**\r\n\t * @param {object[]} ticks\r\n\t */\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\r\n\t * @return {number}\r\n\t */\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\r\n\t * @return {number}\r\n\t */\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n\r\n  /**\r\n\t * @param {number} pixel\r\n\t * @return {number}\r\n\t */\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n\r\n  /**\r\n\t * @param {string} label\r\n\t * @return {{w:number, h:number}}\r\n\t * @private\r\n\t */\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n\r\n  /**\r\n\t * @param {number} exampleTime\r\n\t * @return {number}\r\n\t * @private\r\n\t */\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n\r\n    // pick the longest format (milliseconds) for guesstimation\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    // subtract 1 - if offset then there's one less label than tick\r\n    // if not offset then one half label padding is added to each end leaving room for one less label\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n\r\n    const metas = this.getMatchingVisibleMetas();\r\n\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n\r\n  /**\r\n\t * @param {number[]} values\r\n\t * @protected\r\n\t */\r\n  normalize(values) {\r\n    // It seems to be somewhat faster to do sorting first\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\n","import TimeScale from './scale.time.js';\r\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\r\n\r\n/**\r\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\r\n * at edges are used for the interpolation.\r\n * @param {object} table\r\n * @param {number} val\r\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\r\n * @return {object}\r\n */\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\n\r\nclass TimeSeriesScale extends TimeScale {\r\n\r\n  static id = 'timeseries';\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  static defaults = TimeScale.defaults;\r\n\r\n  /**\r\n\t * @param {object} props\r\n\t */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /** @type {object[]} */\r\n    this._table = [];\r\n    /** @type {number} */\r\n    this._minPos = undefined;\r\n    /** @type {number} */\r\n    this._tableRange = undefined;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n\r\n  /**\r\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\r\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\r\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\r\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\r\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\r\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\r\n\t * @param {number[]} timestamps\r\n\t * @return {object[]}\r\n\t * @protected\r\n\t */\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n\r\n    if (items.length < 2) {\r\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n\r\n      // only add points that breaks the scale linearity\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n\r\n  /**\r\n    * Generates all timestamps defined in the data.\r\n    * Important: this method can return ticks outside the min and max range, it's the\r\n    * responsibility of the calling code to clamp values if needed.\r\n    * @protected\r\n    */\r\n  _generate() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    let timestamps = super.getDataTimestamps();\r\n    if (!timestamps.includes(min) || !timestamps.length) {\r\n      timestamps.splice(0, 0, min);\r\n    }\r\n    if (!timestamps.includes(max) || timestamps.length === 1) {\r\n      timestamps.push(max);\r\n    }\r\n    return timestamps.sort((a, b) => a - b);\r\n  }\r\n\r\n  /**\r\n\t * Returns all timestamps\r\n\t * @return {number[]}\r\n\t * @private\r\n\t */\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      // If combining labels and data (data might not contain all labels),\r\n      // we need to recheck uniqueness and sort\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n\r\n    return timestamps;\r\n  }\r\n\r\n  /**\r\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\r\n\t * @return {number}\r\n\t */\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n\r\n  /**\r\n\t * @param {number} pixel\r\n\t * @return {number}\r\n\t */\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\n\r\nexport default TimeSeriesScale;\r\n","import {DoughnutController, PolarAreaController} from '../index.js';\r\nimport type {Chart, ChartDataset} from '../types.js';\r\n\r\nexport interface ColorsPluginOptions {\r\n  enabled?: boolean;\r\n  forceOverride?: boolean;\r\n}\r\n\r\ninterface ColorsDescriptor {\r\n  backgroundColor?: unknown;\r\n  borderColor?: unknown;\r\n}\r\n\r\nconst BORDER_COLORS = [\r\n  'rgb(54, 162, 235)', // blue\r\n  'rgb(255, 99, 132)', // red\r\n  'rgb(255, 159, 64)', // orange\r\n  'rgb(255, 205, 86)', // yellow\r\n  'rgb(75, 192, 192)', // green\r\n  'rgb(153, 102, 255)', // purple\r\n  'rgb(201, 203, 207)' // grey\r\n];\r\n\r\n// Border colors with 50% transparency\r\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\r\n\r\nfunction getBorderColor(i: number) {\r\n  return BORDER_COLORS[i % BORDER_COLORS.length];\r\n}\r\n\r\nfunction getBackgroundColor(i: number) {\r\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\r\n}\r\n\r\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\r\n  dataset.borderColor = getBorderColor(i);\r\n  dataset.backgroundColor = getBackgroundColor(i);\r\n\r\n  return ++i;\r\n}\r\n\r\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\r\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\r\n\r\n  return i;\r\n}\r\n\r\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\r\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\r\n\r\n  return i;\r\n}\r\n\r\nfunction getColorizer(chart: Chart) {\r\n  let i = 0;\r\n\r\n  return (dataset: ChartDataset, datasetIndex: number) => {\r\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n\r\n    if (controller instanceof DoughnutController) {\r\n      i = colorizeDoughnutDataset(dataset, i);\r\n    } else if (controller instanceof PolarAreaController) {\r\n      i = colorizePolarAreaDataset(dataset, i);\r\n    } else if (controller) {\r\n      i = colorizeDefaultDataset(dataset, i);\r\n    }\r\n  };\r\n}\r\n\r\nfunction containsColorsDefinitions(\r\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\r\n) {\r\n  let k: number | string;\r\n\r\n  for (k in descriptors) {\r\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction containsColorsDefinition(\r\n  descriptor: ColorsDescriptor\r\n) {\r\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\r\n}\r\n\r\nexport default {\r\n  id: 'colors',\r\n\r\n  defaults: {\r\n    enabled: true,\r\n    forceOverride: false\r\n  } as ColorsPluginOptions,\r\n\r\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\r\n    if (!options.enabled) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      data: {datasets},\r\n      options: chartOptions\r\n    } = chart.config;\r\n    const {elements} = chartOptions;\r\n\r\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\r\n      return;\r\n    }\r\n\r\n    const colorizer = getColorizer(chart);\r\n\r\n    datasets.forEach(colorizer);\r\n  }\r\n};\r\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  /**\r\n   * Implementation of the Largest Triangle Three Buckets algorithm.\r\n   *\r\n   * This implementation is based on the original implementation by Sveinn Steinarsson\r\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\r\n   *\r\n   * The original implementation is MIT licensed.\r\n   */\r\n  const samples = options.samples || availableWidth;\r\n  // There are less points than the threshold, returning the whole array\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n\r\n  const decimated = [];\r\n\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  // Starting from offset\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n\r\n  decimated[sampledIndex++] = data[a];\r\n\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n\r\n    // Adding offset\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n\r\n    // Adding offset\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n\r\n    // Note that this is changed from the original algorithm which initializes these\r\n    // values to 1. The reason for this change is that if the area is small, nextA\r\n    // would never be set and thus a crash would occur in the next loop as `a` would become\r\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\r\n    // initializing with a negative number is the correct solution.\r\n    maxArea = area = -1;\r\n\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n\r\n  // Include the last point\r\n  decimated[sampledIndex++] = data[endIndex];\r\n\r\n  return decimated;\r\n}\r\n\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n\r\n    if (truncX === prevX) {\r\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      // For first point in group, countX is `0`, so average will be `x` / 1.\r\n      // Use point.x here because we're computing the average data `x` value\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\r\n      const lastIndex = i - 1;\r\n\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        // The interval is defined by 4 points: start, min, max, end.\r\n        // The starting point is already considered at this point, so we need to determine which\r\n        // of the other points to add. We need to sort these points to ensure the decimated data\r\n        // is still sorted and then ensure there are no duplicates.\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n\r\n      // lastIndex === startIndex will occur when a range has only 1 point which could\r\n      // happen with very uneven data\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        // Last point in the previous interval\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n\r\n      // Start of the new interval\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n\r\n  return decimated;\r\n}\r\n\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\n\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n\r\n  let start = 0;\r\n  let count;\r\n\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n\r\n  return {start, count};\r\n}\r\n\r\nexport default {\r\n  id: 'decimation',\r\n\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n\r\n    // Assume the entire chart is available to show a few more points than needed\r\n    const availableWidth = chart.width;\r\n\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        // Decimation is only supported for lines that have an X indexAxis\r\n        return;\r\n      }\r\n\r\n      if (!meta.controller.supportsDecimation) {\r\n        // Only line datasets are supported\r\n        return;\r\n      }\r\n\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        // Only linear interpolation is supported\r\n        return;\r\n      }\r\n\r\n      if (chart.options.parsing) {\r\n        // Plugin only supports data that does not need parsing\r\n        return;\r\n      }\r\n\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        // No decimation is required until we are above this threshold\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n\r\n      if (isNullOrUndef(_data)) {\r\n        // First time we are seeing this dataset\r\n        // We override the 'data' property with a setter that stores the\r\n        // raw data in _data, but reads the decimated data from _decimated\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Point the chart to the decimated data\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\r\n\r\nexport function _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = _findSegmentEnd(start, end, points);\r\n\r\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n\r\n    if (!target.segments) {\r\n      // Special case for boundary not supporting `segments` (simpleArc)\r\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n\r\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\r\n    const targetSegments = _boundSegments(target, bounds);\r\n\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\n\r\nexport function _getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\n\r\nexport function _pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = _findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nexport function _findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\n\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n","/**\r\n * @typedef { import('../../core/core.controller.js').default } Chart\r\n * @typedef { import('../../core/core.scale.js').default } Scale\r\n * @typedef { import('../../elements/element.point.js').default } PointElement\r\n */\r\n\r\nimport {LineElement} from '../../elements/index.js';\r\nimport {isArray} from '../../helpers/index.js';\r\nimport {_pointsFromSegments} from './filler.segment.js';\r\n\r\n/**\r\n * @param {PointElement[] | { x: number; y: number; }} boundary\r\n * @param {LineElement} line\r\n * @return {LineElement?}\r\n */\r\nexport function _createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    // @ts-ignore\r\n    points = boundary;\r\n  } else {\r\n    points = _pointsFromSegments(boundary, line);\r\n  }\r\n\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\n\r\nexport function _shouldApplyFill(source) {\r\n  return source && source.fill !== false;\r\n}\r\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\r\n\r\n/**\r\n * @typedef { import('../../core/core.scale.js').default } Scale\r\n * @typedef { import('../../elements/element.line.js').default } LineElement\r\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\r\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\r\n */\r\n\r\nexport function _resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isFinite(fill)) {\r\n      return fill;\r\n    }\r\n\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * @param {LineElement} line\r\n * @param {number} index\r\n * @param {number} count\r\n */\r\nexport function _decodeFill(line, index, count) {\r\n  /** @type {string | {value: number}} */\r\n  const fill = parseFillOption(line);\r\n\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n\r\n  let target = parseFloat(fill);\r\n\r\n  if (isFinite(target) && Math.floor(target) === target) {\r\n    return decodeTargetIndex(fill[0], index, target, count);\r\n  }\r\n\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\n\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n  if (firstCh === '-' || firstCh === '+') {\r\n    target = index + target;\r\n  }\r\n\r\n  if (target === index || target < 0 || target >= count) {\r\n    return false;\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * @param {FillTarget | ComplexFillTarget} fill\r\n * @param {Scale} scale\r\n * @returns {number | null}\r\n */\r\nexport function _getTargetPixel(fill, scale) {\r\n  let pixel = null;\r\n  if (fill === 'start') {\r\n    pixel = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    pixel = scale.top;\r\n  } else if (isObject(fill)) {\r\n    // @ts-ignore\r\n    pixel = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    pixel = scale.getBasePixel();\r\n  }\r\n  return pixel;\r\n}\r\n\r\n/**\r\n * @param {FillTarget | ComplexFillTarget} fill\r\n * @param {Scale} scale\r\n * @param {number} startValue\r\n * @returns {number | undefined}\r\n */\r\nexport function _getTargetValue(fill, scale, startValue) {\r\n  let value;\r\n\r\n  if (fill === 'start') {\r\n    value = startValue;\r\n  } else if (fill === 'end') {\r\n    value = scale.options.reverse ? scale.min : scale.max;\r\n  } else if (isObject(fill)) {\r\n    // @ts-ignore\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * @param {LineElement} line\r\n */\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\n","/**\r\n * @typedef { import('../../core/core.controller.js').default } Chart\r\n * @typedef { import('../../core/core.scale.js').default } Scale\r\n * @typedef { import('../../elements/element.point.js').default } PointElement\r\n */\r\n\r\nimport {LineElement} from '../../elements/index.js';\r\nimport {_isBetween} from '../../helpers/index.js';\r\nimport {_createBoundaryLine} from './filler.helper.js';\r\n\r\n/**\r\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\r\n * @return {LineElement}\r\n */\r\nexport function _buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\r\n\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\n\r\n/**\r\n * @param {Scale} scale\r\n * @param {number} index\r\n * @return {LineElement[]}\r\n */\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\n\r\n/**\r\n * @param {PointElement[]} points\r\n * @param {PointElement} sourcePoint\r\n * @param {LineElement[]} linesBelow\r\n */\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      // First point of an segment -> need to add another point before this,\r\n      // from next line below.\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        // In the middle of an segment, no need to add more points.\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\n\r\n/**\r\n * @param {LineElement} line\r\n * @param {PointElement} sourcePoint\r\n * @param {string} property\r\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\r\n */\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\n","import {TAU} from '../../helpers/index.js';\r\n\r\n// TODO: use elements.ArcElement instead\r\nexport class simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\n","import {isFinite} from '../../helpers/index.js';\r\nimport {_createBoundaryLine} from './filler.helper.js';\r\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\r\nimport {_buildStackLine} from './filler.target.stack.js';\r\nimport {simpleArc} from './simpleArc.js';\r\n\r\n/**\r\n * @typedef { import('../../core/core.controller.js').default } Chart\r\n * @typedef { import('../../core/core.scale.js').default } Scale\r\n * @typedef { import('../../elements/element.point.js').default } PointElement\r\n */\r\n\r\nexport function _getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n\r\n  if (isFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n\r\n  if (fill === 'stack') {\r\n    return _buildStackLine(source);\r\n  }\r\n\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n\r\n  const boundary = computeBoundary(source);\r\n\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n\r\n  return _createBoundaryLine(boundary, line);\r\n}\r\n\r\n/**\r\n * @param {Chart} chart\r\n * @param {number} index\r\n */\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\n\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\n\r\n\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  const pixel = _getTargetPixel(fill, scale);\r\n\r\n  if (isFinite(pixel)) {\r\n    const horizontal = scale.isHorizontal();\r\n\r\n    return {\r\n      x: horizontal ? pixel : null,\r\n      y: horizontal ? null : pixel\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const value = _getTargetValue(fill, scale, start);\r\n  const target = [];\r\n\r\n  if (options.grid.circular) {\r\n    const center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\n\r\n","import {clipArea, unclipArea} from '../../helpers/index.js';\r\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\r\nimport {_getTarget} from './filler.target.js';\r\n\r\nexport function _drawfill(ctx, source, area) {\r\n  const target = _getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\n\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n\r\n  ctx.save();\r\n\r\n  if (property === 'x' && below !== above) {\r\n    clipVertical(ctx, target, area.top);\r\n    fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    clipVertical(ctx, target, area.bottom);\r\n  }\r\n  fill(ctx, {line, target, color: below, scale, property});\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction clipVertical(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\n\r\nfunction fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n\r\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\r\n\r\n    ctx.beginPath();\r\n\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\n\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\n\r\n","/**\r\n * Plugin based on discussion from the following Chart.js issues:\r\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n */\r\n\r\nimport LineElement from '../../elements/element.line.js';\r\nimport {_drawfill} from './filler.drawing.js';\r\nimport {_shouldApplyFill} from './filler.helper.js';\r\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\r\n\r\nexport default {\r\n  id: 'filler',\r\n\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: _decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n\r\n      source.fill = _resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw && source.fill) {\r\n        _drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n\r\n      if (_shouldApplyFill(source)) {\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n\r\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n\r\n    _drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n","import defaults from '../core/core.defaults.js';\r\nimport Element from '../core/core.element.js';\r\nimport layouts from '../core/core.layouts.js';\r\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\r\nimport {\r\n  _isBetween,\r\n  callback as call,\r\n  clipArea,\r\n  getRtlAdapter,\r\n  overrideTextDirection,\r\n  restoreTextDirection,\r\n  toFont,\r\n  toPadding,\r\n  unclipArea,\r\n  valueOrDefault,\r\n} from '../helpers/index.js';\r\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\r\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\r\n\r\n/**\r\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\r\n */\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n  }\r\n\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\n\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\n\r\nexport class Legend extends Element {\r\n\r\n  /**\r\n\t * @param {{ ctx: any; options: any; chart: any; }} config\r\n\t */\r\n  constructor(config) {\r\n    super();\r\n\r\n    this._added = false;\r\n\r\n    // Contains hit boxes for each dataset (in dataset order)\r\n    this.legendHitBoxes = [];\r\n\r\n    /**\r\n \t\t * @private\r\n \t\t */\r\n    this._hoveredItem = null;\r\n\r\n    // Are we in doughnut mode which has a different data type\r\n    this.doughnutMode = false;\r\n\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\r\n\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n\r\n    this.legendItems = legendItems;\r\n  }\r\n\r\n  fit() {\r\n    const {options, ctx} = this;\r\n\r\n    // The legend may not be displayed for a variety of reasons including\r\n    // the fact that the defaults got set to `false`.\r\n    // When the legend is not displayed, there are no guarantees that the options\r\n    // are correctly formatted so we need to bail out as early as possible.\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n\r\n    let width, height;\r\n\r\n    ctx.font = labelFont.string;\r\n\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth; // fill all the width\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight; // fill all the height\r\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\r\n    }\r\n\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n\r\n    return totalHeight;\r\n  }\r\n\r\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n\r\n    let left = 0;\r\n    let col = 0;\r\n\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\r\n\r\n      // If too tall, go to new column\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n\r\n      // Store the hitbox width and height here. Final position will be updated in `draw`\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n\r\n      // Get max width\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\r\n\r\n    return totalWidth;\r\n  }\r\n\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n\r\n      this._draw();\r\n\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n\r\n    this.drawTitle();\r\n\r\n    // Canvas setup\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n\r\n    // current position\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n\r\n      // Set the ctx for the box\r\n      ctx.save();\r\n\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n\r\n      if (labelOpts.usePointStyle) {\r\n        // Recalculate x and y for drawPoint() because its expecting\r\n        // x and y to be center of figure (instead of top left)\r\n        const drawOptions = {\r\n          radius: boxHeight * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n\r\n        // Draw pointStyle as legend symbol\r\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n      } else {\r\n        // Draw box as legend symbol\r\n        // Adjust position when boxHeight < fontSize (want it centered)\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n\r\n        ctx.beginPath();\r\n\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      ctx.restore();\r\n    };\r\n\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n\r\n    // Horizontal\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\r\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\r\n\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n\r\n      rtlHelper.setWidth(this.width);\r\n\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n\r\n      const realX = rtlHelper.x(x);\r\n\r\n      drawLegendBox(realX, y, legendItem);\r\n\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n\r\n      // Fill the actual label\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else if (typeof legendItem.text !== 'string') {\r\n        const fontLineHeight = labelFont.lineHeight;\r\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n\r\n    // These defaults are used when the legend is vertical.\r\n    // When horizontal, they are computed below.\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n\r\n    if (this.isHorizontal()) {\r\n      // Move left / right so that the title is above the legend lines\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      // Move down so that the title is above the legend stack in every alignment\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n\r\n    // Now that we know the left edge of the inner legend box, compute the correct\r\n    // X coordinate from the title alignment\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n\r\n    // Canvas setup\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      // See if we are touching one of the dataset boxes\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          // Touching an element\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n\t * Handle an event\r\n\t * @param {ChartEvent} e - The event to handle\r\n\t */\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n\r\n    // Chart event already has relative position in it\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        call(opts.onLeave, [e, previous, this], this);\r\n      }\r\n\r\n      this._hoveredItem = hoveredItem;\r\n\r\n      if (hoveredItem && !sameItem) {\r\n        call(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      call(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\r\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\r\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\r\n  return {itemWidth, itemHeight};\r\n}\r\n\r\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\r\n  let legendItemText = legendItem.text;\r\n  if (legendItemText && typeof legendItemText !== 'string') {\r\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\r\n  }\r\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\r\n}\r\n\r\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\r\n  let itemHeight = _itemHeight;\r\n  if (typeof legendItem.text !== 'string') {\r\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\r\n  }\r\n  return itemHeight;\r\n}\r\n\r\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\r\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\r\n  return fontLineHeight * labelHeight;\r\n}\r\n\r\nfunction isListened(type, opts) {\r\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default {\r\n  id: 'legend',\r\n\r\n  /**\r\n\t * For tests\r\n\t * @private\r\n\t */\r\n  _element: Legend,\r\n\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n\r\n  // During the beforeUpdate step, the layout configuration needs to run\r\n  // This ensures that if the legend position changes (via an option update)\r\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n\r\n  // The labels need to be built after datasets are updated to ensure that colors\r\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n\r\n\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n\r\n    // a callback that will handle\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n\r\n    onHover: null,\r\n    onLeave: null,\r\n\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      // Generates labels shown in the legend\r\n      // Valid properties to return:\r\n      // text : text to display\r\n      // fillStyle : fill of coloured box\r\n      // strokeStyle: stroke of coloured box\r\n      // hidden : if this legend item refers to a hidden item\r\n      // lineCap : cap style for line\r\n      // lineDash\r\n      // lineDashOffset :\r\n      // lineJoin :\r\n      // lineWidth :\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\r\n\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\r\n\r\n            // Below is extra data used for toggling the datasets\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n","import Element from '../core/core.element.js';\r\nimport layouts from '../core/core.layouts.js';\r\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\r\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\r\nimport {renderText} from '../helpers/helpers.canvas.js';\r\n\r\nexport class Title extends Element {\r\n  /**\r\n\t * @param {{ ctx: any; options: any; chart: any; }} config\r\n\t */\r\n  constructor(config) {\r\n    super();\r\n\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n\r\n    this.left = 0;\r\n    this.top = 0;\r\n\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\n\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\n\r\nexport default {\r\n  id: 'title',\r\n\r\n  /**\r\n\t * For tests\r\n\t * @private\r\n\t */\r\n  _element: Title,\r\n\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000         // by default greater than legend (1000) to be above\r\n  },\r\n\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n","import {Title} from './plugin.title.js';\r\nimport layouts from '../core/core.layouts.js';\r\n\r\nconst map = new WeakMap();\r\n\r\nexport default {\r\n  id: 'subtitle',\r\n\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\r\n  },\r\n\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n","import Animations from '../core/core.animations.js';\r\nimport Element from '../core/core.element.js';\r\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\r\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\r\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\r\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\r\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\r\nimport {createContext, drawPoint} from '../helpers/index.js';\r\n\r\n/**\r\n * @typedef { import('../platform/platform.base.js').Chart } Chart\r\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\r\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\r\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\r\n */\r\n\r\nconst positioners = {\r\n  /**\r\n\t * Average mode places the tooltip at the average position of the elements shown\r\n\t */\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n\r\n  /**\r\n\t * Gets the tooltip position nearest of the item nearest to the event position\r\n\t */\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\n\r\n// Helper to push or concat based on if the 2nd parameter is an array or not\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      // base = base.concat(toPush);\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n\r\n  return base;\r\n}\r\n\r\n/**\r\n * Returns array of strings split by newline\r\n * @param {*} str - The value to split by newline.\r\n * @returns {string|string[]} value if newline present - Returned from String split() method\r\n * @function\r\n */\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\n\r\n\r\n/**\r\n * Private helper to create a tooltip item model\r\n * @param {Chart} chart\r\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\r\n * @return new tooltip item\r\n */\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\n\r\n/**\r\n * Get the size of the tooltip\r\n */\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n\r\n  // Count of all lines in the body\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    // Body lines may include some extra height depending on boxHeight\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n\r\n  // Title width\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n\r\n  ctx.save();\r\n\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n\r\n  // Body width\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n\r\n  // Body lines may include some extra width due to the color box\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n\r\n  // Reset back to 0\r\n  widthPadding = 0;\r\n\r\n  // Footer width\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n\r\n  ctx.restore();\r\n\r\n  // Add padding\r\n  width += padding.width;\r\n\r\n  return {width, height};\r\n}\r\n\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\n\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n\r\n  return xAlign;\r\n}\r\n\r\n/**\r\n * Helper to get the alignment of a tooltip given the size\r\n */\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\n\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\n\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  // eslint-disable-next-line prefer-const\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\n\r\n/**\r\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n */\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\n\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\n\r\n/**\r\n * Helper to build before and after body lines\r\n */\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\n\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\n\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\n\r\nconst defaultCallbacks = {\r\n  // Args are: (tooltipItems, data)\r\n  beforeTitle: noop,\r\n  title(tooltipItems) {\r\n    if (tooltipItems.length > 0) {\r\n      const item = tooltipItems[0];\r\n      const labels = item.chart.data.labels;\r\n      const labelCount = labels ? labels.length : 0;\r\n\r\n      if (this && this.options && this.options.mode === 'dataset') {\r\n        return item.dataset.label || '';\r\n      } else if (item.label) {\r\n        return item.label;\r\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n        return labels[item.dataIndex];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  },\r\n  afterTitle: noop,\r\n\r\n  // Args are: (tooltipItems, data)\r\n  beforeBody: noop,\r\n\r\n  // Args are: (tooltipItem, data)\r\n  beforeLabel: noop,\r\n  label(tooltipItem) {\r\n    if (this && this.options && this.options.mode === 'dataset') {\r\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n    }\r\n\r\n    let label = tooltipItem.dataset.label || '';\r\n\r\n    if (label) {\r\n      label += ': ';\r\n    }\r\n    const value = tooltipItem.formattedValue;\r\n    if (!isNullOrUndef(value)) {\r\n      label += value;\r\n    }\r\n    return label;\r\n  },\r\n  labelColor(tooltipItem) {\r\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n    return {\r\n      borderColor: options.borderColor,\r\n      backgroundColor: options.backgroundColor,\r\n      borderWidth: options.borderWidth,\r\n      borderDash: options.borderDash,\r\n      borderDashOffset: options.borderDashOffset,\r\n      borderRadius: 0,\r\n    };\r\n  },\r\n  labelTextColor() {\r\n    return this.options.bodyColor;\r\n  },\r\n  labelPointStyle(tooltipItem) {\r\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n    return {\r\n      pointStyle: options.pointStyle,\r\n      rotation: options.rotation,\r\n    };\r\n  },\r\n  afterLabel: noop,\r\n\r\n  // Args are: (tooltipItems, data)\r\n  afterBody: noop,\r\n\r\n  // Args are: (tooltipItems, data)\r\n  beforeFooter: noop,\r\n  footer: noop,\r\n  afterFooter: noop\r\n};\r\n\r\n/**\r\n * Invoke callback from object with context and arguments.\r\n * If callback returns `undefined`, then will be invoked default callback.\r\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\r\n * @param {keyof typeof defaultCallbacks} name\r\n * @param {*} ctx\r\n * @param {*} arg\r\n * @returns {any}\r\n */\r\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\r\n  const result = callbacks[name].call(ctx, arg);\r\n\r\n  if (typeof result === 'undefined') {\r\n    return defaultCallbacks[name].call(ctx, arg);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport class Tooltip extends Element {\r\n\r\n  /**\r\n   * @namespace Chart.Tooltip.positioners\r\n   */\r\n  static positioners = positioners;\r\n\r\n  constructor(config) {\r\n    super();\r\n\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\r\n    // and `labelTextColors` to create a single variable\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n\r\n    return animations;\r\n  }\r\n\r\n  /**\r\n\t * @protected\r\n\t */\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n\r\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\r\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\r\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\r\n\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n\r\n    return lines;\r\n  }\r\n\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(\r\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\r\n    );\r\n  }\r\n\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\r\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\r\n\r\n      bodyItems.push(bodyItem);\r\n    });\r\n\r\n    return bodyItems;\r\n  }\r\n\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(\r\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\r\n    );\r\n  }\r\n\r\n  // Get the footer and beforeFooter and afterFooter lines\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n\r\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\r\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\r\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\r\n\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n\r\n    return lines;\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n\r\n    // If the user provided a filter function, use it to modify the tooltip items\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n\r\n    // If the user provided a sorting function, use it to modify the tooltip items\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n\r\n    // Determine colors for boxes\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\r\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\r\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\r\n    });\r\n\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n\r\n        // Left draws bottom -> top, this y1 is on the bottom\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n\r\n        // Right draws top -> bottom, thus y1 is on the top\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n\r\n        // Top draws left -> right, thus x1 is on the left\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n\r\n        // Bottom draws right -> left, thus x1 is on the right\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\r\n\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * @private\r\n\t */\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColor = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      // Recalculate x and y for drawPoint() because its expecting\r\n      // x and y to be center of figure (instead of top left)\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n\r\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n\r\n      // Draw the point\r\n      ctx.strokeStyle = labelColor.borderColor;\r\n      ctx.fillStyle = labelColor.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      // Border\r\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\r\n      ctx.strokeStyle = labelColor.borderColor;\r\n      ctx.setLineDash(labelColor.borderDash || []);\r\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\r\n\r\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\r\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\r\n\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        // Inner square\r\n        ctx.fillStyle = labelColor.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        // Normal rect\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        // Inner square\r\n        ctx.fillStyle = labelColor.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n\r\n    // restore fillStyle\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n\r\n    // Before body lines\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n\r\n    // Draw body lines now\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n\r\n      lines = bodyItem.lines;\r\n      // Draw Legend-like boxes if needed\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        // Reset for any lines that don't include colorbox\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n\r\n    // Reset back to 0 for after body\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n\r\n    // After body lines\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing; // Remove last body spacing\r\n  }\r\n\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n\r\n      footerFont = toFont(options.footerFont);\r\n\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n\r\n    ctx.fill();\r\n\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Update x/y animation targets when _active elements are animating too\r\n\t * @private\r\n\t */\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if the tooltip will draw anything\r\n   * @returns {boolean} True if the tooltip will render\r\n   */\r\n  _willRender() {\r\n    return !!this.opacity;\r\n  }\r\n\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n\r\n    this._updateAnimationTarget(options);\r\n\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n\r\n    // IE11/Edge does not like very small opacities, so snap to 0\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n\r\n    const padding = toPadding(options.padding);\r\n\r\n    // Truthy/falsey value for empty tooltip\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n\r\n      // Draw Background\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n\r\n      overrideTextDirection(ctx, options.textDirection);\r\n\r\n      pt.y += padding.top;\r\n\r\n      // Titles\r\n      this.drawTitle(pt, ctx, options);\r\n\r\n      // Body\r\n      this.drawBody(pt, ctx, options);\r\n\r\n      // Footer\r\n      this.drawFooter(pt, ctx, options);\r\n\r\n      restoreTextDirection(ctx, options.textDirection);\r\n\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Get active elements in the tooltip\r\n\t * @returns {Array} Array of elements that are active in the tooltip\r\n\t */\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n\r\n  /**\r\n\t * Set active elements in the tooltip\r\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\r\n\t * @param {object} eventPosition Synthetic event position used in positioning\r\n\t */\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Handle an event\r\n\t * @param {ChartEvent} e - The event to handle\r\n\t * @param {boolean} [replay] - This is a replayed event (from update)\r\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\r\n\t * @returns {boolean} true if the tooltip changed\r\n\t */\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n\r\n    // When there are multiple items shown, but the tooltip position is nearest mode\r\n    // an update may need to be made because our position may have changed even though\r\n    // the items are the same as before.\r\n    const positionChanged = this._positionChanged(active, e);\r\n\r\n    // Remember Last Actives\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n\r\n    // Only handle target event on tooltip change\r\n    if (changed) {\r\n      this._active = active;\r\n\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n\r\n    return changed;\r\n  }\r\n\r\n  /**\r\n\t * Helper for determining the active elements for event\r\n\t * @param {ChartEvent} e - The event to handle\r\n\t * @param {InteractionItem[]} lastActive - Previously active elements\r\n\t * @param {boolean} [replay] - This is a replayed event (from update)\r\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\r\n\t * @returns {InteractionItem[]} - Active elements\r\n\t * @private\r\n\t */\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n\r\n    if (!inChartArea) {\r\n      // Let user control the active elements outside chartArea. Eg. using Legend.\r\n      return lastActive;\r\n    }\r\n\r\n    // Find Active Elements for tooltips\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n\r\n    return active;\r\n  }\r\n\r\n  /**\r\n\t * Determine if the active elements + event combination changes the\r\n\t * tooltip position\r\n\t * @param {array} active - Active elements\r\n\t * @param {ChartEvent} e - Event that triggered the position change\r\n\t * @returns {boolean} True if the position has changed\r\n\t */\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\n\r\nexport default {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n\r\n    if (tooltip && tooltip._willRender()) {\r\n      const args = {\r\n        tooltip\r\n      };\r\n\r\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\r\n        return;\r\n      }\r\n\r\n      tooltip.draw(chart.ctx);\r\n\r\n      chart.notifyPlugins('afterTooltipDraw', args);\r\n    }\r\n  },\r\n\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      // If the event is replayed from `update`, we should evaluate with the final positions.\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        // notify chart about the change, so it will render\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: defaultCallbacks\r\n  },\r\n\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n\r\n  // Resolve additionally from `interaction` options and defaults.\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-nocheck\r\n\r\n/**\r\n * @namespace Chart\r\n */\r\nimport Chart from './core/core.controller.js';\r\n\r\nimport * as helpers from './helpers/index.js';\r\nimport _adapters from './core/core.adapters.js';\r\nimport Animation from './core/core.animation.js';\r\nimport animator from './core/core.animator.js';\r\nimport Animations from './core/core.animations.js';\r\nimport * as controllers from './controllers/index.js';\r\nimport DatasetController from './core/core.datasetController.js';\r\nimport Element from './core/core.element.js';\r\nimport * as elements from './elements/index.js';\r\nimport Interaction from './core/core.interaction.js';\r\nimport layouts from './core/core.layouts.js';\r\nimport * as platforms from './platform/index.js';\r\nimport * as plugins from './plugins/index.js';\r\nimport registry from './core/core.registry.js';\r\nimport Scale from './core/core.scale.js';\r\nimport * as scales from './scales/index.js';\r\nimport Ticks from './core/core.ticks.js';\r\n\r\n// Register built-ins\r\nChart.register(controllers, scales, elements, plugins);\r\n\r\nChart.helpers = {...helpers};\r\nChart._adapters = _adapters;\r\nChart.Animation = Animation;\r\nChart.Animations = Animations;\r\nChart.animator = animator;\r\nChart.controllers = registry.controllers.items;\r\nChart.DatasetController = DatasetController;\r\nChart.Element = Element;\r\nChart.elements = elements;\r\nChart.Interaction = Interaction;\r\nChart.layouts = layouts;\r\nChart.platforms = platforms;\r\nChart.Scale = Scale;\r\nChart.Ticks = Ticks;\r\n\r\n// Compatibility with ESM extensions\r\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\r\nChart.Chart = Chart;\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.Chart = Chart;\r\n}\r\n\r\nexport default Chart;\r\n\r\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_request","_running","_update","Date","now","remaining","_charts","running","draw","_active","_total","tick","_lastDate","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","constructor","Map","undefined","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_target","_prop","elapsed","_start","_to","_from","_easing","_fn","wait","promises","_promises","Promise","rej","resolved","Animations","animationOptions","animatedProps","_properties","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getMeta","scaleID","_getOtherScale","reset","_destroy","_data","_dataCheck","adata","convertObjectDataToArray","isExtensible","_syncList","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","_type","getOptionScopes","createResolver","_cachedDataOpts","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","_drawStart","_drawCount","resolveDatasetElementOptions","resolveDataElementOptions","$context","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","enableOptionSharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","_objectData","supportsDecimation","_defineProperty","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","defaultRoutes","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","init","_userMin","_userMax","_suggestedMin","suggestedMin","_suggestedMax","suggestedMax","metas","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","xLabels","yLabels","getLabelItems","_labelItems","_computeLabelItems","_cache","_dataLimitsCached","beforeUpdate","sampleSize","_margins","_labelSizes","_gridLineItems","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_range","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","labelRotation","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","_longestTextCache","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_ticksLength","_borderValue","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","super","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_each","addControllers","controllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","_typedRegistries","PluginService","notify","hook","_init","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","clearCache","_scopeCache","clear","_resolverCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","initConfig","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","static","invalidatePlugins","_aspectRatio","_options","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","attached","_doResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_metasets","_destroyDatasetMeta","_sortedMetasets","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_plugins","_minPadding","_updateLayout","_updateDatasets","_lastEvent","_eventHandler","_updateHoverStyles","existingEvents","_listeners","newEvents","_responsiveListeners","unbindEvents","_hiddenIndices","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","userConfig","initialCanvas","existingChart","resizeDelay","abstract","version","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","outerRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","innerRadius","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_pointsUpdated","_points","_segments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","added","_addedLabels","_valueRange","_startValue","relativeLabelSize","minSpacing","LinearScaleBase","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","_endValue","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_unit","_getLabelCapacity","determineUnitForFormatting","_majorUnit","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","_offsets","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_getTimestampsForTable","_table","buildLookupTable","_minPos","_tableRange","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","buildLabels","legendItems","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","legendHitBoxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","_hoveredItem","sameItem","_added","doughnutMode","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_cachedAnimations","_tooltipItems","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","labelColors","labelPointStyles","labelTextColors","itemSort","dataPoints","_eventPosition","_size","positionAndSize","backgroundPoint","opacity","caretX","caretY","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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","x_google_ignoreList":[5]}